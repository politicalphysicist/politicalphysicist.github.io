<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The Political Physicist</title><link href="https://politicalphysicist.github.io/" rel="alternate"></link><link href="https://politicalphysicist.github.io/feeds/all.atom.xml" rel="self"></link><id>https://politicalphysicist.github.io/</id><updated>2016-09-27T01:00:00+01:00</updated><entry><title>No Limits on theÂ Left</title><link href="https://politicalphysicist.github.io/no-limits-on-the-left.html" rel="alternate"></link><published>2016-09-27T01:00:00+01:00</published><updated>2016-09-27T01:00:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2016-09-27:no-limits-on-the-left.html</id><summary type="html">&lt;p&gt;&lt;img alt="The left-wing extremest/Leader of Her Majesty's Most Loyal Opposition" src="https://politicalphysicist.github.io/images/JeremyCorbyn.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s something you won&amp;#8217;t hear everyday: I&amp;#8217;m to the left of
&lt;a href="https://en.wikipedia.org/wiki/Jeremy_Corbyn"&gt;Jeremy Corbyn&lt;/a&gt;. If you
listened to much of the British media, you wouldn&amp;#8217;t think that&amp;#8217;s
possible, given that the now twice-elected leader of the Labour Party
is apparently a Lenin-loving, Hamas-hugging, business-bashing commie
fiend dead-set on nationalising your children and making them go on
strike in reopened coal mines. And yet, here I am, proudly nailing my
colours to the mast, revealing them to being considerably redder than
those of certain bearded&amp;nbsp;Bolshevik.&lt;/p&gt;
&lt;p&gt;In all seriousness, anyone who is actually paying attention to what
Corbyn has been saying and is being intellectually honest will have to
admit that his politics aren&amp;#8217;t &lt;em&gt;that&lt;/em&gt; radical. He&amp;#8217;s promised
significant public investment, a move away from fossil fuels, faster
Internet connections, stronger collective bargaining, and a number of
other extremely welcome measures which nonetheless would keep Britain
a firmly capitalism society. The only industry which he&amp;#8217;s promised to
nationalise is rail, which is so obviously sensible that even a
majority of Tory voters support it, and possibly portions of the bus
network. This barely scratches the surface of the nationalisations
overseen by
&lt;a href="https://en.wikipedia.org/wiki/Clement_Attlee"&gt;Clem Attlee&amp;#8217;s&lt;/a&gt; postwar
Labour government, let alone the sorts of proposals put forward by
&lt;a href="https://en.wikipedia.org/wiki/Tony_Benn"&gt;Tony Benn&lt;/a&gt; (&lt;em&gt;de facto&lt;/em&gt;
leader of the Labour Left) in the 1970s and &amp;#8216;80s. This is not to say
that I don&amp;#8217;t think that, at heart, Corbyn is considerably more radical
than his policies suggest, but his actual platform is some way to the
right of what I&amp;#8217;d&amp;nbsp;like.&lt;/p&gt;
&lt;p&gt;But I&amp;#8217;m not writing this simply to moan about Corbyn being too
moderate or betraying his roots or anything like that. I get that he
is in a difficult position where he has to put forward policy which
can win elections, hold the Labour Party together, and successfully be
implemented without insurmountable resistance from the
&lt;a href="https://en.wikipedia.org/wiki/Yes_Minister"&gt;civil service&lt;/a&gt; or
&lt;a href="https://en.wikipedia.org/wiki/A_Very_British_Coup#Differences_between_novel_and_TV"&gt;military&lt;/a&gt;. At
some point compromises are going to be made and some of those are not
going to be ones which I&amp;#8217;ll find acceptable. A case in point is the
recent move of some of those around the leadership to
&lt;a href="https://www.theguardian.com/uk-news/2016/sep/26/jeremy-corbyn-puts-aside-objections-to-renewing-trident"&gt;get behind the renewal&lt;/a&gt;
of the Trident nuclear weapons&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;. I get that this may be seen as a
necessary compromise if they are to pursue their agenda of
democratising the economy. At the same time, though, I &lt;strong&gt;can not in
any way support&lt;/strong&gt; any policy which would see tens, if not hundreds, of
billions of pounds spent on weapons of mass destruction. It would be
bad enough keeping the weapons if they were already built and just
sitting there, but it is utterly unconscionable to actually be
spending the money to build them yourself. Yes, the renewal will
likely be underway by the time Labour could hypothetically be elected,
but it will not be finished, will still be costing money, and could
still be&amp;nbsp;stopped.&lt;/p&gt;
&lt;p&gt;One of the problems we now face is that the Labour Party now has no
left wing. Most people would look at me very strangely indeed for
saying that, given that one of its most left wing MPs is now the
leader.  What I mean is that there is now no one to the left of the
leader who can hold him to account and act as the party&amp;#8217;s
conscience. Having an uncompromising left block in parliament is
important because it is able to act as a counterweight on the
leadership when it is under pressure from business, the civil service,
or the international community to abandon its goals. This is similar
to the problem experienced in places like Bolivia and
&lt;a href="https://www.jacobinmag.com/2015/08/panitch-greece-baltas-syriza-leadership-tsipras/"&gt;Greece&lt;/a&gt;
where the most capable left-wing organisers ended up being drawn into
the state, with little capacity for independent organising&amp;nbsp;left.&lt;/p&gt;
&lt;p&gt;Ideally this could be a role played by the membership, or at least a
subset of it. However, most of the new members are left-progressive
types rather than hard-core socialists (let-alone the
&lt;a href="https://www.jacobinmag.com/2016/08/watson-corbyn-red-scare-militant-trotskyists/"&gt;Trotskyists&lt;/a&gt;
that the media would have us believe no run the party). These are
people who would have voted
&lt;a href="https://en.wikipedia.org/wiki/Green_Party_of_England_and_Wales"&gt;Green&lt;/a&gt;
or &lt;a href="https://en.wikipedia.org/wiki/Plaid_Cymru"&gt;Plaid Cymru&lt;/a&gt; or
&lt;a href="https://en.wikipedia.org/wiki/Scottish_National_Party"&gt;&lt;span class="caps"&gt;SNP&lt;/span&gt;&lt;/a&gt; or even
&lt;a href="https://en.wikipedia.org/wiki/Liberal_Democrats"&gt;Lib-Dem&lt;/a&gt; in previous
elections and are not familiar with the detailed socialist
analysis&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;. I don&amp;#8217;t mean to be condescending to these people, as
socialists must be able to reach out to them and convince them, but my
point is that quite a bit of work is required before much of the
membership is likely to be able to act as a significant counterweight
to right-wing pressure on the leadership. The fact that much of the
politics of these new members seems to be based around supporting
Corbyn will also make it more difficult for them to apply pressure on
him when&amp;nbsp;necessary.&lt;/p&gt;
&lt;p&gt;Many of the left-wing currents within labour are not helping with
this. While they could be staking out a space to develop the left
policy they want, without having to worry so much about not
antagonising the Labour Right, instead their approach seems to be to
provide uncritical support to the leadership and its policies. The
&lt;a href="https://www.facebook.com/JeremyCorbyn4PM/"&gt;Jeremy Corbyn for &lt;span class="caps"&gt;PM&lt;/span&gt;&lt;/a&gt;
Facebook page seems to consist mainly of praising whatever the
leadership says, while &lt;a href="http://www.peoplesmomentum.com/"&gt;Momentum&lt;/a&gt; has
been little more than a Jeremy Corbyn fan club. Both display a
slightly revolting level of sycophancy and&amp;nbsp;hero-worship.&lt;/p&gt;
&lt;p&gt;This must not continue. We on the left must not be afraid to publicly
disagree with the leadership if they are doing something which we
consider to be wrong. Motions should be put forward to conference
calling for more radical actions than Corbyn has been willing to
discuss so far. I&amp;#8217;m not saying that we should just propose whatever we
want, regardless of its practicality or ability to get traction with
the electorate. There&amp;#8217;s no point trying to get a demand for collective
ownership of the means of production and distribution into the next
Labour manifesto&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; or to propose budgets using misleading
figures. We still need to consider what is achievable, but if our
opinion on this differs from that of the leadership (as mine does in
many cases) then we should not be afraid to say&amp;nbsp;so.&lt;/p&gt;
&lt;p&gt;Jeremy Corbyn&amp;#8217;s positions should not represent the limit of left wing&amp;nbsp;policy.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;The reference to &lt;span class="caps"&gt;NATO&lt;/span&gt; a collectivist, internationalist organisation during this speech also really took the cake.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;By which I mean a &lt;a href="https://en.wikipedia.org/wiki/Historical_materialism"&gt;materialist&lt;/a&gt; approach to history and society, with all that this entails. &amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;But stating this as a long term goal in the &lt;a href="https://en.wikipedia.org/wiki/Clause_IV"&gt;party constitution&lt;/a&gt;, on the other hand&amp;#8230;&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="UK"></category><category term="Labour"></category><category term="Corbyn"></category><category term="British Politics"></category><category term="Nuclear Weapons"></category></entry><entry><title>You Donât Have to Like Brexit, But You do Have to Live WithÂ it</title><link href="https://politicalphysicist.github.io/you-dont-have-to-like-brexit-but-you-do-have-to-live-with-it.html" rel="alternate"></link><published>2016-06-25T00:30:00+01:00</published><updated>2016-06-25T00:30:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2016-06-25:you-dont-have-to-like-brexit-but-you-do-have-to-live-with-it.html</id><summary type="html">&lt;p&gt;Well, the vote was for Brexit. I am stating this as a fact, not meaning to
place any particular mourning or celebration in it. I can&amp;#8217;t say I&amp;#8217;m a fan of
the &lt;span class="caps"&gt;EU&lt;/span&gt;. I think it is neoliberal and unaccountable, probably
irredeemably so in both cases. But I take no joy in the outcome of
this vote. The narrative leading to Brexit was not one of building a
better future based on cooperation, without the constant calls for
greater &amp;#8220;competitiveness&amp;#8221;. Instead, it was a narrative of
out-of-control immigration, the interfering outsiders, Britain no
longer being Great thanks to the burdens of the &lt;span class="caps"&gt;EU&lt;/span&gt;. It was not a
pleasant campaign for those of us on the&amp;nbsp;Left.&lt;/p&gt;
&lt;p&gt;Let me be clear: I am a believer in democratic
European federalism. However, I have serious doubts that the &lt;span class="caps"&gt;EU&lt;/span&gt; can
ever become such a system, given its extreme democratic deficit. At
best, I think that a set of countries, which would like need to be
lead by Leftist governments, would essentially secede from the &lt;span class="caps"&gt;EU&lt;/span&gt; at
once to form some other institution.  More likely,
any such government would be forced out of the &lt;span class="caps"&gt;EU&lt;/span&gt; if it tried to
implement a serious Leftist program, long before a coordinated
secession could be achieved. I don&amp;#8217;t think the &lt;span class="caps"&gt;EU&lt;/span&gt; will ever be
a conducive battleground for Leftist&amp;nbsp;ideas.&lt;/p&gt;
&lt;p&gt;So, this leaves us in a depressing state. The exit vote was driven by
right-wing narratives, while staying would have locked us into a neoliberal
framework. I knew this was the choice ahead of us long before the vote
occurred. We were faced only with bad outcomes. Given that, I
won&amp;#8217;t condemn anyone on the Left for their choices, whether they voted
to leave, remain, spoiled their ballot, or abstained. I knew that,
however they voted, Leftists were not motivated by racism or
nationalism but by a genuine concern for building a better world. I knew that,
regardless of the result of the vote, we were going to need to fight
harder than ever to build international solidarity, to develop
coherent policies for a socialist program, to bring the hundreds of
thousands, if not millions, of dispossessed Britons and Europeans into
the struggle for a better&amp;nbsp;future.&lt;/p&gt;
&lt;p&gt;Well, the vote was for Brexit. We have to accept that. We don&amp;#8217;t have
to like it or agree with it, but we have to accept it. Calling the
people who voted for it stupid, or racists, or saying that you&amp;#8217;re
ashamed to be British isn&amp;#8217;t going to do any good. In fact, it will
only alienate the Brexit voters&amp;#8212;who we&amp;#8217;ll need if the Left is ever to
get elected&amp;#8212;even more. Today may well have been a defeat for
the Left, but the Left has had almost nothing but defeats in this
country (or anywhere else) since 1979. We know how to keep on
going. Raging against the outcome won&amp;#8217;t help us do&amp;nbsp;that. &lt;/p&gt;
&lt;p&gt;The Brexit vote happened. We don&amp;#8217;t yet know what the final resolution to
this story will be, but we have to do everything in our power to ensure
that our future outside of the European Union is as just and humane as&amp;nbsp;possible.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: My reaction to the vote on leaving the &lt;span class="caps"&gt;EU&lt;/span&gt; was confusing and
complex. This was an attempt to put it into words. I&amp;#8217;m not entirely
satisfied with what I&amp;#8217;ve written; I feel like I could have been more
eloquent and have perhaps missed a few points. Nonetheless, I&amp;#8217;ve
managed to clarify and codify at least some of my thoughts on this
confusing&amp;nbsp;issue.&lt;/em&gt;&lt;/p&gt;</summary><category term="UK"></category><category term="EU"></category><category term="British Politics"></category><category term="Europe"></category><category term="Brexit"></category></entry><entry><title>Tsipras, go toÂ Hell</title><link href="https://politicalphysicist.github.io/tsipras-go-to-hell.html" rel="alternate"></link><published>2015-07-10T23:30:00+01:00</published><updated>2015-07-10T23:30:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2015-07-10:tsipras-go-to-hell.html</id><summary type="html">&lt;p&gt;&lt;em&gt;Edit: Once the initial disappointment was over, I was able to step back and
appreciate that this was a rather infantile post. While I stand by my comments
that Tsipras was naive and feel that, if they weren&amp;#8217;t going to use it to fight
back against the &lt;span class="caps"&gt;EU&lt;/span&gt;, calling the referendum was ultimately harmful because of
the ensuing economic turmoil, name calling such as this is
not very helpful. On the other hand, I don&amp;#8217;t wish to erase history, so I have
decided to leave the post up, but with this&amp;nbsp;disclaimer.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;January 21,&amp;nbsp;2016&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So it&amp;#8217;s come to this. After my fierce criticism a
&lt;a href="https://politicalphysicist.github.io/greeks-bearing-debts.html"&gt;few weeks ago&lt;/a&gt;,
Greek prime minister Alexis Tsipras briefly managed to redeem himself somewhat
in my opinion by calling a referendum on the (incredibly bad) deal which Greece
had been offered and asking people to vote &amp;#8220;no&amp;#8221; (&amp;#8220;oxi,&amp;#8221; in Greek). As the
population was scared of the possibility of being forced out of the Euro,
everyone expected the result to be close and no one was sure which way it would
go. Much to everyone&amp;#8217;s surprise, Greeks gave &amp;#8220;oxi&amp;#8221; a landslide victory of over
60%. Finally, I thought, Tsipras might actually play hardball with&amp;nbsp;Europe.&lt;/p&gt;
&lt;p&gt;&lt;img alt="One of the few remotely unflattering pictures of Greek PM Alexis Tsipras" src="https://politicalphysicist.github.io/images/tsipras-bad-photo.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Of course, Europe took no notice. They
&lt;a href="http://www.theguardian.com/world/2015/jul/07/greece-crisis-eurozone-tsipras-banking-collapse"&gt;told him&lt;/a&gt;
he had until midnight Wednesday
to submit a &amp;#8220;credible&amp;#8221; proposal for a deal, or Europe would begin preparing
for Greece&amp;#8217;s departure from the Eurozone (the so-called &amp;#8220;Grexit&amp;#8221;).
So now Tsipras has
&lt;a href="http://www.theguardian.com/business/2015/jul/09/greece-debt-crisis-athens-accepts-harsh-austerity-as-bailout-deal-nears"&gt;submitted a proposal&lt;/a&gt;
for a deal that is objectively worse than the one rejected in the&amp;nbsp;referendum. &lt;/p&gt;
&lt;p&gt;There is a lot that I could say about this. I could mention how incredibly
naive Tsipras and the leadership of his party (&lt;span class="caps"&gt;SYRIZA&lt;/span&gt;) were. I could mention
how incompetent there were when it came to planning for other eventualities.
I could question why they even held a referendum if this was to be the result.
But I&amp;#8217;m too frustrated to form a coherent blog post about that. In any case, it
has already been said by others, both
&lt;a href="https://www.jacobinmag.com/2015/07/tsipras-syriza-greece-euro-debt/"&gt;&lt;span class="caps"&gt;SYRIZA&lt;/span&gt; members&lt;/a&gt;
and international
&lt;a href="http://www.leninology.co.uk/2015/07/syriza-defeat-victory-defeat.html"&gt;sympathizers&lt;/a&gt;.
What I have to say is much simpler, far more puerile, and infinitely more&amp;nbsp;satisfying:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alexis Tsipras, go to Hell! Seriously, &lt;span class="caps"&gt;FUCK&lt;/span&gt; &lt;span class="caps"&gt;OFF&lt;/span&gt; &lt;span class="caps"&gt;TO&lt;/span&gt; &lt;span class="caps"&gt;HELL&lt;/span&gt;, &lt;span class="caps"&gt;YOU&lt;/span&gt; &lt;span class="caps"&gt;FUCKING&lt;/span&gt; &lt;span class="caps"&gt;QUISLING&lt;/span&gt;
&lt;span class="caps"&gt;BASTARD&lt;/span&gt;!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I want you to starve to death on the poverty income
that nearly half of all Greek pensioners are receiving. I want you to feel
the despair and hopelessness which has caused a
&lt;a href="http://www.cnbc.com/2015/02/04/greek-austerity-sparks-sharp-rise-in-suicides.html"&gt;35% increase in suicides&lt;/a&gt;
since the beginnings of austerity. I want you to go down in history as a traitor
to your cause, more reviled by your party than even
&lt;a href="https://en.wikipedia.org/wiki/Ramsay_MacDonald"&gt;Ramsay MacDonald&lt;/a&gt; was in&amp;nbsp;Britain.&lt;/p&gt;
&lt;p&gt;It may well be true that the situation is complex and there are reasons for
what you did. But I don&amp;#8217;t care. I want you chained to a rock where buzzards
will peck out your liver each morning for the rest of eternity. Or perhaps you
could be made to push a bolder up a hill every day, only to have it roll back
down just before reaching the&amp;nbsp;summit.&lt;/p&gt;
&lt;p&gt;Barring that, I at least want you kicked out of your party and force from&amp;nbsp;office.&lt;/p&gt;</summary><category term="Austerity"></category><category term="Greece"></category><category term="SYRIZA"></category><category term="Alexis Tsipras"></category><category term="Rant"></category></entry><entry><title>Greeks BearingÂ Debts</title><link href="https://politicalphysicist.github.io/greeks-bearing-debts.html" rel="alternate"></link><published>2015-06-23T01:30:00+01:00</published><updated>2015-06-23T01:30:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2015-06-23:greeks-bearing-debts.html</id><summary type="html">&lt;p&gt;&lt;img alt="SYRIZA supporters celebrating their election victory in January" src="https://politicalphysicist.github.io/images/syrizaVictory.jpg" /&gt;
Just over five months ago, Greece elected a new government lead by left-wing
party &lt;span class="caps"&gt;SYRIZA&lt;/span&gt;. &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; comes out of a radical tradition rejecting both
reformist social democracy and authoritarian communism and was swept to power
on a wave of anti-austerity sentiment. Austerity refers to the massive cuts to
public spending (tending to hurt particularly those on lower incomes) which
Greece has endured over the past five years, along with
the associated policies of deregulation, cuts to the minimum wage, an end to
collective bargaining, and the privatization of anything which actually makes
a profit for the government. These policies have been devastating for Greece,
resulting in a 26% contraction in &lt;span class="caps"&gt;GDP&lt;/span&gt;, ~25% unemployment, over 50% youth
unemployment, and a humanitarian disaster as people can&amp;#8217;t get access to food,
energy, shelter, or basic healthcare.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Now, it is fair to say that Greece did borrow too much money over the years
leading up to the crisis. However, I think it is also fair to say that there
is an inverse relationship between someone&amp;#8217;s culpability for the debt and the
pain which they have experienced under austerity. It is also true that the
Greek state is hopelessly corrupt. That said, of all of the parties represented
in the Hellenic Parliament, &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; is probably the one with the greatest
commitment to try to tack&amp;nbsp;that.&lt;/p&gt;
&lt;p&gt;Anyway, none of this is new&amp;#8212;it was all equally the case when &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; was elected
in January. At that time, &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; had pledged to end austerity while staying a
part of the Eurozone and refraining from any unilateral actions (i.e. defaulting
on the debt). Given that Greeks overwhelmingly favour staying in the Euro, it
is not surprising that &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; would make such a commitment. They insisted that
they would be able to reverse austerity&amp;nbsp;by:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Immediately implementing the
&lt;a href="http://www.syriza.gr/article/SYRIZA---THE-THESSALONIKI-PROGRAMME.html#.VYjAUnMl_VM"&gt;Thessaloniki Program&lt;/a&gt;
which purported to provide a mild Keynseianism with the resources already
available to the Greek&amp;nbsp;government.&lt;/li&gt;
&lt;li&gt;Renegotiating the debt with Europe, on the basis that austerity clearly was
not leading to growth and was hurting the Eurozone as a whole. Furthermore, they
would point out that there was no way that Greece would ever be able to repay
the debt as the situations currently stands, whether they want to or&amp;nbsp;not.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However, it almost immediately&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; became clear to anyone who was watching with
a remotely level head that this would not be as easy as was claimed. The
leadership of &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; are die-hard Europeans who, reportedly, believe in the
European project (European integration which, in reality, means the &lt;span class="caps"&gt;EU&lt;/span&gt; and the
Euro) at a deep emotional level. They were thus extremely reluctant to
countenance any sort of break with Europe, even without considering that public
opinion took a similar view. It would thus appear that they genuinely thought
that, if they were to sit down and explain to the &lt;span class="caps"&gt;EU&lt;/span&gt; why austerity was
wrong-headed then it would see the light. Now, I certainly would not condemn
giving this a try&amp;#8212;after all, what have they got to loose? But I found it
incredibly hard to believe that they would go into these quixotic negotiations
without even a sketch of an alternative plan to pursue if they&amp;nbsp;failed.&lt;/p&gt;
&lt;p&gt;And yet that is what seems to be the case. In February, prompted by the
potential collapse of the Greek banking sector, Athens signed a deal with the
European Commission, the European Central Bank, and the International Monetary
Fund (previously called &amp;#8220;the Troika,&amp;#8221; since renamed &amp;#8220;the institutions&amp;#8221; or &amp;#8220;the
Brussels group&amp;#8221; for reasons of political spin) in order to ensure that the
European Central Bank would keep it afloat. However, this deal represented
a &lt;a href="https://www.jacobinmag.com/2015/02/syriza-euro-austerity-troika/"&gt;major retreat&lt;/a&gt;
from their election promises, as it committed them to austerity (with vague
enough language that &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; naively hoped that they could wriggle out of it)
and forbade them from passing any legislation which could, in the view of
&amp;#8220;the institutions,&amp;#8221; endanger the Greek &amp;#8220;recovery.&amp;#8221; The worst part of all of this
was that the &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; leadership tried to portray this as a victory and proof that
it was possible to negotiate a resolution with&amp;nbsp;Europe.&lt;/p&gt;
&lt;p&gt;However, since that time, Greece has not actually seen any of the money that
they were promised from the Troika, as they must first start to implement the
structural adjustments demanded. This has left Athens with very little money
to make repayments on various loans coming due and, over the past few month,
the government has been drained of any remaining cash. With a major repayment
due to the &lt;span class="caps"&gt;IMF&lt;/span&gt; at the end of June, things were getting&amp;nbsp;desperate.&lt;/p&gt;
&lt;p&gt;In an attempt to get access to the funds that they had been promised, the Greek
government began backsliding on ever more of their promises. A call to halt
(and even reverse) privatizations gave way to pursuing &amp;#8220;partnerships&amp;#8221; with the
private sector to develop state assets, to partial privatization, to
privatization full-stop. Commitments to restore pensions to their previous
levels became a promise not to decrease them further. Promises to reduce sales
tax have turned into pledges not to raise it on essential items. A goal of
running balanced budgets (rather than a surplus) became a request to simply run
a smaller surplus. And any talk of a comprehensive investment plan to spur
growth has vanished. &lt;span class="caps"&gt;SYRIZA&lt;/span&gt;&amp;#8217;s insistence that there were certain red lines which
they would not cross looked ever more&amp;nbsp;dubious.&lt;/p&gt;
&lt;p&gt;And now, at the eleventh hour, &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; has
&lt;a href="http://www.theguardian.com/business/2015/jun/22/greece-deal-red-lines-blur-and-bend"&gt;given way&lt;/a&gt;
on their pledges to protect pensions and not to raise sales tax. They&amp;#8217;ve even
succumbed to calls for a higher budget surplus. To be honest, I&amp;#8217;m somewhat
surprised by this; I had expected that if they were going to give in on those
issues then they would have done it before now. All I can conclude is that the
leadership really didn&amp;#8217;t know what it was doing and had persisted in the blind
belief that Europe was bluffing and would give in if they waited long enough.
But to anyone with half a brain it should have been obvious that this was a
delusion, at least after the agreement in&amp;nbsp;February.&lt;/p&gt;
&lt;p&gt;For &lt;span class="caps"&gt;SYRIZA&lt;/span&gt;&amp;#8217;s Left Platform, this has long been the case. Prominent members have
&lt;a href="https://www.jacobinmag.com/2015/03/greece-syriza-eurogroup-negotiations-austerity/"&gt;consistently&lt;/a&gt;
&lt;a href="https://www.jacobinmag.com/2015/04/syriza-eurozone-default-exit-stathis/"&gt;been calling&lt;/a&gt;
&lt;a href="https://www.jacobinmag.com/2015/05/kouvelakis-syriza-ecb-grexit/"&gt;for a&lt;/a&gt;
&lt;a href="https://www.jacobinmag.com/2015/05/greece-syriza-european-union-austerity-troika/"&gt;break with&lt;/a&gt;
&lt;a href="https://www.jacobinmag.com/2015/06/kouvelakis-greece-europe-negotiations-debt-default/"&gt;Europe&lt;/a&gt;
since February. Economist and &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; &lt;span class="caps"&gt;MP&lt;/span&gt; Costas Lapavitsas has been
&lt;a href="https://www.jacobinmag.com/2015/03/lapavitsas-varoufakis-grexit-syriza/"&gt;urging an exit&lt;/a&gt;
from the Eurozone since before the election and has
&lt;a href="http://www.versobooks.com/books/1949-against-the-troika"&gt;drawn up plans&lt;/a&gt;
for how this could be accomplished. A growing number of people on the left
of &lt;span class="caps"&gt;SYRIZA&lt;/span&gt;&amp;#8217;s mainstream faction have also been won over to this view after having
witnessed the ever greater concessions which have been offered in order to
avoid rupture with Europe. However, none of this has affected the official
discourse of the party and, as such, the Greek public has been fed the delusion
that relief from austerity is possible within the Euro and support for some sort
of compromise&amp;#8212;which, seeing as &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; has given way on virtually all of its
initial bargaining positions while the institutions have given way on hardly any, is
impossible. The end result: Greeks remain totally unprepared for any sort of
rupture with Europe, having been scared stiff by the media and pandering
&lt;span class="caps"&gt;SYRIZA&lt;/span&gt; politicians of the consequences of doing anything which might endanger
their place in the&amp;nbsp;Euro.&lt;/p&gt;
&lt;p&gt;So, what now? Well, there are
&lt;a href="http://www.nakedcapitalism.com/2015/06/deal-with-greece-still-looks-wobbly.html"&gt;still questions&lt;/a&gt;
over whether a deal will actually be reached. But if it is, &lt;span class="caps"&gt;SYRIZA&lt;/span&gt;&amp;#8217;s leaders
will still need to sell it to the rest of the party. And it is
&lt;a href="http://www.theguardian.com/business/2015/jun/23/greek-crisis-bailout-deal-eurozone-crucial-optimism-rises"&gt;not at all clear&lt;/a&gt; that this will happen. While it
may get the support of a majority of the cabinet, there is every sign that
&lt;span class="caps"&gt;SYRIZA&lt;/span&gt;&amp;#8217;s coalition partner will reject it (especially if it involves hikes
to sales tax) and I suspect that at least 20% of &lt;span class="caps"&gt;SYRIZA&lt;/span&gt;&amp;#8217;s own MPs would vote
against it. This would be enough to make &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; rely on the support of
opposition parties to pass such a bill, which would be humiliating and would
damage the party&amp;#8217;s&amp;nbsp;image.&lt;/p&gt;
&lt;p&gt;Furthermore, it remains a distinct possibility that the party&amp;#8217;s central
committee will vote down accepting any such deal. A few weeks ago there was
a vote on a motion to break with Europe, which lost 75-95. That means only 11
committee members would have to swing in order for such a proposal to win now.
Given the scope of &lt;span class="caps"&gt;SYRIZA&lt;/span&gt;&amp;#8217;s retreat, such a result would seem entirely
possible. Then there is the prospect of discontent in the party grassroots.
Already the youth wing has held protests indicating that they would prefer
&lt;a href="http://www.ft.com/intl/cms/s/0/6a111b26-1583-11e5-8e6a-00144feabdc0.html#axzz3dvfKopVr"&gt;&amp;#8220;chaos to capitulation&amp;#8221;&lt;/a&gt;.
So a split in the &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; ranks is looking increasingly&amp;nbsp;likeley.&lt;/p&gt;
&lt;p&gt;Now, onto the point which caused me to write this article: how should the
international Left respond to these developments? For months socialist across
Europe have been expressing solidarity with Greeks and the Greek government,
while upstart parties have been advertising themselves as the
&lt;a href="http://podemos.info/"&gt;Spanish&lt;/a&gt;/&lt;a href="http://leftunity.org/"&gt;British&lt;/a&gt;/&lt;a href="https://hdpenglish.wordpress.com/"&gt;Turkish&lt;/a&gt;
&lt;span class="caps"&gt;SYRIZA&lt;/span&gt;. Should they continue to offer &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; their
unconditional support? Should they condemn this&amp;nbsp;retreat?&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s a tricky question, made all the harder by these groups&amp;#8217; uncritical approach
to &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; over the past while. Billing yourself as a party in the image of
&lt;span class="caps"&gt;SYRIZA&lt;/span&gt; will be distinctly damaging if &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; is forced to retreat. I think it&amp;#8217;s
fair to say that we on the Left must continue to offer the Greek people our
solidarity. However, no such solidarity should be extended to any &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; member
who is willing to implement austerity. Fair enough, they are in an incredibly
difficult situation and it is all too easy for us to criticize when we can&amp;#8217;t
even imagine being able to form a government in our home countries. But the fact
remains, if we are to be at all consistent then we must not endorse anyone who
implements austerity, whether they come from a left-wing background or&amp;nbsp;not.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Free Greece from the European Prison" class="img-center" src="https://politicalphysicist.github.io/images/greeceEuropeCage.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;So what should &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; do? From the comfort of my armchair in a country which
has not been ravaged by austerity and is safely on its own currency and who
won&amp;#8217;t be hurt if things go wrong, here are
my thoughts. For starters, they should get rid of their
leader, Alexis Tsipras, finance minister, Yanis Varoufakis, and the inner circle
which surrounds them. This group has clearly revealed
themselves to be incapable of pushing back austerity in Greece, let alone of
laying the ground for overcoming capitalism. At the very least, Varoufakis
should be forced to&amp;nbsp;resign.&lt;/p&gt;
&lt;p&gt;Next comes the problem that &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; does not have a mandate for breaking with
Europe. As I said earlier, they were elected promising to end austerity while
remaining in the Eurozone. However, nor do they have any mandate to implement
austerity as they look prepared to do. I&amp;#8217;m not totally adverse to the concept
of pushing ahead and breaking with austerity, leaving the Euro if necessary,
mandate be damned. To be sure, such an approach has risks, but I can&amp;#8217;t help but
feel that those risks are better than the certainty of austerity-induced
misery within the Euro. 
In all probability, this will require a fresh election or a referendum in order
to justify it to the electorate. What&amp;#8217;s
more, there is a very good chance that &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; would lose such an election and
it would almost certainly lose such a referendum. Well, so be&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;If the Greek people decide that they would prefer austerity over leaving the
Euro, then &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; should resign. Let a party which really believes in austerity
be the one to implement it. &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; would be better off in opposition, agitating
for an end to austerity even if it does mean a break with Europe. This would be
a serious setback but, unlike giving in to austerity, not a fatal one.
Let &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; live to fight another&amp;nbsp;day.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Sorry I haven&amp;#8217;t provided any references here. It&amp;#8217;s fairly common knowledge for anyone whose been following the Greek crisis and I didn&amp;#8217;t have the energy to track the citations down when I was writing this.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;If it wasn&amp;#8217;t clear even before the election. &amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Austerity"></category><category term="Europe"></category><category term="SYRIZA"></category><category term="Socialism"></category><category term="Elections"></category></entry><entry><title>Blog,Â Rebooted</title><link href="https://politicalphysicist.github.io/blog-rebooted.html" rel="alternate"></link><published>2015-05-17T10:30:00+01:00</published><updated>2015-05-17T10:30:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2015-05-17:blog-rebooted.html</id><summary type="html">&lt;p&gt;&lt;img alt="The silhouette of a &amp;quot;dreaming spire&amp;quot; in Oxford. A larger version of my new favicon." src="https://politicalphysicist.github.io/images/spire-smaller.png" /&gt;
For awhile now I&amp;#8217;ve been meaning to create a new theme for my blog. Previously
I was using a modified version of the
&lt;a href="https://github.com/getpelican/pelican-themes/tree/master/gum"&gt;Gum theme&lt;/a&gt;, but
I wanted one which was all my own. I also decided that I wanted a distinctly
different look for my blog, using serif fonts and darker colours. Years of
procrastination finally came to an end when I knew that I would need to design
such a theme for a professional website (I&amp;#8217;ll post more on that once it&amp;#8217;s
finished) and thought I might as well design a similar blog theme while I was
at it. You can find the theme
&lt;a href="https://github.com/cmacmackin/backdrop-theme"&gt;on GitHub&lt;/a&gt;.
You may also notice
that I have a new favicon (shown here at higher resolution). This is the
silhouette of one of Oxford&amp;#8217;s many &amp;#8220;dreaming spires.&amp;#8221; For those of you who
don&amp;#8217;t know, I&amp;#8217;ll be starting my graduate studies at Oxford this fall. As I quite
like Oxford&amp;#8217;s nickname as &amp;#8220;the city of dreaming spires,&amp;#8221; I decided that
this would be a nice symbol for my blog. Incidentally, that silhouette was
traced from the image to the right (or on the bottom, depending on your screen&amp;nbsp;size).&lt;/p&gt;
&lt;p&gt;While I was at it, I got around to updating various pages on this website. I
have added a more detailed About page, provided an up-to-date listing of
software that I have written, and changed the Technical page to more accurately
represent how the blog now works. I have also reorganized the categories I give
articles, eliminating the two which had the fewest articles. As a note, those
articles were not deleted&amp;#8212;simply folded into other categories. The main
motivation for this was simply to ensure that everything fit well on the
navigation bar. Next year I will be moving back into residence for grad school
and thus won&amp;#8217;t be able to run a server on which to host my blog. In preparation
for this, I decided to move it to GitHub pages. This will likely also be (at
least temporarily) the host of my professional website, once it is&amp;nbsp;completed.&lt;/p&gt;
&lt;p&gt;Most importantly, I decided to change the name of my blog from &lt;em&gt;Red Shades of
Green&lt;/em&gt;. I had originally chosen that title in order to reflect that I was
concerned about the environment, but that I was a bit of a pinko. Since then,
I feel that I have become much more stridently left-wing and, at the same time,
have lost a certain amount of patience with the environmental movement and the
behaviour of ecosocialists. Not to say that I care about the environment any
less; I simply take a different approach to the issue than I used to&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;.
One which is more firmly pro-technology. And one which integrates environmental
issues into socialism, rather than the other way around. I suppose these days
a more accurate title would be &lt;em&gt;Green Shades of Red&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Instead I went with &lt;em&gt;The Political Physicist&lt;/em&gt;. At risk of explaining the
obvious, this is a play on political science. As a scientist (well, a student
scientist) who cares deeply about politics, you might say that I&amp;#8217;m a political
scientist. However, this makes it sound like I study political science, rather
than physics. And the rest, as they say, is&amp;nbsp;history.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Relativity is a communist conspiracy. Of course, as it happens, Einstein actually _was_ a socialist." class="img-center" src="https://politicalphysicist.github.io/images/SocialistRelativity.png" /&gt;&lt;/p&gt;
&lt;p&gt;But while the appearance, location, and name of my blog has changed, none of the
content has really. I will still write my extremely biased political articles.
I will still complain about petty things, like the use of the phrase &amp;#8220;growing
exponentially,&amp;#8221; and I&amp;#8217;ll still write in great detail about programming and
software despite the fact that most of my audience can&amp;#8217;t understand a thing I
say about it. Even as I prepare to travel across the ocean to spend the next
three years in grad school, studying a totally different branch of physics from
what I have so far, I am still essentially the same person and that fact is
reflected here. As I enter this new chapter of my life, I invite you all to
share the adventure with me, knowing that, in all probability, at the end of it
I will be just as neurotic, pedantic, and idealistic as I am&amp;nbsp;today.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;And have come to accept that I will never quite see eye-to-eye with ecosocialists on a number of issues.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Blogging"></category><category term="HTML"></category><category term="CSS"></category><category term="Foundation"></category><category term="Pelican"></category></entry><entry><title>Letâs Talk AboutÂ Bell</title><link href="https://politicalphysicist.github.io/lets-talk-about-bell.html" rel="alternate"></link><published>2015-01-28T14:15:00+00:00</published><updated>2015-01-28T14:15:00+00:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2015-01-28:lets-talk-about-bell.html</id><summary type="html">&lt;p&gt;Well, it&amp;#8217;s that time of year again. The good people at Bell, through their
Let&amp;#8217;s Talk campaign, are once again
donating money to mental health initiatives. All they ask in return is that
we spread the word by sharing their posts about it on Facebook. Isn&amp;#8217;t that
nice of&amp;nbsp;them?&lt;/p&gt;
&lt;p&gt;&lt;img alt="The Let's Talk ad" src="https://politicalphysicist.github.io/images/bell-lets-talk.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Well, no, it&amp;#8217;s not, on several levels. First and foremost, if they really care
about mental health then surely they can just donate the money anyway, rather
than only do so if people share their Facebook posts. Which let&amp;#8217;s us know that
mental health is &lt;em&gt;not&lt;/em&gt; what they really care about here. As, I suspect, with
most corporate donations, the real motivation is how it will effect their image.
Donating to charity will make them appear to be generous and good corporate
citizens, at least to those who are less cynical than me. Presumably they feel
that this will make people slightly more likely to choose them over Rogers (or
whatever other company you decide on from the myriad of&amp;#8212;pardon me, virtually
&lt;em&gt;no&lt;/em&gt;&amp;#8212;other choices that exist in&amp;nbsp;Canada).&lt;/p&gt;
&lt;p&gt;But here Bell are exceptionally clever. In addition to the usual posturing you
get when a company donates to a good cause, this campaign is all about providing
Bell with advertising. It&amp;#8217;s built into the model, as the more people who share
Bell&amp;#8217;s post, the more money they will donate.
They say that for every time their post
is shared they will donate 5 cents to mental health initiatives. According to
one website, it costs about 25 cents to reach 1000 people on Facebook. That
means that each person sharing the Bell post would only need 201 friends in
order for this to be cheaper.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; This is far cheaper than advertising in
conventional media, or even most other online media. Furthermore, these shared
Bell posts will not be susceptible to adblocking software, as normal Facebook
advertising&amp;nbsp;is.&lt;/p&gt;
&lt;p&gt;So, we&amp;#8217;ve established that Bell is not doing this out of the kindness of their
heart, but because of the positive impact on their brand and the advertising
which it generates. But surely we can still be happy about the positive outcome,
regardless of the motives behind it? Well, in a sense I suppose we should, as
this money is certainly better spent on mental health initiatives than on
returns to shareholders. But then again, we shouldn&amp;#8217;t. If Bell feels that it
has this money to give away, then to me that indicates that they aren&amp;#8217;t being
taxed enough. If they were then the revenue could be used by the government to
provide mental health initiative directly. Moreover, it would be under our
democratic control to decide if this is, indeed, the best way to spend it.
Maybe we&amp;#8217;d decide that there is some other health concern which would be a
better use of the money. As it stand now, we have no choice in the&amp;nbsp;matter.&lt;/p&gt;
&lt;p&gt;You might ask why we should have a choice. After all, it&amp;#8217;s Bell&amp;#8217;s money. But
where does Bell get it&amp;#8217;s money from? Consumers, of course. So it&amp;#8217;s all of our
money really. That means that we should have a say over how it&amp;#8217;s spent.&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;
Furthermore, as a way of collecting money to provide services, this is highly
regressive. Why should the amount that we spend on telecom determine how much
we contribute towards mental health initiatives? Shouldn&amp;#8217;t those who have more
money be contributing a greater percentage of their income? This is the
approach we take to taxation, after all. This argument, of course,
applies to all corporate charity. Given this, surely the best way to fund things
like mental health initiatives is via&amp;nbsp;taxation.&lt;/p&gt;
&lt;p&gt;So, Bell, if you want to help contribute that money to good causes, why don&amp;#8217;t
you give it to the government? They can spend it as necessary. Better yet, you
could let yourself be voluntarily nationalized, so that telecom could be
provided at cost, or even for free. Let this essential service, like those
surrounding mental health, be funded&amp;nbsp;progressively.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;In fairness, that is probably rather optimistic, as there is plenty of overlap between people&amp;#8217;s groups of friends. Nonetheless, it&amp;#8217;s pretty good value.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;If you feel tempted to argue that this logic applies to any way in which a company spends its money, then I agree. That is why I&amp;#8217;m a socialist and believe in public ownership.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Charity"></category><category term="Democracy"></category><category term="Accountability"></category><category term="Advertising"></category><category term="Telecom"></category></entry><entry><title>FORD: FORtranÂ Documentation</title><link href="https://politicalphysicist.github.io/ford-fortran-documentation.html" rel="alternate"></link><published>2015-01-05T00:15:00+00:00</published><updated>2015-01-05T00:15:00+00:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2015-01-05:ford-fortran-documentation.html</id><summary type="html">&lt;p&gt;Over Christmas break I&amp;#8217;ve been working on this project to produce documentation
for Fortran programs. I&amp;#8217;ve (just) managed to finish it before school starts
again! Here is the &lt;span class="caps"&gt;README&lt;/span&gt; for it, containing the documentation which I wrote.
You can find the code &lt;a href="https://github.com/cmacmackin/ford"&gt;on Github&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;This is an automatic documentation generator for modern Fortran programs.
&lt;span class="caps"&gt;FORD&lt;/span&gt; stands for FORtran Documenter. As you may know, &amp;#8220;to ford&amp;#8221; refers to
crossing a river (or other body of water). It does not, in this context, refer
to any company or individual associated with&amp;nbsp;cars.&lt;/p&gt;
&lt;p&gt;Ford was written due to &lt;a href="http://www.stack.nl/~dimitri/doxygen/"&gt;Doxygen&lt;/a&gt;&amp;#8216;s
poor handling of Fortran and the lack of comparable alternatives.
&lt;a href="http://rfsber.home.xs4all.nl/Robo/index.html"&gt;ROBODoc&lt;/a&gt; can&amp;#8217;t actually extract
any information from the source code and just about any other automatic
documentation software I found was either proprietary, didn&amp;#8217;t work very well
for Fortran, or was limited in terms of how it produced its output.
&lt;a href="http://erikdemaine.org/software/f90doc/"&gt;f90doc&lt;/a&gt; is quite good and I managed
to modify it so that it could handle most of Fortran 2003, but it produces
rather ugly documentation, can&amp;#8217;t provide as many links between different parts
of the documentation as I&amp;#8217;d like, and is written in Perl (which I&amp;#8217;m not that
familiar with and which lacks the sort of libraries found in Python for
producing &lt;span class="caps"&gt;HTML&lt;/span&gt;&amp;nbsp;content).&lt;/p&gt;
&lt;p&gt;The goal of &lt;span class="caps"&gt;FORD&lt;/span&gt; is to be able to reliably produce documentation for modern
Fortran software which is informative and nice to look at. The documentation
should be easy to write and non-obtrusive within the code. While it will never
be as feature-rich as Doxygen, hopefully &lt;span class="caps"&gt;FORD&lt;/span&gt; will be able to provide an
alternative for documenting Fortran&amp;nbsp;projects.&lt;/p&gt;
&lt;h3&gt;Disclaimer&lt;/h3&gt;
&lt;p&gt;This is a young project. While it has bee tested somewhat, the testing has been
far from comprehensive. Various options have not been tested and obscure uses
of the Fortran syntax could still potentially cause &lt;span class="caps"&gt;FORD&lt;/span&gt; to crash. If you
get an error message while processing a file, first check to make sure that the
file actually compiles. No effort has been made to be able to process files
which contain syntax errors. Next ensure that you aren&amp;#8217;t using any of the
lingering &lt;span class="caps"&gt;FORTRAN77&lt;/span&gt; syntax. If you are still experiencing errors, comment
out the &lt;code&gt;try&lt;/code&gt;/&lt;code&gt;except&lt;/code&gt; statement on lines 59-63 of
./ford/fortran_project.py. Leave only line 60 uncommented. You will probably
need to remove four spaces from line 60&amp;#8217;s indentation, as well.
This will give you
a proper Python backtrace. Submit a bug report on this Github page, including
the backtrace and, if possible, the file which &lt;span class="caps"&gt;FORD&lt;/span&gt; crashed while processing.
If an error occurs elsewhere, you will most likely get a backtrace by default.
Once again, please include this backtrace in your bug&amp;nbsp;report.&lt;/p&gt;
&lt;h3&gt;Dependencies&lt;/h3&gt;
&lt;p&gt;In addition to the standard Python libraries, the following modules are&amp;nbsp;needed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jinja.pocoo.org/docs/dev/"&gt;Jinja2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pygments.org/"&gt;Pygments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.python.org/pypi/toposort/1.0"&gt;toposort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pythonhosted.org/Markdown/"&gt;Markdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A near-term goal will be to write a setup script which will check for
these dependencies and install those which are missing. I&amp;#8217;d also like to
make &lt;span class="caps"&gt;FORD&lt;/span&gt; available on PyPI so that all dependencies will be installed&amp;nbsp;automatically.&lt;/p&gt;
&lt;h3&gt;Basic&amp;nbsp;Usage&lt;/h3&gt;
&lt;p&gt;&lt;span class="caps"&gt;FORD&lt;/span&gt; usage is based on &lt;em&gt;projects&lt;/em&gt;. A project is just whatever piece of software
you want to document. Normally it would either be a program or a library. Each
project will have its own
&lt;a href="http://daringfireball.net/projects/markdown/syntax"&gt;Markdown&lt;/a&gt; file which
contains a description of the project. Various options (see below for a
description) can be specified in this file, such as where to look for your
projects source files, where to output the documentation, and information about
the&amp;nbsp;author.&lt;/p&gt;
&lt;h4&gt;Running&amp;nbsp;Ford&lt;/h4&gt;
&lt;p&gt;Once you have written a project file which you&amp;#8217;re satisfied with, it is time to
run &lt;span class="caps"&gt;FORD&lt;/span&gt;. Make sure that it is in the path/Python-path. The most basic syntax
for running ford is&amp;nbsp;just&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ford project-file.md
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Assuming that there are no errors, your documentation will now be available
in the path you indicated for&amp;nbsp;output.&lt;/p&gt;
&lt;h4&gt;Writing&amp;nbsp;Documentation&lt;/h4&gt;
&lt;p&gt;All documentation, both that provided within the source files and that given
in the project file, should be written in
&lt;a href="http://daringfireball.net/projects/markdown/syntax"&gt;Markdown&lt;/a&gt;. In addition
to the standard Markdown syntax, you can use all of the features in Python&amp;#8217;s
&lt;a href="https://pythonhosted.org/Markdown/extensions/extra.html"&gt;Markdown Extra&lt;/a&gt;. Other
Markdown extensions automatically loaded are
&lt;a href="https://pythonhosted.org/Markdown/extensions/code_hilite.html"&gt;CodeHilite&lt;/a&gt;
which will provide syntax highlighting for any code fragments you place in your
documentation, &lt;a href="https://pythonhosted.org/Markdown/extensions/smarty.html"&gt;SmartyPants&lt;/a&gt; which gives the typographically correct version of various characters,
and &lt;a href="https://pythonhosted.org/Markdown/extensions/meta_data.html"&gt;Meta-Data&lt;/a&gt;.
The latter is used internally as a way for the user to provide extra information
to and/or customize the behaviour of &lt;span class="caps"&gt;FORD&lt;/span&gt;. Information on providing meta-data
and what types of data &lt;span class="caps"&gt;FORD&lt;/span&gt; will look for can be found in the next&amp;nbsp;section.&lt;/p&gt;
&lt;p&gt;In modern (post 1990) Fortran, comments are indicated by an exclamation mark
(!). &lt;span class="caps"&gt;FORD&lt;/span&gt; will ignore a normal comment like this. However, comments with two
exclamation marks (!!) are interpreted as documentation and will be captured
for inclusion in the output. &lt;span class="caps"&gt;FORD&lt;/span&gt; documentation must come &lt;em&gt;after&lt;/em&gt; whatever it
is that you are documenting, either at the end of the line or on a subsequent
line. This was chosen because it was felt it is easier to make your
documentation readable from within the source-code this way.&amp;nbsp;This&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;subroutine &lt;/span&gt;&lt;span class="n"&gt;feed_pets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cats&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dogs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;angry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c"&gt;!! Feeds your cats and dogs, if enough food is available. If not enough&lt;/span&gt;
    &lt;span class="c"&gt;!! food is available, some of your pets will get angry.&lt;/span&gt;

    &lt;span class="c"&gt;! Arguments&lt;/span&gt;
    &lt;span class="kt"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="kd"&gt;::&lt;/span&gt; &lt;span class="n"&gt;cats&lt;/span&gt;
        &lt;span class="c"&gt;!! The number of cats to keep track of.&lt;/span&gt;
    &lt;span class="kt"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="kd"&gt;::&lt;/span&gt; &lt;span class="n"&gt;dogs&lt;/span&gt;
        &lt;span class="c"&gt;!! The number of dogs to keep track of.&lt;/span&gt;
    &lt;span class="kt"&gt;real&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="kd"&gt;::&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;
        &lt;span class="c"&gt;!! The ammount of pet food (in kilograms) which you have on hand.&lt;/span&gt;
    &lt;span class="kt"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;::&lt;/span&gt; &lt;span class="n"&gt;angry&lt;/span&gt;
        &lt;span class="c"&gt;!! The number of pets angry because they weren&amp;#39;t fed.&lt;/span&gt;

    &lt;span class="c"&gt;!...&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;
&lt;span class="k"&gt;end subroutine &lt;/span&gt;&lt;span class="n"&gt;feed_pets&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;looks better/more readable&amp;nbsp;than&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;!! Feeds your cats and dogs, if enough food is available. If not enough&lt;/span&gt;
&lt;span class="c"&gt;!! food is available, some of your pets will get angry.&lt;/span&gt;
&lt;span class="k"&gt;subroutine &lt;/span&gt;&lt;span class="n"&gt;feed_pets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cats&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dogs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;angry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;! Arguments&lt;/span&gt;
    &lt;span class="c"&gt;!! The number of cats to keep track of.&lt;/span&gt;
    &lt;span class="kt"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="kd"&gt;::&lt;/span&gt; &lt;span class="n"&gt;cats&lt;/span&gt;
    &lt;span class="c"&gt;!! The number of dogs to keep track of.&lt;/span&gt;
    &lt;span class="kt"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="kd"&gt;::&lt;/span&gt; &lt;span class="n"&gt;dogs&lt;/span&gt;
    &lt;span class="c"&gt;!! The ammount of pet food (in kilograms) which you have on hand.&lt;/span&gt;
    &lt;span class="kt"&gt;real&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="kd"&gt;::&lt;/span&gt; &lt;span class="n"&gt;food&lt;/span&gt;
    &lt;span class="c"&gt;!! The number of pets angry because they weren&amp;#39;t fed.&lt;/span&gt;
    &lt;span class="kt"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;intent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;::&lt;/span&gt; &lt;span class="n"&gt;angry&lt;/span&gt;

    &lt;span class="c"&gt;!...&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;
&lt;span class="k"&gt;end subroutine &lt;/span&gt;&lt;span class="n"&gt;feed_pets&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;in the opinion of this author, especially with regards to the list of arguments.
Unfortunately, if you disagree, it is unlikely that there will ever be a switch
available to change this behaviour, as it would require a drastic rewrite of
large parts of the structure of the&amp;nbsp;code.&lt;/p&gt;
&lt;p&gt;Please note that legacy Fortran (fixed-form code) is not supported at this
time. If anyone would like to contribute the necessary modifications to
./ford/reader.py to convert fixed-form syntax into free-form, it should not be
difficult (see the approach taken by
&lt;a href="http://erikdemaine.org/software/f90doc/"&gt;f90doc&lt;/a&gt;). However, it is not a
priority for me at this time (since I regard fixed-form Fortran as an
abomination which should be wiped from the face of this&amp;nbsp;Earth).&lt;/p&gt;
&lt;h4&gt;Output&lt;/h4&gt;
&lt;p&gt;Output is in &lt;span class="caps"&gt;HTML&lt;/span&gt;. By default, all links will be relative, meaning that the
output can be placed and viewed anywhere. The
&lt;a href="http://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt; framework was used to make it easy to
quickly design professional looking pages. An example of some output from
my project &lt;a href="https://github.com/cmacmackin/futility"&gt;Futility&lt;/a&gt; is shown&amp;nbsp;below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Some example output." src="https://politicalphysicist.github.io/images/ford.png" /&gt;&lt;/p&gt;
&lt;h3&gt;Options&lt;/h3&gt;
&lt;p&gt;While not nearly as configurable as the likes of
&lt;a href="http://www.stack.nl/~dimitri/doxygen/"&gt;Doxygen&lt;/a&gt;, &lt;span class="caps"&gt;FORD&lt;/span&gt;&amp;#8217;s output can still be
customized to some extent by&amp;nbsp;users.&lt;/p&gt;
&lt;h4&gt;Command-Line&amp;nbsp;Options&lt;/h4&gt;
&lt;p&gt;The command-line interface is given&amp;nbsp;below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ford.py [-h] [-d PROJECT_DIRECTORY] [-o OUTPUT_DIR] [-s CSS]
             [--exclude EXCLUDE] [-e [EXTENSIONS [EXTENSIONS ...]]]
             project_file
&lt;/pre&gt;&lt;/div&gt;


&lt;dl&gt;
  &lt;dt&gt;PROJECT_DIRECTORY&lt;/dt&gt;
  &lt;dd&gt;The directory where the source-files are to be found for
  this project. This must not be a subdirectory of the OUTPUT_DIR (see&amp;nbsp;below).&lt;/dd&gt;
  &lt;dt&gt;OUTPUT_DIR&lt;/dt&gt;
  &lt;dd&gt;The directory where the project output will be placed.
  &lt;strong&gt;Any content already present there will be&amp;nbsp;deleted.&lt;/strong&gt;&lt;/dd&gt;
  &lt;dt&gt;&lt;span class="caps"&gt;CSS&lt;/span&gt;&lt;/dt&gt;
  &lt;dd&gt;The path to a custom style-sheet which can be used to modify the
  appearance of the output.&lt;dd&gt;
  &lt;dt&gt;&lt;span class="caps"&gt;EXCLUDE&lt;/span&gt;&lt;/dt&gt;
  &lt;dd&gt;A source file which should not be read. If you want to specify more than
  one then you will need to do it in the project file.&lt;dd&gt;
  &lt;dt&gt;&lt;span class="caps"&gt;EXTENSIONS&lt;/span&gt;&lt;/dt&gt;
  &lt;dd&gt;File extensions which will be read by &lt;span class="caps"&gt;FORD&lt;/span&gt; for documentation.
  (&lt;em&gt;default:&lt;/em&gt; f90, f95, f03,&amp;nbsp;f08)&lt;/dd&gt;
  &lt;dt&gt;project_file&lt;/dt&gt;
  &lt;dd&gt;The file containing a description of your project and various settings
  for &lt;span class="caps"&gt;FORD&lt;/span&gt;.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Settings specified at the command-line will override those specified in the
project&amp;nbsp;file.&lt;/p&gt;
&lt;h4&gt;Project File&amp;nbsp;Options&lt;/h4&gt;
&lt;p&gt;You can specify various options and information for your project in the
meta-data of your project file. Quoting from the
&lt;a href="https://pythonhosted.org/Markdown/extensions/meta_data.html"&gt;Markdown Meta-Data&lt;/a&gt;&amp;nbsp;page:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Meta-data consists of a series of keywords and values defined at the beginning of a markdown document like&amp;nbsp;this:&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;Title:   My Document&lt;br&gt;Summary: A brief description of my document.&lt;br&gt;Authors: Waylan Limberg&lt;br&gt;         John Doe&lt;br&gt;Date:    October 2, 2007&lt;br&gt;blank-value: &lt;br&gt;base_url: http://example.com&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;This is the first paragraph of the document.
The keywords are case-insensitive and may consist of letters, numbers, underscores and dashes and must end with a colon. The values consist of anything following the colon on the line and may even be&amp;nbsp;blank.&lt;/p&gt;
&lt;p&gt;If a line is indented by 4 or more spaces, that line is assumed to be an additional line of the value for the previous keyword. A keyword may have as many lines as&amp;nbsp;desired.&lt;/p&gt;
&lt;p&gt;The first blank line ends all meta-data for the document. Therefore, the first line of a document must not be blank. All meta-data is stripped from the document prior to any further processing by&amp;nbsp;Markdown.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The options which can be specified in the meta-data are listed below. Defaults
are included in the description, if they exist.
&lt;dl&gt;
&lt;dt&gt;project&lt;/dt&gt;&lt;dd&gt;The name of this project.
  (&lt;em&gt;default:&lt;/em&gt; Fortran&amp;nbsp;Project)&lt;/dd&gt;
&lt;dt&gt;summary&lt;/dt&gt;&lt;dd&gt;A summary of the description of your project. If present
  it will be printed in a &amp;#8220;Jumbotron&amp;#8221; element at the top of the documentation
  index page. This will be processed by Markdown before being&amp;nbsp;used.&lt;/dd&gt;
&lt;dt&gt;project_url&lt;/dt&gt;&lt;dd&gt;The &lt;span class="caps"&gt;URL&lt;/span&gt; at which the documentation will be available. If
left blank then relative URLs will be used for links. (&lt;em&gt;default:&lt;/em&gt; blank,
  i.e. relative&amp;nbsp;links)&lt;/dd&gt;
&lt;dt&gt;project_directory&lt;/dt&gt;&lt;dd&gt;The directory where the source-files are to be
  found for this project. This must not be a subdirectory of the output_dir (see
  below). (&lt;em&gt;default:&lt;/em&gt;&amp;nbsp;./src)&lt;/dd&gt;
&lt;dt&gt;output_dir&lt;/dt&gt;&lt;dd&gt;The directory where the project output will be placed.
  &lt;strong&gt;Any content already present there will be&amp;nbsp;deleted.&lt;/strong&gt;&lt;/dd&gt;
&lt;dt&gt;css&lt;/dt&gt;&lt;dd&gt;The path to a custom style-sheet which can be used to modify the
  appearance of the output. (&lt;em&gt;default:&lt;/em&gt;&amp;nbsp;./doc)&lt;/dd&gt;
&lt;dt&gt;extensions&lt;/dt&gt;&lt;dd&gt;File extensions which will be read by &lt;span class="caps"&gt;FORD&lt;/span&gt; for
  documentation. Each extension must be on its own line.
  (&lt;em&gt;default:&lt;/em&gt; f90, f95, f03,&amp;nbsp;f08)&lt;/dd&gt;
&lt;dt&gt;exclude&lt;/dt&gt;&lt;dd&gt;A source file which should not be read. Each excluded file
  must be on its own line. Provide only the file name, not the full&amp;nbsp;path.&lt;/dd&gt;
&lt;dt&gt;display&lt;/dt&gt;&lt;dd&gt;How much documentation should be printed. Options are
  &amp;#8216;public&amp;#8217;, &amp;#8216;private&amp;#8217;, &amp;#8216;protected&amp;#8217;, or any combination of those three. Each
  choice must be on its own line. (&lt;em&gt;default:&lt;/em&gt; &amp;#8216;public&amp;#8217; and&amp;nbsp;&amp;#8216;protected&amp;#8217;)
  &lt;/dd&gt;
&lt;dt&gt;version&lt;/dt&gt;&lt;dd&gt;The version name/number of your&amp;nbsp;project.&lt;/dd&gt;
&lt;dt&gt;year&lt;/dt&gt;&lt;dd&gt;The year to display in the copyright notice. (&lt;em&gt;default:&lt;/em&gt;
  the current&amp;nbsp;year)&lt;/dd&gt;
&lt;dt&gt;project_github&lt;/dt&gt;&lt;dd&gt;The &lt;span class="caps"&gt;URL&lt;/span&gt; of the Github repository for this&amp;nbsp;project.
  &lt;/dd&gt;
&lt;dt&gt;project_bitbucket&lt;/dt&gt;&lt;dd&gt;The &lt;span class="caps"&gt;URL&lt;/span&gt; of the BitBucket repository for this&amp;nbsp;project.&lt;/dd&gt;
&lt;dt&gt;project_sourceforge&lt;/dt&gt;&lt;dd&gt;The Sourceforge repository for this&amp;nbsp;project.
  &lt;/dd&gt;
&lt;dt&gt;project_download&lt;/dt&gt;&lt;dd&gt;A &lt;span class="caps"&gt;URL&lt;/span&gt; from which to download the source or
  binaries for this&amp;nbsp;project.&lt;/dd&gt;
&lt;dt&gt;project_website&lt;/dt&gt;&lt;dd&gt;The homepage for this&amp;nbsp;project.&lt;/dd&gt;
&lt;dt&gt;author&lt;/dt&gt;&lt;dd&gt;The name of the person(s) or organization who wrote this&amp;nbsp;project.&lt;/dd&gt;
&lt;dt&gt;author_description&lt;/dt&gt;&lt;dd&gt;A brief description of the author. You could
  provide biographical details or links to other work, for example. This will
  be processed by Markdown before being&amp;nbsp;used.&lt;/dd&gt;
&lt;dt&gt;author_pic&lt;/dt&gt;&lt;dd&gt;A picture of or avatar for the&amp;nbsp;author.&lt;/dd&gt;
&lt;dt&gt;github&lt;/dt&gt;&lt;dd&gt;The author&amp;#8217;s Github&amp;nbsp;page.&lt;/dd&gt;
&lt;dt&gt;bitbucket&lt;/dt&gt;&lt;dd&gt;The author&amp;#8217;s BitBucket&amp;nbsp;page.&lt;/dd&gt;
&lt;dt&gt;facebook&lt;/dt&gt;&lt;dd&gt;The author&amp;#8217;s Facebook&amp;nbsp;profile.&lt;/dd&gt;
&lt;dt&gt;twitter&lt;/dt&gt;&lt;dd&gt;The author&amp;#8217;s&amp;nbsp;Twitter.&lt;/dd&gt;
&lt;dt&gt;google_plus&lt;/dt&gt;&lt;dd&gt;The author&amp;#8217;s&amp;nbsp;Google+&lt;/dd&gt;
&lt;dt&gt;linkedin&lt;/dt&gt;&lt;dd&gt;The author&amp;#8217;s LinkedIn&amp;nbsp;profile.&lt;/dd&gt;
&lt;dt&gt;email&lt;/dt&gt;&lt;dd&gt;The author&amp;#8217;s email&amp;nbsp;address.&lt;/dd&gt;
&lt;dt&gt;website&lt;/dt&gt;&lt;dd&gt;The author&amp;#8217;s&amp;nbsp;website.&lt;/dd&gt;
&lt;/dl&gt;&lt;/p&gt;
&lt;h4&gt;Meta-Data in&amp;nbsp;Documentation&lt;/h4&gt;
&lt;p&gt;When documenting your source files you can provide meta-data at the top of an
item&amp;#8217;s documentation. There can not be any other documentation before it; not
even a blank line of documentation. This will&amp;nbsp;work&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;! Good&lt;/span&gt;
&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="kd"&gt;::&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt;
  &lt;span class="c"&gt;!! author: A Fortran Programmer&lt;/span&gt;
  &lt;span class="c"&gt;!! version: v0.2&lt;/span&gt;
  &lt;span class="c"&gt;!!&lt;/span&gt;
  &lt;span class="c"&gt;!! This data-type represents a cat.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;but this&amp;nbsp;won&amp;#8217;t&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;! Bad&lt;/span&gt;
&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="kd"&gt;::&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt;
  &lt;span class="c"&gt;!!&lt;/span&gt;
  &lt;span class="c"&gt;!! author: A Fortran programmer&lt;/span&gt;
  &lt;span class="c"&gt;!! version: v0.2&lt;/span&gt;
  &lt;span class="c"&gt;!!&lt;/span&gt;
  &lt;span class="c"&gt;!! This data-type represents a cat.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The meta-data will be displayed for procedures, derived types,
files, programs, modules, type-bound procedures, and interfaces. It may be
displayed in more cases in future. Recognized types of meta-data&amp;nbsp;are:&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;author&lt;/dt&gt;&lt;dd&gt;The author of this part of the&amp;nbsp;code&lt;/dd&gt;
  &lt;dt&gt;date&lt;/dt&gt;&lt;dd&gt;The date that this part of the code was written (or that the
  documentation was written; whichever makes more sense to&amp;nbsp;you).&lt;/dd&gt;
  &lt;dt&gt;license&lt;/dt&gt;&lt;dd&gt;The license for this part of your code. If you want
  to provide a link then it will have to be in &lt;span class="caps"&gt;HTML&lt;/span&gt;, as it won&amp;#8217;t be processed
  by&amp;nbsp;Markdown.&lt;/dd&gt;
  &lt;dt&gt;version&lt;/dt&gt;&lt;dd&gt;The version number (or name) of this part of the&amp;nbsp;code.&lt;/dd&gt;
  &lt;dt&gt;category&lt;/dt&gt;&lt;dd&gt;A category for this part of the code. Currently this is
  fairly useless, just being printed in the documentation. In future, &lt;span class="caps"&gt;FORD&lt;/span&gt; may
  provide lists of things in each&amp;nbsp;category.&lt;/dd&gt;
  &lt;dt&gt;summary&lt;/dt&gt;&lt;dd&gt;A brief description of this part of the code. If not
  specified then &lt;span class="caps"&gt;FORD&lt;/span&gt; will use the first paragraph of the body of your&amp;nbsp;documentation.&lt;/dd&gt;
  &lt;dt&gt;deprecated&lt;/dt&gt;&lt;dd&gt;If this is present and not &amp;#8220;False&amp;#8220; then a
  label saying &amp;#8220;Deprecated&amp;#8221; will be placed in the&amp;nbsp;documentation.&lt;/dd&gt;
&lt;/dl&gt;

&lt;h3&gt;ToDo&lt;/h3&gt;
&lt;p&gt;This software is still extremely young and much remains to be done. Various
things which I&amp;#8217;d like to do at some point&amp;nbsp;include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support some of the old Fortran 77 ways of doing things, as these are often
  still used. This includes &lt;span class="caps"&gt;PARAMETER&lt;/span&gt; statements and &lt;span class="caps"&gt;EXTERNAL&lt;/span&gt; statements.
  Support for fixed-form code is less of a&amp;nbsp;priority.&lt;/li&gt;
&lt;li&gt;Add the ability to produce dependency diagrams and inheritance diagrams for
  modules and types,&amp;nbsp;respectively.&lt;/li&gt;
&lt;li&gt;Make more options configurable from the&amp;nbsp;command-line.&lt;/li&gt;
&lt;li&gt;Integrate the Pelican MathJax&amp;nbsp;plugin.&lt;/li&gt;
&lt;li&gt;Add MathJax support. &lt;strong&gt;Priority&amp;nbsp;Task&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Add a search&amp;nbsp;feature.&lt;/li&gt;
&lt;li&gt;Test on some more code, including that of other people, who may have different
  coding&amp;nbsp;styles.&lt;/li&gt;
&lt;li&gt;Add the ability to identify function calls and use this to work out
  call-trees (subroutine calls are already captured, although not yet used
  in any of the&amp;nbsp;output).&lt;/li&gt;
&lt;li&gt;Add the option for users to specify a Creative Commons license for their
  documentation, which will be inserted into the page&amp;nbsp;footer.&lt;/li&gt;
&lt;li&gt;Make it possible to override the display options within a particular
  part of the code and/or for an individual item within the&amp;nbsp;code.&lt;/li&gt;
&lt;li&gt;Provide an option to force all (non-string) text which is captured to be
  lower&amp;nbsp;case.&lt;/li&gt;
&lt;li&gt;Add the ability to recognize the use of intrinsic&amp;nbsp;modules&lt;/li&gt;
&lt;li&gt;Add the ability to allow for &lt;code&gt;only&lt;/code&gt; statements when loading modules and for
  renaming module procedures when loading&amp;nbsp;them.&lt;/li&gt;
&lt;li&gt;Improve the sidebar for source files so that it will link to the items that it&amp;nbsp;lists.&lt;/li&gt;
&lt;li&gt;Allow the user to provide a&amp;nbsp;favicon.&lt;/li&gt;
&lt;li&gt;Provide a directory in which the user can place any images and/or other
  media they want&amp;nbsp;available.&lt;/li&gt;
&lt;li&gt;Use summaries of the description in some&amp;nbsp;places.&lt;/li&gt;
&lt;li&gt;Improve the way procedures are handled as arguments. In particular, allow
  any abstract interface which was used as a template to be visible&amp;nbsp;somehow.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Things which ideally I would do, but are not currently on the radar&amp;nbsp;include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add the ability for people to customize appearance of the output more (this
  would require drastic changes to the template&amp;nbsp;system).&lt;/li&gt;
&lt;li&gt;Support fixed-form Fortran (doable, but low&amp;nbsp;priority).&lt;/li&gt;
&lt;li&gt;Add the ability to identify type-bound procedure calls and use these to
  construct call-trees. This would be extremely difficult, as it would
  require keeping track of names and types of variables throughout the&amp;nbsp;code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Approach&lt;/h3&gt;
&lt;p&gt;The basic algorithm for generating the documentation is as&amp;nbsp;follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Get instructions from user. These are to be passes as command-line arguments
  and meta-data within the project&amp;nbsp;file.&lt;/li&gt;
&lt;li&gt;Parse each file which is to be&amp;nbsp;documented.&lt;/li&gt;
&lt;li&gt;Create a file object. This will contain any documentation meant for the
     file as a whole and a list of any file&amp;nbsp;contents.&lt;/li&gt;
&lt;li&gt;Create module, subroutine, function, and/or program objects for each of
     these structures within the file. Each of these objects will also store
     comments, contents, and&amp;nbsp;parameters.&lt;/li&gt;
&lt;li&gt;Continue to recurse into these structures, adding interface, type,
     variable, subroutine and function objects as&amp;nbsp;necessary.&lt;/li&gt;
&lt;li&gt;Perform further analysis on the parsed code, correlating anything defined
  in one place but used in another. This will be used to generate hyperlinks
  when producing the&amp;nbsp;documentation.&lt;/li&gt;
&lt;li&gt;Convert comments into &lt;span class="caps"&gt;HTML&lt;/span&gt;. Assume that they have been written in Markdown.
  Also make sure to process LaTeX (not yet&amp;nbsp;implemented).&lt;/li&gt;
&lt;li&gt;Produce the documentation. This will be done using Jinja2&amp;nbsp;templates.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Python"></category><category term="Fortran"></category><category term="Programming"></category><category term="Software"></category></entry><entry><title>The Rights and Wrongs ofÂ Remembrance</title><link href="https://politicalphysicist.github.io/the-rights-and-wrongs-of-remembrance.html" rel="alternate"></link><published>2014-11-09T11:20:00+00:00</published><updated>2014-11-09T11:20:00+00:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2014-11-09:the-rights-and-wrongs-of-remembrance.html</id><summary type="html">&lt;p&gt;Well, it&amp;#8217;s that time of year again. 95 years and 362 days ago we saw the
Armistice that ended World War I. This marked the end of the first case
technological war, which caused the world to realize the horrors that could
be inflicted by industrial-scale killing. It was a horrible, pointless
event in which some 16 million people lost their lives. The world, including
the victors, reacted in horror to what they had unleashed. We quickly saw the
establishment of Remembrance Day, to commemorate the tragedy, and the red poppy
as a symbol of remembrance. Of course, as we all know, this was followed two
decades later by another, even worse, case of mass&amp;nbsp;slaughter.&lt;/p&gt;
&lt;p&gt;I tend to identify as a moderate pacifist. I&amp;#8217;m not an absolute pacifist like
Gandhi was; I think that violence is justified if it is absolutely necessary for
self-defence. I will reluctantly admit that we probably did have to fight in
World War &lt;span class="caps"&gt;II&lt;/span&gt;, such was the threat of Hitler.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; But I do not believe that the
First World War was in any way necessary or justifiable. Moreover, I would argue
that the Second World War was ultimately the result of how Germany was treated
in the Treaty of Versaille and was thus, ultimately, avoidable. As for
subsequent wars in which we&amp;#8217;ve been involved: I can&amp;#8217;t honestly say that I would
consider them much (if any) better than World War&amp;nbsp;I.&lt;/p&gt;
&lt;p&gt;My relative pacifism results in my having rather ambivalent feelings towards
Remembrance Day. These are difficult to put into words, but I&amp;#8217;m going to try my
best here. While I certainly do think that we should remember the tragedy
that was the &lt;span class="caps"&gt;WWI&lt;/span&gt;, &lt;span class="caps"&gt;WWII&lt;/span&gt;, the Korean War, the Gulf War, and Afghanistan, I must
say that I have my qualms over how this is done. We are told to be grateful to
those who made the ultimate sacrifice to preserve our freedom. But to me it
feels wrong to feel grateful to people for going off to kill and be killed.
Certainly this is the case in the First World War, where I would argue that
the Allies weren&amp;#8217;t even that much more free than Germany; just look at the
treatment of
&lt;a href="http://en.wikipedia.org/wiki/Eugene_V._Debs#Arrest_and_imprisonment"&gt;Eugene Debs&lt;/a&gt;
in the United States. But even in &lt;span class="caps"&gt;WWII&lt;/span&gt;, the most that I can say for those
who went off for war is that their actions were necessary but unfortunate and
tragic. To say that I am grateful for those actions would make it sound like I&amp;#8217;m
celebrating them, which I emphatically do not want to&amp;nbsp;do.&lt;/p&gt;
&lt;p&gt;I have been told by one person that we should respect the fact that these soldiers
were, rightly or wrongly, willing to give up their lives for their country. But
why? We don&amp;#8217;t celebrate, in and of itself, the fact that people are willing to
give up their lives for their convictions. We only celebrate that sort of
martyrdom of we happen to agree with the convictions. We don&amp;#8217;t celebrate suicide
bombers, after all. So I&amp;#8217;m not willing simply to celebrate that soldiers were
brave enough to go off to battle. Even if we justify their actions by saying that
they were misled, I still don&amp;#8217;t think that justifies any feelings of gratitude.
Pity, perhaps, but not gratitude. I can&amp;#8217;t even bring myself to feel respect for 
that, as doing so feels like it would be to endorse uncritical&amp;nbsp;obedience.&lt;/p&gt;
&lt;p&gt;I guess what I&amp;#8217;m saying is that Remembrance Day asks us to celebrate the
sacrifices made by soldiers without ever questioning why those sacrifices were
made. It assumes that the wars in which we engaged were just. Worse still, it
often becomes a celebration of military history. In Canada in particular, we are
told about how the battles at Passchendaele and Vimy Ridge saw the &amp;#8220;birth of a
nation.&amp;#8221; Well, the Canada that I would consider to be my country (if that
idealized country has ever actually existed) was not born in any battle.
It was born in the
establishment of trade unions, the development of our shared public
infrastructure, the creation of medicare, our rejection of the
war in Vietnam and later Iraq,&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; the writing of the Charter of Rights and
Freedoms. I think that most Canadians perceive ourselves as being fairly peaceful,
nonviolent people. So why should we consider these battles to be the birth of our
nation? Why should a military event be given such an important role in our history
when the Armed Forces play such a small role in our&amp;nbsp;culture?&lt;/p&gt;
&lt;p&gt;But my bigger problem with Remembrance Day is how it relates to the wars that are
going on now. There is, of course, a &amp;#8220;support our troops&amp;#8221; message. Now, one could
argue that even this is objectionable, as the Armed Forces are basically salaried
killers. I&amp;#8217;m not going to get into that here. In any case, no matter what my
objections may be to the Armed Forces, I&amp;#8217;d still like to see the troops come home
safely. In fact, to me, the &lt;em&gt;best&lt;/em&gt; way that you can support our troops is to
demand that they come home. But &amp;#8220;support our troops&amp;#8221; always seems to have a strong
subtext of &amp;#8220;support our wars.&amp;#8221; When I was in grade 9,
my school attended a &amp;#8220;support our troops&amp;#8221; rally rather than having our own
Remembrance Day ceremony. I think this was related to the fact that an alumnus had
recently been killed in Afghanistan. We were assured by the principal that this
was distinct from supporting our war. Seven years on, I can&amp;#8217;t remember exactly
what was said at the rally. But I do recall it being emphasized how brave and noble
the soldiers were being. And I distinctly remember feeling that I had been
duped into attending a pro-war event. That, to me, is not an appropriate way to
commemorate the ending of World War&amp;nbsp;I.&lt;/p&gt;
&lt;p&gt;It seems that, rather than being a time to mourn the horrendous loss of life that
we see in modern warfare, Remembrance Day has become a time when we are meant to
celebrate the sacrifices of soldiers, past and present. Implicit to this
celebration is the idea that their violence was justified. Consider &amp;#8220;In Flanders
Field.&amp;#8221; I don&amp;#8217;t think that there is a single Remembrance Day ceremony, anywhere
in Canada, where that poem isn&amp;#8217;t read. But think about the last&amp;nbsp;stanza:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Take up our quarrel with the foe:&lt;br /&gt;
To you from failing hands we throw&lt;br /&gt;
   The torch; be yours to hold it high.&lt;br /&gt;
   If ye break faith with us who die &lt;br /&gt;
We shall not sleep, though poppies grow&lt;br /&gt;
        In Flanders&amp;nbsp;fields.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It&amp;#8217;s asking us to continue fighting. Not to realize the folly of war and lay down
our arms, but to persist with it. What&amp;#8217;s more, it was written during World War I,
which was a pointless war between imperialist powers. Canadian soldiers &lt;em&gt;had&lt;/em&gt; no
quarrel with German soldiers and I consider them just as worthy of our
remembrance. But I don&amp;#8217;t recall that ever being mentioned at any of the numerous
Remembrance Day ceremonies that I have attended over the&amp;nbsp;years.&lt;/p&gt;
&lt;p&gt;&lt;img alt="A white and a red poppy." src="https://politicalphysicist.github.io/images/poppies.jpg" /&gt;
All of these feelings are the reason why I haven&amp;#8217;t made it a point to wear a
poppy in recent years. To be clear, it&amp;#8217;s not that I specifically avoid wearing
a poppy. It&amp;#8217;s just that I haven&amp;#8217;t had one with me in Halifax and haven&amp;#8217;t made it
a point to buy one. I&amp;#8217;ve been thinking for awhile that I should get my hands on a
&lt;a href="http://en.wikipedia.org/wiki/White_poppy"&gt;white poppy&lt;/a&gt;. It seems that it would
more accurately convey my mixed feelings about Remembrance Day. I know that many
veterans find it offensive and I regret causing offence. However, if they find
the idea of denouncing the violence of the wars they fought in offensive, then
they are in the wrong and I would not censor myself for their&amp;nbsp;sake.&lt;/p&gt;
&lt;p&gt;I guess the point that I&amp;#8217;m trying to make is: at 11:&lt;span class="caps"&gt;00AM&lt;/span&gt; on November the 11&lt;sup&gt;
th&lt;/sup&gt; we &lt;em&gt;should&lt;/em&gt; remember everyone who has suffered in war. But I do mean
everyone. We should remember the Canadian and American and British soldiers who
fell. We should remember those who lived, but with both mental and physical injury.
We should remember the German and Austrian and Italian soldiers. And we should
remember the civilians who died as armies marched across the world and bombs
fell from the skies. We should remember how horrific war was. We should remember
why war should never be allowed to happen again. Lest we&amp;nbsp;forget&amp;#8230;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;I do, however, have a lot of respect for the pacifists within the &lt;span class="caps"&gt;CCF&lt;/span&gt; (the more radical predecessor to the &lt;span class="caps"&gt;NDP&lt;/span&gt;) who argued in parliament against our involvement in World War &lt;span class="caps"&gt;II&lt;/span&gt;. It&amp;#8217;s certainly a far cry from the &lt;span class="caps"&gt;NDP&lt;/span&gt;&amp;#8217;s support, a few years ago, for bombing Libya.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Although both of these were only partial objections. We, unfortunately, did provide support for the Americans&amp;#8212;we just never actually engaged in battle.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Personal"></category><category term="Pacifism"></category><category term="Remembrance Day"></category><category term="Poppies"></category></entry><entry><title>A (Not as Brief as Iâd Hoped) FortranÂ Tutorial</title><link href="https://politicalphysicist.github.io/a-not-as-brief-as-id-hoped-fortran-tutorial.html" rel="alternate"></link><published>2014-10-31T23:00:00+00:00</published><updated>2014-10-31T23:00:00+00:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2014-10-31:a-not-as-brief-as-id-hoped-fortran-tutorial.html</id><summary type="html">&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; I wrote this guide for the Saint Mary&amp;#8217;s University Astronomy and
Physics Society to go along with a tutorial that I will present on the Fortran
programming language. I thought I&amp;#8217;d post it here in addition to the
&lt;a href="http://ap.smu.ca/~smuaps/an-introduction-to-modern-fortran-programming.html"&gt;&lt;span class="caps"&gt;SMUAPS&lt;/span&gt; website&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fortran, which stands for FORmula TRANslator, is the oldest high level
programming language and remains, albeit with significant improvements,
one of the main languages used by physicists.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;
Most computational physics is done using Fortran and this is the language
typically used in &lt;span class="caps"&gt;SMU&lt;/span&gt;&amp;#8217;s Computational Methods for Physicists class. This
introduction will show you how to use various useful features of the language
in its modern form.&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; It will do this by defining a problem which we wish a
program to solve and then showing how to write such a program. The program
can be &lt;a href="https://politicalphysicist.github.io/attachments/fortran/potential_field.f90"&gt;downloaded here&lt;/a&gt;
if you want to follow along (which I&amp;#8217;d recommend
doing). I assume that you already know how the basics of computer programming
but have not previously done scientific computing or worked with Fotran. Of
course, this will only be a taste of Fortran&amp;#8217;s abilities and there will be
many features, both simple and complex, which I will not be able to mention.
For a good overview of them, see
&lt;a href="http://en.wikipedia.org/wiki/Fortran_95_language_features"&gt;this Wikipedia article&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Table of&amp;nbsp;Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#problem"&gt;The Problem&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#method"&gt;The Numerical&amp;nbsp;Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stats"&gt;Statistics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#algorithm"&gt;The&amp;nbsp;Algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#style"&gt;A Note on&amp;nbsp;Style&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#space"&gt;Comments and White&amp;nbsp;Space&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#basics"&gt;Fortran Basics&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#structure"&gt;Basic Program&amp;nbsp;Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#variables"&gt;Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conditional"&gt;Conditional&amp;nbsp;Statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#loops"&gt;Loops&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#instructions"&gt;Getting Instructions from the&amp;nbsp;User&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reading"&gt;Reading and Writing&amp;nbsp;Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#procedures"&gt;Procedures&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#pass"&gt;Pass by&amp;nbsp;Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#functions"&gt;Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#subroutines"&gt;Subroutines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#array"&gt;Array&amp;nbsp;Syntax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compiling"&gt;Compiling and Running Your&amp;nbsp;Program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#packaging"&gt;Packaging Your&amp;nbsp;Procedures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#summing"&gt;Summing&amp;nbsp;Up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#resources"&gt;Useful&amp;nbsp;Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name="problem"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;The&amp;nbsp;Problem&lt;/h3&gt;
&lt;p&gt;Say we&amp;#8217;ve measure the electric potentials at various points in one dimension.
We have recorded the location at which the measurement was taken and the value
of the potential in a file on our computer. We now want to calculate the
electric field that exists at each point where we took a measurement. These
results will be printed to a second text file on the computer. The program
should also find the average electric field and the standard&amp;nbsp;deviation.&lt;/p&gt;
&lt;p&gt;&lt;a name="method"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;The Numerical&amp;nbsp;Method&lt;/h4&gt;
&lt;p&gt;To do this, we need to recall&amp;nbsp;that
&lt;/p&gt;
&lt;div class="math"&gt;$$ \mathbf{E} = -\nabla V. $$&lt;/div&gt;
&lt;p&gt;
In our simple, one dimensional case, this&amp;nbsp;becomes
&lt;/p&gt;
&lt;div class="math"&gt;$$ E = -\frac{dV}{dx}. $$&lt;/div&gt;
&lt;p&gt;
However, we don&amp;#8217;t actually know the function &lt;span class="math"&gt;\(V(x)\)&lt;/span&gt;, only the value of &lt;span class="math"&gt;\(V\)&lt;/span&gt; at
particular values of &lt;span class="math"&gt;\(x\)&lt;/span&gt;. So, how do we calculate the derivative? In reality,
we&amp;#8217;ll have to estimate it. The limit definition of the derivative&amp;nbsp;says
&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{dV}{dx} = \lim_{h \to 0} \frac{V(x + h) - V(x)}{h}, $$&lt;/div&gt;
&lt;p&gt;
so you might be tempted to&amp;nbsp;use
&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{dV_{i}}{dx} \approx \frac{V_{i+1} - V_{i}}{x_{i+1} - x_{i}}. $$&lt;/div&gt;
&lt;p&gt;
However, that is only accounting for the rate of change on one side of your
data-point, &lt;span class="math"&gt;\(i\)&lt;/span&gt;. Thus, it would be better to&amp;nbsp;use
&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{dV_{i}}{dx} \approx \frac{V_{i+1} - V_{i-1}}{x_{i+1} - x_{i-1}}. $$&lt;/div&gt;
&lt;p&gt;
Of course, this won&amp;#8217;t work at two ends of the data set, so in those cases we&amp;#8217;ll
simply have to make do with half of the information and use something along
the lines of our first guess of how to take the&amp;nbsp;derivative.&lt;/p&gt;
&lt;p&gt;&lt;a name="stats"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Statistics&lt;/h4&gt;
&lt;p&gt;As I hope everyone will know, the average value of some data is given&amp;nbsp;by
&lt;/p&gt;
&lt;div class="math"&gt;$$ \overline{x} = \frac{1}{N}\sum_{i=1}^{N} x_i~. $$&lt;/div&gt;
&lt;p&gt;
As a reminder, the standard deviation of a data-set&amp;nbsp;is
&lt;/p&gt;
&lt;div class="math"&gt;$$ \sigma = \sqrt{\frac{1}{N-1} \sum_{i=1}^N (x_i - \overline{x})^2}.$$&lt;/div&gt;
&lt;p&gt;&lt;a name="algorithm"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;The&amp;nbsp;Algorithm&lt;/h3&gt;
&lt;p&gt;The basic structure of our program will be as&amp;nbsp;follows&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Determine the files from which to read and to which to write&amp;nbsp;data.&lt;/li&gt;
&lt;li&gt;Read the data from the input&amp;nbsp;file.&lt;/li&gt;
&lt;li&gt;Take the derivative of the data and multiply by negative&amp;nbsp;one.&lt;/li&gt;
&lt;li&gt;Write the processed data to the output&amp;nbsp;file.&lt;/li&gt;
&lt;li&gt;Calculate the mean and standard deviation of the processed&amp;nbsp;data.&lt;/li&gt;
&lt;li&gt;Print these statistical values to the&amp;nbsp;screen.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The calculations in steps 3 and 5 are to be done using the techniques and
equations discussed in the previous&amp;nbsp;section.&lt;/p&gt;
&lt;h3&gt;A Note on&amp;nbsp;Style&lt;/h3&gt;
&lt;p&gt;&lt;a name="style"&gt;&lt;/a&gt;
Fortran, as a language, is case-insensitive. This means that  &amp;#8220;&lt;span class="caps"&gt;HELLO&lt;/span&gt;&amp;#8221;,
&amp;#8220;hello&amp;#8221;, and &amp;#8220;hElLo&amp;#8221; are equivalent. The original standard style for programming
in Fortran was to use all upper-case letters. Personally, I find this hard to
read. Many people, today, will use entirely lower-case letters, and some will
use a mixture of both. I have read that the standard now is to use
upper-case letters for anything that is intrinsic to the language, and
lower-case letters for everything else. Although it is debatable how many
people actually stick to this, I will be using this style throughout this
tutorial. Note that case-insensitivity does not apply to the contents
of&amp;nbsp;strings.&lt;/p&gt;
&lt;p&gt;&lt;a name="comments"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Comments and&amp;nbsp;White-Space&lt;/h3&gt;
&lt;p&gt;From Fortran 90 onward, comments are designated by an exclamation mark.
Anything on a line following an exclamation mark (assuming that the
exclamation mark isn&amp;#8217;t inside a string) will be ignored by the
compiler. Comments should be used to document your code. I&amp;#8217;d recommend
having a standard template that you use at the top of each program
explaining what it does. An example of the format I use is provided&amp;nbsp;below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;!==============================================================================!&lt;/span&gt;
&lt;span class="c"&gt;!                         B E G I N    P R O G R A M :                         !&lt;/span&gt;
&lt;span class="c"&gt;!                        P O T E N T I A L _ F I E L D                         !&lt;/span&gt;
&lt;span class="c"&gt;!==============================================================================!&lt;/span&gt;
&lt;span class="c"&gt;!                                                                              !&lt;/span&gt;
&lt;span class="c"&gt;!   AUTHOR:         A Fortran Programmer                                       !&lt;/span&gt;
&lt;span class="c"&gt;!   WRITTEN:        October, 2014                                              !&lt;/span&gt;
&lt;span class="c"&gt;!   MODIFICATIONS:  None                                                       !&lt;/span&gt;
&lt;span class="c"&gt;!                                                                              !&lt;/span&gt;
&lt;span class="c"&gt;!   PURPOSE:        Processes data on potential to calculate a field. Then     !&lt;/span&gt;
&lt;span class="c"&gt;!                   finds some statistics on the field. The input file should  !&lt;/span&gt;
&lt;span class="c"&gt;!                   consist of two columns of data, separated by spaces. The   !&lt;/span&gt;
&lt;span class="c"&gt;!                   first column should be a position and the second should be !&lt;/span&gt;
&lt;span class="c"&gt;!                   the potential at that position. All values should be in SI !&lt;/span&gt;
&lt;span class="c"&gt;!                   units. The default input file is &amp;#39;in.dat&amp;#39; and the default  !&lt;/span&gt;
&lt;span class="c"&gt;!                   output file is &amp;#39;out.dat&amp;#39;. Optionally, these may be         !&lt;/span&gt;
&lt;span class="c"&gt;!                   overridden by providing these two file names as arguments  !&lt;/span&gt;
&lt;span class="c"&gt;!                   when executing the program.                                !&lt;/span&gt;
&lt;span class="c"&gt;!                                                                              !&lt;/span&gt;
&lt;span class="c"&gt;!                   I.e.  $ ./potential_field [input_file [output_file]]       !&lt;/span&gt;
&lt;span class="c"&gt;!                                                                              !&lt;/span&gt;
&lt;span class="c"&gt;!   EXTERNALS:      None                                                       !&lt;/span&gt;
&lt;span class="c"&gt;!                                                                              !&lt;/span&gt;
&lt;span class="c"&gt;!------------------------------------------------------------------------------!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The Fortran 90
standard saw the adoption of free-form programming. This means that you
can insert any number of blank lines that you like between successive lines
of code and that there can be as many spaces as you like within a line of code.
Note, however, that most compilers will place a limit on the number of
characters that you may have in a line; often this is 132 characters. In
any case, it is bad style, in my opinion, to have lines longer than about
80&amp;nbsp;characters.&lt;/p&gt;
&lt;p&gt;&lt;a name="basics"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Fortran&amp;nbsp;Basics&lt;/h3&gt;
&lt;p&gt;Before we fully begin, there are a few more things I want to discuss. These are
some of the fundamental concepts seen in every programming language. I&amp;#8217;m going
to assume that you are familiar with these principles and will just show
how they are applied in&amp;nbsp;Fortran.&lt;/p&gt;
&lt;p&gt;&lt;a name="structure"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Basic Program&amp;nbsp;Structure&lt;/h4&gt;
&lt;p&gt;The great advantage of Fortran is the fairly obvious meaning of all of its
syntax&amp;#8212;something which can emphatically &lt;em&gt;not&lt;/em&gt; be said for C. The
basic structure of our program will&amp;nbsp;be:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;PROGRAM &lt;/span&gt;&lt;span class="n"&gt;potential_field&lt;/span&gt;
    &lt;span class="k"&gt;IMPLICIT NONE&lt;/span&gt;

    &lt;span class="c"&gt;! Variable declarations&lt;/span&gt;
    &lt;span class="c"&gt;! ...&lt;/span&gt;
&lt;span class="c"&gt;!---------------------------------------!&lt;/span&gt;

    &lt;span class="c"&gt;! Main program&lt;/span&gt;
    &lt;span class="c"&gt;! ...&lt;/span&gt;

    &lt;span class="k"&gt;STOP&lt;/span&gt;
&lt;span class="k"&gt;END PROGRAM &lt;/span&gt;&lt;span class="n"&gt;potential_field&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first line says that you are writing a stand-alone program (as opposed to,
say, a subroutine) called &amp;#8220;potential_field&amp;#8221;. &lt;code&gt;IMPLICIT NONE&lt;/code&gt; instructs the
compiler to give an error message if it
encounters any variables which haven&amp;#8217;t been declared. This should always be put
at the start of programs in order to prevent bugs occurring due to typos in
variable names. After this we would declare our variables and then would come
the program itself. &lt;code&gt;STOP&lt;/code&gt; stops the
execution of the program and the final line designates the end of the program
within your text file. You are then free to write any procedures you want
below that. Unlike many other programming languages, Fortran does not allow
anything in your source file to fall outside of a program unit&amp;#8212;that is, outside
of a program, subroutine, function, or module (more on the latter three&amp;nbsp;later).&lt;/p&gt;
&lt;p&gt;&lt;a name="variables"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Variables&lt;/h4&gt;
&lt;p&gt;Fortran has five fundamental&amp;nbsp;data-types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;INTEGER&lt;/code&gt;s are integer values, which can be represented exactly by the&amp;nbsp;computer.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;REAL&lt;/code&gt;s are floating point numbers, representing real numbers. They are not
  exact representations of real numbers, having only a finite number of decimal&amp;nbsp;places.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;COMPLEX&lt;/code&gt; variables are effectively just two real variables, one storing
  the real component of a number, the other storing the imaginary component.
  These don&amp;#8217;t need to be used very&amp;nbsp;often.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CHARACTER&lt;/code&gt;s are text characters, usually encoded as &lt;span class="caps"&gt;ASCII&lt;/span&gt;. Character
  variables can be given a length, allowing them to be used as&amp;nbsp;strings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LOGICAL&lt;/code&gt;s are boolean variables, which can store a value of either
  &lt;code&gt;.TRUE.&lt;/code&gt; or &lt;code&gt;.FALSE.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also define &amp;#8220;derived types,&amp;#8221; which are the equivalents to structs in
C or objects/classes in other languages. These are only really needed in
larger programs, where they can provide a useful way of organizing
data and&amp;nbsp;code.&lt;/p&gt;
&lt;p&gt;A sample of the variable declarions in our code are given&amp;nbsp;below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;CHARACTER&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;LEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;               &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="n"&gt;infile&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;in.dat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
                                    &lt;span class="n"&gt;outfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;out.dat&amp;#39;&lt;/span&gt;
&lt;span class="kt"&gt;INTEGER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;PARAMETER&lt;/span&gt;              &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="n"&gt;data_max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1012&lt;/span&gt;
&lt;span class="kt"&gt;INTEGER&lt;/span&gt;                         &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                     &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
                                    &lt;span class="n"&gt;ioval&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                 &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
                                    &lt;span class="n"&gt;num_args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                              &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
                                    &lt;span class="n"&gt;data_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_max&lt;/span&gt;
&lt;span class="kt"&gt;REAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                         &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                  &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
                                    &lt;span class="n"&gt;stdev&lt;/span&gt;
&lt;span class="kt"&gt;REAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;DIMENSION&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                 &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
                                    &lt;span class="n"&gt;postn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                 &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
                                    &lt;span class="n"&gt;potntl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The ampersands indicate line&amp;nbsp;continuation.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CHARACTER(LEN=32)&lt;/code&gt; means that these variables are strings containing 32
characters. The &lt;code&gt;PARAMETER&lt;/code&gt; attribute means that the variable is a constant,
whose value is set at declaration. &lt;code&gt;REAL(8)&lt;/code&gt; means that this is an 8-byte real
variable (the equivalent of a &lt;code&gt;double&lt;/code&gt; in C), which provides about twice the
precision of a standard &lt;code&gt;REAL&lt;/code&gt; variable. The &lt;code&gt;DIMENSION()&lt;/code&gt; attribute
indicates that this variable will be an array. The number inside the parentheses
is the length of the array. It must either be a literal or a parameter.
You can also have multidimensional arrays, which are declared with a
&lt;code&gt;DIMENSION(dim1,dim2,dim3,...)&lt;/code&gt; attribute. By default, Fortran arrays are
indexed starting at 1, unlike most other languages. On a technical note,
they are stored in column major order rather than the more typical
&lt;a href="http://en.wikipedia.org/wiki/Row-major_order"&gt;row major order&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a name="conditional"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Conditional&amp;nbsp;Statements&lt;/h4&gt;
&lt;p&gt;If you want a single line to be executed only if &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; is true, you
would use the following&amp;nbsp;syntax:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;IF&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;statements&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The general form for an if-statement&amp;nbsp;is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;IF&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;statemtents&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;ELSE IF&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;condition2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;statemtents&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;ELSE IF&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;condition3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;statemtents&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;ELSE&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;statemtents&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;END IF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There can be an arbitrary number of &lt;code&gt;ELSE IF&lt;/code&gt;s, including zero. The &lt;code&gt;ELSE&lt;/code&gt;
statement is optional, but if it is used then it must come at the&amp;nbsp;end.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; is a &lt;code&gt;LOGICAL&lt;/code&gt; variable or a logical test. The logical
operators in Fortran are &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;/=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;,
&lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;.NOT.&lt;/code&gt;, &lt;code&gt;.AND.&lt;/code&gt;, &lt;code&gt;.OR.&lt;/code&gt;, and &lt;code&gt;.XOR.&lt;/code&gt;. The meaning of all of
these is what
you would expect, except possibly for &lt;code&gt;/=&lt;/code&gt;, which corresponds to &amp;#8220;not equal
to.&amp;#8221; Fortran can not use &lt;code&gt;!=&lt;/code&gt; because the exclamation mark is the symbol for
a&amp;nbsp;comment.&lt;/p&gt;
&lt;p&gt;&lt;a name="loops"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Loops&lt;/h4&gt;
&lt;p&gt;The main type of loop which you&amp;#8217;ll use in Fortran is a &amp;#8220;do-loop,&amp;#8221; the equivalent
of a for-loop. This takes the&amp;nbsp;form&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;DO &lt;/span&gt;&lt;span class="nb"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;step_size&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;statements&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;END DO&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;where &lt;code&gt;index&lt;/code&gt; is the counter variable in the loop, &lt;code&gt;lower&lt;/code&gt; is the
lower bound, &lt;code&gt;upper&lt;/code&gt; is the upper bound, and &lt;code&gt;step_size&lt;/code&gt; is the increment
by which to increase the index. The upper and lower bounds are&amp;nbsp;inclusive.&lt;/p&gt;
&lt;p&gt;There are also while loops, which have the&amp;nbsp;syntax&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;DO WHILE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;statements&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;END DO&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can exit a loop with the command &lt;code&gt;EXIT&lt;/code&gt;, or skip to the next iteration
with the command &lt;code&gt;CYCLE&lt;/code&gt;. The &lt;code&gt;EXIT&lt;/code&gt; command allows us to use the loop&amp;nbsp;structure&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;DO&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;statements&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;END DO&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which would otherwise be an infinite&amp;nbsp;loop.&lt;/p&gt;
&lt;p&gt;&lt;a name="instructions"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Getting Instructions from the&amp;nbsp;User&lt;/h3&gt;
&lt;p&gt;We need our program to read in data provided by the user. The best way to do
this is to read it from a text file. We could simply &amp;#8220;hardcode&amp;#8221; into the
program the name of the file in which the data is to be placed. However,
it would be preferable if the user were to be able to over-ride this default.
The same applies for the file to which we want our results to be written.
We could simply ask the user for the file names when the program is running,
but this is rather ungainly. A far nicer solution is for the user to, if they
desire, specify the file names as command-line arguments. To accomplish this
we use the following bit of&amp;nbsp;code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;num_args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;COMMAND_ARGUMENT_COUNT&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;IF&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;num_args&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;CALL &lt;/span&gt;&lt;span class="nb"&gt;GET_COMMAND_ARGUMENT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;IF&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;num_args&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;CALL &lt;/span&gt;&lt;span class="nb"&gt;GET_COMMAND_ARGUMENT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first line here asks for the number of command-line arguments which
have been provided. If any have been then the first will be the file
containing the data to be read in and we will place that data in the
appropriate string variable (&lt;code&gt;infile&lt;/code&gt;). If there is also a second argument
then it will
be the name of the file to which to output the data, and it will also
be placed in the appropriate variable (&lt;code&gt;outfile&lt;/code&gt;). The default input
and output file names were assigned when &lt;code&gt;infile&lt;/code&gt; and &lt;code&gt;outfile&lt;/code&gt; were&amp;nbsp;declared.&lt;/p&gt;
&lt;p&gt;In this snippet of code there are a few things worth&amp;nbsp;noting.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I make use of two intrinsic procedures: the function
&lt;code&gt;COMMAND_ARGUMENT_COUNT&lt;/code&gt; and the subroutine &lt;code&gt;GET_COMMAND_ARGUMENT&lt;/code&gt;. I will
explain subroutines and functions in more detail soon. These two procedures
happen to be part of the Fortran 2008 standard. Most compilers featured
equivalent functions prior to the 2008 standard, but there was never any
guarantee that they would be the same between&amp;nbsp;compilers.&lt;/li&gt;
&lt;li&gt;We encounter variable assignment in the first line. This is unremarkable
and just like every other high-level programming language. Values are
also assigned in second and third line, but to the arguments of a subroutine.
More on that in a&amp;nbsp;bit.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a name="reading"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Reading and Writing&amp;nbsp;Data&lt;/h3&gt;
&lt;p&gt;Now that we know the names of the input and output files, we want to write
the code needed to actually perform input and output. If there was one
thing that I could change about Fortran, it would be how it does &lt;span class="caps"&gt;IO&lt;/span&gt;; the
technique it uses is old-fashioned and extremely&amp;nbsp;clunky.&lt;/p&gt;
&lt;p&gt;First, we must open a file. To do this, we use the command
&lt;code&gt;OPEN(unit, FILE='&amp;lt;filename&amp;gt;'[, &amp;lt;other options&amp;gt;])&lt;/code&gt;. The unit is an integer,
specifying which &lt;span class="caps"&gt;IO&lt;/span&gt; &amp;#8220;stream&amp;#8221; we want to use. There are a few which are reserved:
0 for standard-error, 5 for standard-in, and 6 for standard-out. You should
use a positive integer less than 100. Perhaps the most important of the
other options which may be used when opening a file is &lt;code&gt;STATUS="..."&lt;/code&gt;. The
string may be set to &amp;#8220;unknown,&amp;#8221; indicating that we don&amp;#8217;t know whether or not
the file already exists, &amp;#8220;new,&amp;#8221; indicating that the file should &lt;em&gt;not&lt;/em&gt; already
exist, or &amp;#8220;old,&amp;#8221; indicating that the file &lt;em&gt;should&lt;/em&gt; already exist. You may
also use the option &lt;code&gt;IOSTAT=variable&lt;/code&gt;, where &lt;code&gt;variable&lt;/code&gt; should be an
integer. If, after the operation has been completed, &lt;code&gt;variable&lt;/code&gt; is equal to
zero, then it was successful. Otherwise, it indicates that there was an error
of some sort. Without specifying an &lt;code&gt;IOSTAT&lt;/code&gt; the program would crash on&amp;nbsp;you.&lt;/p&gt;
&lt;p&gt;To open our input file, we use the&amp;nbsp;code&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;! Read in data from the input file&lt;/span&gt;
&lt;span class="k"&gt;OPEN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IOSTAT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ioval&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;STATUS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;old&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;IF&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;ioval&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt; &lt;span class="c"&gt;! Make sure file exists&lt;/span&gt;
    &lt;span class="k"&gt;WRITE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filedne&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;TRIM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;STOP&lt;/span&gt;
&lt;span class="k"&gt;END IF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The statements within the if-statement will write an error message and then
stop the program if there was some problem opening the file.
We see here our first example of actual &lt;span class="caps"&gt;IO&lt;/span&gt;. This is done by the &lt;code&gt;WRITE&lt;/code&gt;
statement, which is writing a message to standard error. The next argument,
&lt;code&gt;filedne&lt;/code&gt; is a format
string. I won&amp;#8217;t go into detail about how these work&amp;#8212;you can Google it if
you&amp;#8217;re interested. Essentially, all that they do is specify how to format the
output of any variables provided. In this case that
variable is &lt;code&gt;TRIM(infile)&lt;/code&gt;, where &lt;code&gt;TRIM()&lt;/code&gt; is a built-in function which
strips any trailing spaces from the string. Instead of using a format string,
you can just replace the variable name with an asterisk, causing Fortran to
automatically format your output for you. This is often sufficient and we
will see examples of it below. The general form for output statements is
&lt;code&gt;WRITE(&amp;lt;unit&amp;gt;,&amp;lt;format-string&amp;gt;) &amp;lt;variables...&amp;gt;&lt;/code&gt;. Here, &lt;code&gt;&amp;lt;variables...&amp;gt;&lt;/code&gt;
are the variables whose values are to be&amp;nbsp;outputted.&lt;/p&gt;
&lt;p&gt;Next we&amp;#8217;ll read in the data. Input statements are very similar to output
statements, except that &lt;code&gt;WRITE&lt;/code&gt; is replaced with &lt;code&gt;READ&lt;/code&gt;. The general form
is &lt;code&gt;READ(&amp;lt;unit&amp;gt;,&amp;lt;format-string&amp;gt;) &amp;lt;variables...&amp;gt;&lt;/code&gt;. In this case, the input
data will be placed into the variables we specify in &lt;code&gt;&amp;lt;variables&amp;gt;&lt;/code&gt;. Input
is done line-by-line with as many variables filled as possible, given the
amount of data on the line. For input you should almost always use an asterisk
instead of a format string. An additional argument which can be provided for
&lt;code&gt;READ&lt;/code&gt; statements is an &lt;code&gt;IOSTAT&lt;/code&gt;. This works in exactly the same way as
in the &lt;code&gt;OPEN&lt;/code&gt; statement and can be useful to know when you&amp;#8217;ve read to the
end of a&amp;nbsp;file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;DO &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;data_max&lt;/span&gt; &lt;span class="c"&gt;! Read until end of file or reach maximum amount of data&lt;/span&gt;
    &lt;span class="k"&gt;READ&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;IOSTAT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ioval&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;postn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;potntl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;IF&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;ioval&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt;
&lt;span class="k"&gt;        &lt;/span&gt;&lt;span class="n"&gt;data_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;EXIT&lt;/span&gt;
&lt;span class="k"&gt;    END IF&lt;/span&gt;
&lt;span class="k"&gt;    IF&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;data_max&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;WRITE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;POTENTIAL_FIELD: Could not read &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;   &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;all input data. Truncated after &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data_max&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; elements.&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;END DO&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This bit of code will read in as much data from the file as we have room for in
our arrays, storing it in the arrays &lt;code&gt;postn&lt;/code&gt; and &lt;code&gt;potntl&lt;/code&gt;. If it reaches
the end of the file then it will remember the amount of data read in and exit
the loop. If it reaches the end of the array then it will print a warning
message saying that some of the data may have been truncated. The two slashses
that you see in the &lt;code&gt;WRITE&lt;/code&gt; statement are the concatenation&amp;nbsp;operator.&lt;/p&gt;
&lt;p&gt;Now that we&amp;#8217;re done with the input file, we&amp;#8217;ll close it using the command
&lt;code&gt;CLOSE(&amp;lt;unit&amp;gt;)&lt;/code&gt;. In this case we simply add the line &lt;code&gt;CLOSE(10)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After all of this, outputting our results will seem easy. This is done
with the following code fragment which will go after the actual calculations
in our&amp;nbsp;program&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;! Send the data to the output file&lt;/span&gt;
&lt;span class="k"&gt;OPEN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;STATUS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;unknown&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;WRITE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#Position                   Field Strength&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;DO &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data_size&lt;/span&gt;
    &lt;span class="k"&gt;WRITE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;postn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;END DO&lt;/span&gt;
&lt;span class="k"&gt;CLOSE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There is little to remark upon here, except to note that the first line
we write to the file&amp;nbsp;is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#Position                   Field Strength
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This provides a header for the file. Most pieces of plotting software know to
ignore lines beginning with a hash-sign. Thus, this provides a way to remind
yourself what the data in your file are, without getting in the way if you want
to make a graph from it. I consider it to be good style to put such a header
at the top of all of your data&amp;nbsp;files.&lt;/p&gt;
&lt;p&gt;&lt;a name="procedures"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Procedures&lt;/h3&gt;
&lt;p&gt;When writing a program, it is often useful to place some of your code into
subprograms. There are two main reasons for&amp;nbsp;this.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It allows the code to be executed multiple times without having to be
   rewritten each&amp;nbsp;time.&lt;/li&gt;
&lt;li&gt;It allows the code to be reused in future&amp;nbsp;programs.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In Fortran we call these &amp;#8220;procedures.&amp;#8221; In most languages they are called
&amp;#8220;methods.&amp;#8221; Fortran has two types of procedures: functions and subroutines.
Functions produce a value and are akin to the methods that you see in
other languages. Subroutines do not produce a value and are similar to void
methods in other&amp;nbsp;languages.&lt;/p&gt;
&lt;p&gt;It is best to place any procedures at the end of your program. Just below
where your program ends (after the &lt;code&gt;STOP&lt;/code&gt; command) type a line containing only
the word &lt;code&gt;CONTAINS&lt;/code&gt;. Place your procedures below that and before the end of
the&amp;nbsp;program.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;PROGRAM &lt;/span&gt;&lt;span class="n"&gt;potential_field&lt;/span&gt;
    &lt;span class="k"&gt;IMPLICIT NONE&lt;/span&gt;

    &lt;span class="c"&gt;! Variable declarations&lt;/span&gt;
    &lt;span class="c"&gt;! ...&lt;/span&gt;
&lt;span class="c"&gt;!---------------------------------------!&lt;/span&gt;

    &lt;span class="c"&gt;! Main program&lt;/span&gt;
    &lt;span class="c"&gt;! ...&lt;/span&gt;

    &lt;span class="k"&gt;STOP&lt;/span&gt;
&lt;span class="k"&gt;CONTAINS&lt;/span&gt;
    &lt;span class="c"&gt;! Subroutines and functions&lt;/span&gt;
    &lt;span class="c"&gt;! ...&lt;/span&gt;

&lt;span class="k"&gt;END PROGRAM &lt;/span&gt;&lt;span class="n"&gt;potential_field&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There is another way to package procedures, using &amp;#8220;modules.&amp;#8221; I&amp;#8217;ll
explain those later. I should also mention that it is possible to place your
procedures entirely outside of any program or module and in older versions of
Fortran this was the only option. However, unless you need to do this in order
to work with some legacy code, this is not a practice that I would
recommend.&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;
When procedures are stored in this way, the compiler won&amp;#8217;t be able to check
that you have passed the correct number and types of arguments and these bugs
are, in my experience, immensely frustrating to&amp;nbsp;catch.&lt;/p&gt;
&lt;p&gt;&lt;a name="pass"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Pass by&amp;nbsp;Reference&lt;/h4&gt;
&lt;p&gt;In most programming languages, when you pass a variable to a method as an
argument, a new
copy of that variable is created for the method to use. This variable will
then be deleted once the method has finished executing. This technique is call
&amp;#8220;pass by value.&amp;#8221; Fortran, however, works differently. Instead of creating
a copy of the passed variable, the procedure will be told where the original
variable is located and will then access the original whenever the variable
is used. This is called &amp;#8220;pass by&amp;nbsp;reference.&amp;#8221;&lt;/p&gt;
&lt;p&gt;If you are only using the variable&amp;#8217;s value as input then this is irrelevant to
the end user. However, if you modify the value of an argument in the procedure,
then that modification will be reflected in the  calling
program once the procedure has finished executing. At the end of the day, what
this means is that we have a way for procedures to return multiple pieces of
information. This also means that whether you use a function or a subroutine
is entirely a matter of taste. Typically, I will use a function if I only
want to return a single value. They are particularly useful for representing
mathematical functions in numerical routines such as root-finders, integrators,
&lt;span class="caps"&gt;ODE&lt;/span&gt; solvers, etc. I use a subroutine if I know that I want to return multiple
variables. You will see an example of each in the program we are writing&amp;nbsp;today.&lt;/p&gt;
&lt;p&gt;&lt;a name="functions"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Functions&lt;/h4&gt;
&lt;p&gt;I wrote a function to calculate derivatives. The basic syntax
for such a function&amp;nbsp;is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;FUNCTION &lt;/span&gt;&lt;span class="n"&gt;differentiate&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;independent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dependent&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;IMPLICIT NONE&lt;/span&gt;
    &lt;span class="c"&gt;! Argument declarations&lt;/span&gt;
    &lt;span class="kt"&gt;REAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;DIMENSION&lt;/span&gt;&lt;span class="p"&gt;(:),&lt;/span&gt; &lt;span class="k"&gt;INTENT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="n"&gt;dependent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                     &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
                                            &lt;span class="n"&gt;independent&lt;/span&gt;
    &lt;span class="kt"&gt;REAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;DIMENSION&lt;/span&gt;&lt;span class="p"&gt;(:),&lt;/span&gt; &lt;span class="k"&gt;ALLOCATABLE&lt;/span&gt;  &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="n"&gt;differentiate&lt;/span&gt;
    &lt;span class="c"&gt;! Local variables&lt;/span&gt;
    &lt;span class="c"&gt;! ...&lt;/span&gt;

    &lt;span class="c"&gt;! Perform the calculation&lt;/span&gt;
    &lt;span class="c"&gt;! ...&lt;/span&gt;
    &lt;span class="k"&gt;RETURN&lt;/span&gt;
&lt;span class="k"&gt;END FUNCTION &lt;/span&gt;&lt;span class="n"&gt;differentiate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We see that this function is called &lt;code&gt;differentiate&lt;/code&gt; and takes two arguments:
&lt;code&gt;independent&lt;/code&gt; and &lt;code&gt;dependent&lt;/code&gt;. While programs are ended with the keyword
&lt;code&gt;STOP&lt;/code&gt;, functions (and subroutines) are ended with the keyword &lt;code&gt;RETURN&lt;/code&gt;.
We call the function&amp;nbsp;with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;data_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;differentiate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;postn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;data_size&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;potntl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;data_size&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;(1:data_size)&lt;/code&gt; is an example of &amp;#8220;array-slice notation.&amp;#8221; More on that&amp;nbsp;later.&lt;/p&gt;
&lt;p&gt;Unlike languages based on C, arguments are not declared in the argument list
but in the body of the procedure alongside the local variables. You also need
to declare the return variable, which, by default, has the same name as the
function. When
declaring the arguments you should add the attribute &lt;code&gt;INTENT(&amp;lt;value&amp;gt;)&lt;/code&gt; where
&lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; may be &lt;code&gt;IN&lt;/code&gt;, &lt;code&gt;OUT&lt;/code&gt;, or &lt;code&gt;INOUT&lt;/code&gt;. The first instructs the
compiler that the value of the argument must not be changed within the
procedure, while the second tells the compiler that the variable &lt;em&gt;must&lt;/em&gt; have a
new value assigned to it within the procedure. The initial value of this
argument in the procedure is not guaranteed to be the same as the one it held
prior to being passed. The final option basically tells
the compiler that there are no such requirements for that argument and is the
default case if you omit the &lt;code&gt;INTENT&lt;/code&gt; attribute. No &lt;code&gt;INTENT&lt;/code&gt; should be
given to the return variable, although it is treated as if it were declared
with &lt;code&gt;INTENT(OUT)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Something which you may have noticed here is how we declared our input arrays
with &lt;code&gt;DIMENSION(:)&lt;/code&gt;. This syntax can be used for procedure arguments to
indicate that the size of the array is not known in advance. The size will be
set to be however large the array passed to the procedure is. A similar
notation is used for our return value, but that&amp;#8217;s because it is an
&lt;code&gt;ALLOCATABLE&lt;/code&gt; array. More on that in the sidebar&amp;nbsp;below.&lt;/p&gt;
&lt;p&gt;The full code for this function is provided&amp;nbsp;below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;FUNCTION &lt;/span&gt;&lt;span class="n"&gt;differentiate&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;independent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dependent&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;IMPLICIT NONE&lt;/span&gt;

    &lt;span class="c"&gt;! Input and output variables&lt;/span&gt;
    &lt;span class="kt"&gt;REAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;DIMENSION&lt;/span&gt;&lt;span class="p"&gt;(:),&lt;/span&gt; &lt;span class="k"&gt;INTENT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="n"&gt;dependent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                     &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
                                            &lt;span class="n"&gt;independent&lt;/span&gt;
    &lt;span class="kt"&gt;REAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;DIMENSION&lt;/span&gt;&lt;span class="p"&gt;(:),&lt;/span&gt; &lt;span class="k"&gt;ALLOCATABLE&lt;/span&gt;  &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="n"&gt;differentiate&lt;/span&gt;

    &lt;span class="c"&gt;! Local variables&lt;/span&gt;
    &lt;span class="kt"&gt;INTEGER&lt;/span&gt; &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                                         &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
                &lt;span class="n"&gt;ret_size&lt;/span&gt;
&lt;span class="c"&gt;!--------------------------------------------------------------------------!&lt;/span&gt;

    &lt;span class="c"&gt;! Figure out how much data there is to process&lt;/span&gt;
    &lt;span class="n"&gt;ret_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;MIN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SIZE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dependent&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;SIZE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;independent&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;ALLOCATE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;differentiate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ret_size&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c"&gt;! Calculate derivative for first data-point&lt;/span&gt;
    &lt;span class="n"&gt;differentiate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dependent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;dependent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;independent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;     &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
        &lt;span class="n"&gt;independent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c"&gt;! Calculate derivative for data-points in the middle&lt;/span&gt;
    &lt;span class="k"&gt;FORALL&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="n"&gt;ret_size&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="n"&gt;differentiate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dependent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;     &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
        &lt;span class="n"&gt;dependent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;independent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;independent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c"&gt;! Calculate the derivative for the last data-point&lt;/span&gt;
    &lt;span class="n"&gt;differentiate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ret_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dependent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ret_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;                       &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
        &lt;span class="n"&gt;dependent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ret_size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;independent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ret_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;                    &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
        &lt;span class="n"&gt;independent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ret_size&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;RETURN&lt;/span&gt;
&lt;span class="k"&gt;END FUNCTION &lt;/span&gt;&lt;span class="n"&gt;differentiate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I should mention that Fortran comes with a number of built-in functions. In
particular, it has all of the mathematical functions that you&amp;#8217;d expect. We
also so the &lt;code&gt;MIN()&lt;/code&gt; and &lt;code&gt;SIZE()&lt;/code&gt; intrinsic functions. The first returns
the smallest value in a list of arguments or in an array. The second returns
the number of elements in an&amp;nbsp;array.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sidebar:&lt;/strong&gt; You may notice that our return-variable here is declared with
the attribute &lt;code&gt;ALLOCATABLE&lt;/code&gt;. By default, Fortran arrays are static, meaning
that they have a fixed length determined at compile-time. However, sometimes
you might not know what size you want at compile-time or you might want to
adjust the size part way through your program. (Here it is the former.)
In that case, you use
an allocatable array. When first declared, these arrays have no determined size,
although you do have to specify their rank by using colons in the &lt;code&gt;DIMENSION&lt;/code&gt;
attribute. For example, a 3D array would be declared with &lt;code&gt;DIMENSION(:,:,:)&lt;/code&gt;.
Once you know they size you want, you allocate them as&amp;nbsp;follows&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;ALLOCATE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;where &lt;code&gt;lower&lt;/code&gt; is the index which you want the array to start at while
&lt;code&gt;upper&lt;/code&gt; is the index that you want it to end at. These bounds are inclusive.
Once you are done with the array, you can deallocate it with
&lt;code&gt;DEALLOCATE(array)&lt;/code&gt;. You can then reallocate
it again (potentially to a different size) if you wish. When a procedure
exits, all local allocatable arrays are automatically&amp;nbsp;deallocated.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sidebar 2:&lt;/strong&gt; Another new feature which I&amp;#8217;ve introduced here is the &lt;code&gt;FORALL&lt;/code&gt;
construct. This structure is used for array assignment and manipulation. It
behaves similarly to a loop, but there are some important
differences. From the old array, it will calculate values for the new array
and place them in temporary storage. Once it has calculated the value for every
element it will place them in the new array. The forall construct may iterate
over the array in any order. Its main purpose is to
make it easier for the compiler to optimize your code and run it on parallel
architectures, but it is also just a convenient way of writing certain
expressions. You can learn more &lt;a href="http://en.wikipedia.org/wiki/Fortran_95_language_features#The_FORALL_Statement_and_Construct"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a name="subroutines"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Subroutines&lt;/h4&gt;
&lt;p&gt;In our programming exercise, I used a subroutine to calculate
some statistical information. The basic syntax for such a subroutine is given&amp;nbsp;below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SUBROUTINE &lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdev&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;IMPLICIT NONE&lt;/span&gt;
    &lt;span class="c"&gt;! Argument declarations&lt;/span&gt;
    &lt;span class="kt"&gt;REAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;DIMENSION&lt;/span&gt;&lt;span class="p"&gt;(:),&lt;/span&gt; &lt;span class="k"&gt;INTENT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="k"&gt;array&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;REAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;INTENT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                          &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
                                            &lt;span class="n"&gt;stde&lt;/span&gt;
    &lt;span class="c"&gt;! Local variables&lt;/span&gt;
    &lt;span class="c"&gt;! ...&lt;/span&gt;

    &lt;span class="c"&gt;!Perform the calculation&lt;/span&gt;
    &lt;span class="c"&gt;!...&lt;/span&gt;
    &lt;span class="k"&gt;RETURN&lt;/span&gt;
&lt;span class="k"&gt;END SUBROUTINE &lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Other than the fact that you don&amp;#8217;t need to declare a return value, there isn&amp;#8217;t
much to say about subroutines which wasn&amp;#8217;t covered in the discussion about
functions.  The full code for the subroutine&amp;nbsp;is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SUBROUTINE &lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdev&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;IMPLICIT NONE&lt;/span&gt;

    &lt;span class="c"&gt;! Input and output variables&lt;/span&gt;
    &lt;span class="kt"&gt;REAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;DIMENSION&lt;/span&gt;&lt;span class="p"&gt;(:),&lt;/span&gt; &lt;span class="k"&gt;INTENT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="k"&gt;array&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;REAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;INTENT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                          &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
                                            &lt;span class="n"&gt;stdev&lt;/span&gt;

    &lt;span class="c"&gt;! Local variables&lt;/span&gt;
    &lt;span class="kt"&gt;INTEGER&lt;/span&gt; &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                                         &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
                &lt;span class="n"&gt;num&lt;/span&gt;
    &lt;span class="kt"&gt;REAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;::&lt;/span&gt;  &lt;span class="n"&gt;running_tot&lt;/span&gt;
&lt;span class="c"&gt;!--------------------------------------------------------------------------!&lt;/span&gt;

    &lt;span class="c"&gt;! Compute the mean&lt;/span&gt;
    &lt;span class="n"&gt;num&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SIZE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="kt"&gt;REAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;! Compute the standard deviation&lt;/span&gt;
    &lt;span class="k"&gt;DO &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;
        &lt;span class="n"&gt;running_tot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;running_tot&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="k"&gt;END DO&lt;/span&gt;
&lt;span class="k"&gt;    &lt;/span&gt;&lt;span class="n"&gt;stdev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;SQRT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="n"&gt;d0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kt"&gt;REAL&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;running_tot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;RETURN&lt;/span&gt;
&lt;span class="k"&gt;END SUBROUTINE &lt;/span&gt;&lt;span class="n"&gt;stats&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a name="array"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Array&amp;nbsp;Syntax&lt;/h3&gt;
&lt;p&gt;Fortran features powerful array syntax, similar to what is available in
Python. The simplest bit of this syntax is if you want an array which,
element by element, is the sum of two other arrays of the same size. You
simply use the syntax
&lt;code&gt;array1 = array2 + array3&lt;/code&gt;. You can use similar syntax for just about any 
operation on an array, including single-argument operators and operators with
scalars:
&lt;code&gt;array1 = array2 + scalar&lt;/code&gt;. In this case &lt;code&gt;scalar&lt;/code&gt; will be treated as though
it were an array of the same size as &lt;code&gt;array1&lt;/code&gt; and &lt;code&gt;array2&lt;/code&gt; where every
element had the same value as &lt;code&gt;scalar&lt;/code&gt;. With the right keywords, you can even
apply your own functions and subroutines to arrays in this&amp;nbsp;way.&lt;/p&gt;
&lt;p&gt;More advanced results can be achieved using array-slice notation. This allows
you to work with only a portion of an array. The syntax is
&lt;code&gt;array([lower]:[upper][:stride])&lt;/code&gt;. This returns an array containing every
&lt;code&gt;stride&lt;/code&gt;&lt;sup&gt;th&lt;/sup&gt; element of &lt;code&gt;array&lt;/code&gt; starting at &lt;code&gt;lower&lt;/code&gt; and ending at &lt;code&gt;upper&lt;/code&gt;. 
By default &lt;code&gt;increment&lt;/code&gt; is 1,
&lt;code&gt;lower&lt;/code&gt; is index at which &lt;code&gt;array&lt;/code&gt; starts, and &lt;code&gt;upper&lt;/code&gt; is the index at
which &lt;code&gt;array&lt;/code&gt; ends. Thus, &lt;code&gt;array(:)&lt;/code&gt;
corresponds to the whole array.
The slice syntax can be used in multidimensional arrays too,
with any mix you please of array-slices and specific indices in the different
directions. For example, if we had a 3D array with 100 elements in each
dimension we could specify &lt;code&gt;array3d(:,1:25,50)&lt;/code&gt; would give you the a 2D array
with dimensions 100 by&amp;nbsp;25.&lt;/p&gt;
&lt;p&gt;I used array slices a few times in our program. One example is when the program
calculates the electric&amp;nbsp;field:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;data_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;differentiate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;postn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;data_size&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;potntl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;data_size&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;data_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;data_size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first line here calculates the derivative of the data in the arrays
&lt;code&gt;postn&lt;/code&gt; and &lt;code&gt;potntl&lt;/code&gt; up to the &lt;code&gt;data_size&lt;/code&gt;&lt;sup&gt;th&lt;/sup&gt; element, storing
the results in &lt;code&gt;field&lt;/code&gt;. The second line multiplies the elements of &lt;code&gt;field&lt;/code&gt;
containing useful data by -1. These were very simple uses of array-slices and
shows only some of their&amp;nbsp;power.&lt;/p&gt;
&lt;p&gt;&lt;a name="compiling"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Compiling and Running Your&amp;nbsp;Program&lt;/h3&gt;
&lt;p&gt;We now have a working program. As a reminder, you can
&lt;a href="https://politicalphysicist.github.io/attachments/fortran/potential_field.f90"&gt;download it here&lt;/a&gt;.
It&amp;#8217;s time to compile it and see if it works! The Fortran compiler which you
will use most often is &lt;code&gt;gfortran&lt;/code&gt;. This is a decent compiler&lt;sup id="fnref:4"&gt;&lt;a class="footnote-ref" href="#fn:4" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt; and has the
advantage of being free software.&lt;sup id="fnref:5"&gt;&lt;a class="footnote-ref" href="#fn:5" rel="footnote"&gt;5&lt;/a&gt;&lt;/sup&gt; If you are running Linux then you can
install it using &lt;code&gt;sudo apt-get install gfortran&lt;/code&gt; (assuming it&amp;#8217;s
Debian, Ubuntu, Mint, or one of their derivatives&amp;#8212;I don&amp;#8217;t know how to use other
distro&amp;#8217;s package managers). Otherwise you can
&lt;a href="https://gcc.gnu.org/wiki/GFortranBinaries"&gt;download it here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Compiling and running a simple program like this is very easy; just type
&lt;code&gt;gfortran ./potential_field.f90&lt;/code&gt; at the command line in the directory where
you&amp;#8217;ve kept your source code. This will produce the executable file called
&lt;code&gt;a.out&lt;/code&gt;. To run the program, type &lt;code&gt;./a.out&lt;/code&gt;. Before running it, make
sure that you have a file containing your data on the electrical potential
called &amp;#8220;in.dat&amp;#8221;. If you use the &lt;a href="https://politicalphysicist.github.io/attachments/fortran/in.dat"&gt;in.dat&lt;/a&gt;
file provided here then you should get the following&amp;nbsp;output:&lt;/p&gt;
&lt;p&gt;&lt;img alt="What you should see in your terminal when you run with the input data provided here." src="https://politicalphysicist.github.io/images/fortran/output.png" style="float:none;display:block;margin-left:auto;margin-right:auto" /&gt;&lt;/p&gt;
&lt;p&gt;The output file &lt;code&gt;out.dat&lt;/code&gt; should match &lt;a href="https://politicalphysicist.github.io/attachments/fortran/out.dat"&gt;this one&lt;/a&gt;.
You should see an
electric field that rounds to 20 &lt;span class="caps"&gt;NC&lt;/span&gt;&lt;sup&gt;-1&lt;/sup&gt; everywhere. Don&amp;#8217;t worry if
your numbers vary from mine in the last few decimal places.
The last decimal places of floating point values often vary from computer to
computer and from compiler to compiler because of the finite levels of
precision with which floating point numbers can be&amp;nbsp;stored.&lt;/p&gt;
&lt;p&gt;If your input data is contained in some file other than &lt;code&gt;in.dat&lt;/code&gt; then you
can run the
program using the command &lt;code&gt;./a.out infile&lt;/code&gt;. If you want your output
data to go to a file other than &lt;code&gt;out.dat&lt;/code&gt; then run the program with the
command &lt;code&gt;./a.out infile outfile&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You could also compile your program with the command
&lt;code&gt;gfortran -o potential_field potential_field.f90&lt;/code&gt;. This will produce an
executable called &lt;code&gt;potential_field&lt;/code&gt;. Had a different argument been placed
after the &lt;code&gt;-o&lt;/code&gt; flag then that would have been the name of the executable.
The program would now be run using the command &lt;code&gt;./potential_field&lt;/code&gt;. Once
again, you can optionally extra arguments specifying the input and output&amp;nbsp;files.&lt;/p&gt;
&lt;p&gt;&lt;a name="packaging"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Packaging Your&amp;nbsp;Procedures&lt;/h3&gt;
&lt;p&gt;For a small, simple program like this it is easiest to keep everything in one
file. However, as your program becomes larger, it will become desirable to
put certain things into separate files. This prevents files from becoming
overwhelmingly huge.&lt;sup id="fnref:6"&gt;&lt;a class="footnote-ref" href="#fn:6" rel="footnote"&gt;6&lt;/a&gt;&lt;/sup&gt; It also means that if you want to reuse some of your
procedures in other programs, it will be a lot easier to transfer them over.
If you compile them correctly (not something we&amp;#8217;ll get into here) then you
won&amp;#8217;t even need to transfer them&amp;#8212;you can use the same &amp;#8220;library&amp;#8221; file for
multiple&amp;nbsp;programs.&lt;/p&gt;
&lt;p&gt;In order to retain the compiler&amp;#8217;s ability to know whether we are passing the
correct arguments to a procedure we need to place that procedures in a &amp;#8220;module&amp;#8221;.
Modules are a bit like programs, containing both variables and
procedures (also &amp;#8220;derived types,&amp;#8221; in case you ever want to use them). However,
unlike programs, they can not be run on their own; they just contain code to
be used by other modules and programs. The basic syntax for our module&amp;nbsp;is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;MODULE &lt;/span&gt;&lt;span class="n"&gt;tools&lt;/span&gt;
    &lt;span class="k"&gt;IMPLICIT NONE&lt;/span&gt;

    &lt;span class="c"&gt;!Variable declarations&lt;/span&gt;
    &lt;span class="c"&gt;! ...&lt;/span&gt;

&lt;span class="k"&gt;CONTAINS&lt;/span&gt;
    &lt;span class="c"&gt;! Procedures&lt;/span&gt;
    &lt;span class="c"&gt;! ...&lt;/span&gt;

&lt;span class="k"&gt;END MODULE &lt;/span&gt;&lt;span class="n"&gt;tools&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If your module does not contain any procedures then omit the &lt;code&gt;CONTAINS&lt;/code&gt;
statement.&lt;/p&gt;
&lt;p&gt;To make a module&amp;#8217;s contents available to a program (or another module) you
place a &lt;code&gt;USE&lt;/code&gt; statement followed by the module name at the very start of your
program&amp;#8212;before even the
&lt;code&gt;IMPLICIT NONE&lt;/code&gt; statement. In our case this means that our program starts&amp;nbsp;with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;PROGRAM &lt;/span&gt;&lt;span class="n"&gt;potential_field&lt;/span&gt;
    &lt;span class="k"&gt;USE &lt;/span&gt;&lt;span class="n"&gt;tools&lt;/span&gt;
    &lt;span class="k"&gt;IMPLICIT NONE&lt;/span&gt;
    &lt;span class="c"&gt;! ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you need to load multiple modules then you place additional &lt;code&gt;USE&lt;/code&gt;
statements at the start of the program, each on its own line. Take a look at
the &lt;a href="https://politicalphysicist.github.io/attachments/fortran/tools_mod.f90"&gt;module&lt;/a&gt; and
&lt;a href="https://politicalphysicist.github.io/attachments/fortran/potential_field2.f90"&gt;modified program&lt;/a&gt; to
see what changes were&amp;nbsp;made.&lt;/p&gt;
&lt;p&gt;The main disadvantage of using modules (although it&amp;#8217;s one that can be
overcome with sufficient
organization and/or appropriate software tools) is that it
makes the compile process more
complicated. It is important that module files are compiled &lt;em&gt;before&lt;/em&gt; any
files which use them. This is because, upon compiling the module into an
&amp;#8220;object file,&amp;#8221; the compiler will produce a file ending in the extension
&lt;code&gt;.mod&lt;/code&gt;. This file contains information for the compiler about the contents of
the module and which will need to read as it compiles anything that
uses the module. Needless to say, if you have modules using other modules then
things can get&amp;nbsp;complicated.&lt;/p&gt;
&lt;p&gt;In this case we can compile like&amp;nbsp;so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gfortran -c tools_mod.f90
gfortran -c potential_field2.f90
gfortran -o potential_field2 tools_mod.o potential_field2.o
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Aside from the change in the name of the executable, the program can be run
just as&amp;nbsp;before.&lt;/p&gt;
&lt;p&gt;&lt;img alt="What you should see in your terminal when you compile and run our rewritten version of the program." src="https://politicalphysicist.github.io/images/fortran/output2.png" style="float:none;display:block;margin-left:auto;margin-right:auto" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name="summing"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Summing&amp;nbsp;Up&lt;/h3&gt;
&lt;p&gt;There you have it. You&amp;#8217;ve now seen how various features in Fortran work and
seen an example of a working program. Although this was a lot of information
all at once, Fortran really isn&amp;#8217;t a hard language to learn. The syntax is
intuitive and the modern version comes with enough features to be useful but
not so many as be overwhelming. Don&amp;#8217;t feel bad if you&amp;#8217;ve forgotten some of the
syntax that I&amp;#8217;ve gone over&amp;#8212;even experienced programmers will occasionally have
to look something up. Hopefully now you&amp;#8217;ll feel ready to try writing a program
of your own in Fortran and begin learning the language&amp;#8217;s capabilities and
limitations in the best way possible: through&amp;nbsp;experience.&lt;/p&gt;
&lt;p&gt;&lt;a name="resources"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Useful&amp;nbsp;Resources&lt;/h3&gt;
&lt;p&gt;There are plenty of features in Fortran which I have not mentioned. If you want
to learn more about them, some useful links are given&amp;nbsp;below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://en.wikipedia.org/wiki/Fortran_95_language_features"&gt;Fortran 95 language features&lt;/a&gt;:&lt;/strong&gt;
A Wikipedia article which gives a good overview of the various capabilities of
Fortran 95. I regularly use this as a reference when I forget some&amp;nbsp;syntax.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://www.cs.rpi.edu/~szymansk/OOF90/bugs.html"&gt;Mistakes in Fortran 90 Programs that Might Surprise You&lt;/a&gt;:&lt;/strong&gt;
A webpage describing some of the more obscure behaviour of Fortran. It&amp;#8217;s good to be familiar with what these are. If your program
is behaving strangely, these are all good things to check&amp;nbsp;for.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://www.cs.mtu.edu/~shene/COURSES/cs201/NOTES/chap05/format.html"&gt;Fortran Formats&lt;/a&gt;:&lt;/strong&gt;
Some information on how format strings can be used to specify output (and,
in principle, input) in&amp;nbsp;Fortran.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://gcc.gnu.org/onlinedocs/gfortran/"&gt;The &lt;span class="caps"&gt;GNU&lt;/span&gt; Fortran Compiler&lt;/a&gt;:&lt;/strong&gt;
The manual for gfortran, the main free compiler. In my opinion it is the best
documented compiler out there. Particularly useful is its list of intrinsic
functions and subroutines, which comes with information and, usually, an example
for each&amp;nbsp;one.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="ftp://ftp.nag.co.uk/sc22wg5/n1551-n1600/n1579.pdf"&gt;The New Features of Fortran 2003&lt;/a&gt;:&lt;/strong&gt;
A &lt;span class="caps"&gt;PDF&lt;/span&gt; providing an introduction to what&amp;#8217;s new in the Fortran 2003 standard.
Note that not all features are yet supported by all&amp;nbsp;compilers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="ftp://ftp.nag.co.uk/sc22wg5/n1801-n1850/n1828.pdf"&gt;The New Features of Fortran 2008&lt;/a&gt;:&lt;/strong&gt;
A &lt;span class="caps"&gt;PDF&lt;/span&gt; providing an introduction to what&amp;#8217;s new in the Fortran 2008 standard.
Note that not all features are yet supported by all&amp;nbsp;compilers.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Others including C and C++, when high efficiency is desired, and &lt;span class="caps"&gt;MATLAB&lt;/span&gt; and Python for data processing.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;For the most part we&amp;#8217;ll be sticking to the 1995 standard. The 2003 and 2008 standards, which contain many powerful new features such as object-oriented programming, are still not entirely supported by compilers. You can see their current statuses &lt;a href="http://fortranwiki.org/fortran/show/Fortran+2003+status"&gt;here&lt;/a&gt; and &lt;a href="http://fortranwiki.org/fortran/show/Fortran+2008+status"&gt;here&lt;/a&gt;. That said, enough has been implemented that you can now write object-oriented code in Fortran if you are using a relatively up-to-date compiler.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;Even when working with legacy code, you can often use what&amp;#8217;s called an interface to manually tell the compiler what arguments are required. While these are a bit tedious to write, and thus shouldn&amp;#8217;t be used with new code, they are worth your while if you can&amp;#8217;t package your procedures in a more modern way.&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:4"&gt;
&lt;p&gt;However, for actual computational physics, you will likely end up using &lt;code&gt;ifort&lt;/code&gt; or &lt;code&gt;pgfortran&lt;/code&gt;, which produce faster programs. Their major disadvantage is that the licenses are extremely expensive. They are also proprietary software.&amp;#160;&lt;a class="footnote-backref" href="#fnref:4" rev="footnote" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:5"&gt;
&lt;p&gt;That&amp;#8217;s free as in &amp;#8220;free beer&amp;#8221; and free as in &amp;#8220;free speech&amp;#8221;. Another way to say this is that GFortran is open source. However, some&amp;#8212;including the &lt;span class="caps"&gt;GNU&lt;/span&gt; Project, which makes GFortran&amp;#8212;object to that term and think &amp;#8220;free software&amp;#8221; is better. It&amp;#8217;s one of those &lt;a href="https://www.youtube.com/watch?v=9foi342LXQE"&gt;People&amp;#8217;s Front of Judea vs. Judean People&amp;#8217;s Front&lt;/a&gt; sort of things.&amp;#160;&lt;a class="footnote-backref" href="#fnref:5" rev="footnote" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:6"&gt;
&lt;p&gt;I know of one case where the developer refuses to split up the code, resulting in a file that is about 130 thousand lines long. It is not my favourite file to have to deal with.&amp;#160;&lt;a class="footnote-backref" href="#fnref:6" rev="footnote" title="Jump back to footnote 6 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="Programming"></category><category term="Fortran"></category><category term="High Performance Computing"></category><category term="gfortran"></category></entry><entry><title>I Designed aÂ Website</title><link href="https://politicalphysicist.github.io/i-designed-a-website.html" rel="alternate"></link><published>2014-09-26T11:20:00+01:00</published><updated>2014-09-26T11:20:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2014-09-26:i-designed-a-website.html</id><summary type="html">&lt;p&gt;I have recently finished designing a new website for the Saint Mary&amp;#8217;s University
Astronomy and Physics Society (&lt;span class="caps"&gt;SMUAPS&lt;/span&gt;). I decided to build this website using
Pelican (the same software that I use for this blog) because of my familiarity
with it and because of the versatility of the software. The website can be found
&lt;a href="http://ap.smu.ca/~smuaps"&gt;here&lt;/a&gt;. If you would like to find
out about the technical details of how the site is designed, see these two
posts:
&lt;a href="http://ap.smu.ca/~smuaps/readme-website-documentation.html"&gt;&lt;span class="caps"&gt;README&lt;/span&gt; (Website Documentation)&lt;/a&gt; and
&lt;a href="http://ap.smu.ca/~smuaps/new-website-design.html"&gt;New Website Design&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot of the new website's home page." src="https://politicalphysicist.github.io/images/smuapsWeb.png" /&gt;&lt;/p&gt;</summary><category term="Pelican"></category><category term="Website"></category><category term="SMU"></category><category term="University"></category></entry><entry><title>FixingÂ Pharmaceuticals</title><link href="https://politicalphysicist.github.io/fixing-pharmaceuticals.html" rel="alternate"></link><published>2014-06-28T22:00:00+01:00</published><updated>2014-06-28T22:00:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2014-06-28:fixing-pharmaceuticals.html</id><summary type="html">&lt;p&gt;&lt;img alt="Mortar and pestle--the symbol for pharmacies in Canada." src="https://politicalphysicist.github.io/images/mortarPestle.jpg" /&gt;
Several weeks ago, now, I read a news story on &lt;span class="caps"&gt;CBC&lt;/span&gt; about the
&lt;a href="http://www.cbc.ca/news/politics/drug-shortages-worsening-as-health-canada-starts-study-to-address-it-1.2652581"&gt;problem of drug shortages&lt;/a&gt;.
It appears that it is not uncommon for pharmaceutical companies (I&amp;#8217;m going to
avoid the term &amp;#8220;Big Pharma&amp;#8221; here, as to me it always sound like a juvenile
attempt at fear-mongering) to suddenly stop, or at least drastically scale down,
production of frequently used drugs. Unfortunately, no real solutions were
being offered to this. At most, Health Canada was trying to make it mandatory
for the manufacturers to report&amp;nbsp;shortages.&lt;/p&gt;
&lt;p&gt;This is by no means the only problem that exists with pharmaceutical companies.
I vaguely remember hearing several years ago on an American news channel that
many companies were no longer producing generics, as they are not very
profitable. Of course, generics are a lot cheaper for consumers, as they are
not subject to the legal monopoly of patent law. Patents themselves are
problematic as they increase prices, but some form of patent protection seems
to be needed in order to encourage innovation and the development of new
drugs by the private&amp;nbsp;sector.&lt;/p&gt;
&lt;p&gt;But even patents aren&amp;#8217;t always enough to encourage the research we need. This
became clear in a recent report by &lt;span class="caps"&gt;CBC&lt;/span&gt; that pharmaceutical companies
&lt;a href="http://www.cbc.ca/news/health/antibiotic-scientist-must-push-discovery-to-market-1.2686347?cmp=rss"&gt;do not seem to be interested in developing new antibiotics&lt;/a&gt;.
The reason for this is that this is quite a research-intensive process with
relatively low returns, as antibiotics aren&amp;#8217;t used that much compared to
medication for chronic conditions. However, it is absolutely vital that new
antibiotics are developed as old ones are becoming ineffective against
antibiotic-resistant&amp;nbsp;bacteria.&lt;/p&gt;
&lt;p&gt;The problem is becoming so acute that even
&lt;a href="http://www.newscientist.com/"&gt;New Scientist&lt;/a&gt;, a liberal but hardly a socialist
publication, published an editorial calling for all pharmaceutical companies
to be converted non-profit bodies charged with pursuing the public interest.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;
Whether this meant nationalization or simply conversion to independent
non-profit organizations (or some mixture of the two) I am not sure.
In any case,
I strongly support such a demand and think that it would be enormously
beneficial. Those who know me well won&amp;#8217;t be surprised by this, as it seems that
my response to just about any problem that I see in the economy is to
nationalize the relevant sector.&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;However, in this case I am perfectly willing to call for a more pragmatic
solution&amp;#8212;at least for the time being. Given how important a steady supply of
drugs is to the healthcare system, you don&amp;#8217;t want to do anything that could
seriously disrupt their production. Also, this is a problem which really does
need to be fixed as soon as possible and, while the nationalization of a whole
sector would never win broad support in the near future,&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; a more
moderate idea might. Not to say that this idea isn&amp;#8217;t radical given the current
political climate, but it is something which could be justified based on
pragmatism and could still seem at least vaguely conceivable to the general&amp;nbsp;public.&lt;/p&gt;
&lt;p&gt;My proposal is fairly simple: the creation of a new Crown Corporation.&lt;sup id="fnref:4"&gt;&lt;a class="footnote-ref" href="#fn:4" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt; Since
most people my age won&amp;#8217;t know what this is (it having been so
long since any new ones have been created) I&amp;#8217;ll explain: a Crown Corporation is
a companies which, rather than being owned by private individuals or listed
on the stock market, is owned by the government. The only significant example
in Nova Scotia is &lt;span class="caps"&gt;NSLC&lt;/span&gt; (the liquor stores). In most of Canada (although not Nova
Scotia) the power companies are owned by the provincial government.
Federal Crown Corporations include Canada Post, &lt;span class="caps"&gt;CBC&lt;/span&gt;, and Via Rail.
We used to own a lot more too: &lt;span class="caps"&gt;NS&lt;/span&gt; Power, Air Canada, the Uranium mines,
Canadian National Railway, and  Petro-Canada, among others. However,
these were sold
off in the &amp;#8216;80s and &amp;#8216;90s, purportedly to improve the efficiency of these
companies although I&amp;#8217;m inclined to think that it was primarily for ideological&amp;nbsp;reasons.&lt;/p&gt;
&lt;p&gt;Anyway, back to my point. I think that the government should create a new Crown
Corporation which, for the sake of argument, I shall call Pharmacy Canada.
Pharmacy Canada would be charged with the development of new drugs which would
tend to have a low rate of return on investment (such as antibiotics) as well
as producing generic drugs. These would be sold at cost to the provincial health
authorities. They could also be sold slightly above cost to other developed
countries and, perhaps, at a subsidized rate to developing countries. An
additional role that could be played by Pharmacy Canada would be to act as a
bulk-purchaser of those drugs which still needed to be obtained from the
private sector. These would then be sold on, at cost, to the provinces as well.
The advantage of such centralized purchasing that it would place
Pharmacy Canada in a position to negotiate lower prices. This is a system
which has been used successfully by charities to deliver cheaper drugs to
developing countries and is, in fact, called for by the Green Party (although
no doubt they would balk at the idea of actually &lt;em&gt;producing&lt;/em&gt; drugs in the public
sector). All of these policies would help to reduce the price of drugs,
stabilizing the
fastest growing component of healthcare costs and making our public healthcare
system more&amp;nbsp;sustainable.&lt;/p&gt;
&lt;p&gt;This is all eminently achievable even within the current political situation.
While it would, no doubt, be heavily lobbied against by the pharmaceutical
companies, I don&amp;#8217;t see what they could actually do to prevent it. I suppose they
could retaliate through capital flight, although I don&amp;#8217;t see how this would be
in their interest. If they were to try then their old factories could be bought
up by Pharmacy Canada, thus protecting jobs. While setting up a new Crown
Corporation would require some capital, interest rates remain low and the
federal government has a high credit rating, allowing it to borrow cheaply.
The federal deficit is almost gone and we could be running a substantial
surplus if we were to return taxes to their 2000 levels. Thus I don&amp;#8217;t think that
there is any real financial argument against establishing Pharmacy&amp;nbsp;Canada.&lt;/p&gt;
&lt;p&gt;The primary objection to this would be ideological: the belief that the
government is not capable of running a successful, productive, company. Such
attitudes are wide-spread, even among liberals and social democrats (e.g. the
&lt;span class="caps"&gt;NDP&lt;/span&gt;). While there have been some issues with Crown Corporations in the past, I
still think that they were much better run than people give them credit for.
They may not have had the profit margins of private enterprise, but this is
because they were meant to be meeting social, not just purely economic
objectives. Objecting to this (as is done by my father) is to miss the entire
purpose of a Crown Corporation; if you wanted it to be run just like a private
company then you&amp;#8217;d have left it in the private sector in the first place.
Although Pharmacy Canada wouldn&amp;#8217;t deliver the same profit margins as the
existing private pharmaceutical companies, it would be able to perform
functions which they are
failing to do. This sort of value can not be reflected in simple calculations
of&amp;nbsp;efficiency.&lt;/p&gt;
&lt;p&gt;While I suspect that the traditional means of running Crown Corporations&lt;sup id="fnref:5"&gt;&lt;a class="footnote-ref" href="#fn:5" rel="footnote"&gt;5&lt;/a&gt;&lt;/sup&gt; would be able to achieve much of what I describe, I believe that
even greater accomplishments could be made if Pharmacy Canada were to be run
along socialist lines. This would mean that the board would consist of
representatives of researchers, doctors, employees, patients, and government.
The advantages to this are twofold. First,
and more abstractly, it would ensure that the company was run democratically,
something which I think has value in its own right. But second, the
representation of researchers and doctors would ensure that fruitful avenues of
research were being pursued. My strong suspicion is that this would prove a
mores successful (as measured in health outcomes, rather than profit) way of
directing research than what is currently provided by the private&amp;nbsp;sector.&lt;/p&gt;
&lt;p&gt;Now, being the realist/cynic that I am, I realize that the creation of Pharmacy
Canada stands absolutely no chance of happening even if the &lt;span class="caps"&gt;NDP&lt;/span&gt; were elected
in 2015. The idea of public enterprise has simply crept too far outside of the
political mainstream. But this is no reason to stop talking about it; if it is
ever to get back into the political mainstream then it is something which must
become broadly popular and also seriously discussed in progressive political
circles. We need organizations like &lt;a href="https://www.broadbentinstitute.ca/en"&gt;The Broadbent Institute&lt;/a&gt;,
the &lt;a href="http://www.canadians.org/"&gt;Council of Canadians&lt;/a&gt;, and the
&lt;a href="https://www.policyalternatives.ca/"&gt;Canadian Centre for Policy Alternatives&lt;/a&gt;
not only to call for such a policy but to perform studies detailing how to do
it. Nor should we be afraid to suggest it as individuals. Because, at least in
this case, the radical is becoming the&amp;nbsp;pragmatic.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Unfortunately, this article would now be archived and only accessible to those with a subscription, so I can&amp;#8217;t post a link.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;I do realize that this alone won&amp;#8217;t fix all of the problems, as democratic control is needed over public enterprise if it is to truly behave differently than private enterprise (other than just behaving slightly more bureaucratically). Nonetheless, nationalization is usually a good start in my view, as it begins to address the questions of ownership, control, and power.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;In a few countries, there are a few sectors which may prove an exception to this. For example, the rail and energy sectors in Britain or the financial sector in Greece.&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:4"&gt;
&lt;p&gt;For those who are unaware, in Canada &amp;#8220;the Crown&amp;#8221; tends to refer to &amp;#8220;the state&amp;#8221;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:4" rev="footnote" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:5"&gt;
&lt;p&gt;Boards of directors were appointed by Parliament, consisting mainly of businessmen (and I use the gendered term deliberately) and former politicians.&amp;#160;&lt;a class="footnote-backref" href="#fnref:5" rev="footnote" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Pharmaceuticals"></category><category term="Antibiotics"></category><category term="Crown Corporations"></category><category term="Socialism"></category></entry><entry><title>10 Reasons I Sometimes Hate Being aÂ Socialist</title><link href="https://politicalphysicist.github.io/10-reasons-i-sometimes-hate-being-a-socialist.html" rel="alternate"></link><published>2014-06-15T09:40:00+01:00</published><updated>2014-06-15T09:40:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2014-06-15:10-reasons-i-sometimes-hate-being-a-socialist.html</id><summary type="html">&lt;p&gt;As you might have gathered from my blog posts here, I am pretty left wing.
You know you&amp;#8217;re pretty radical when you have to preface any explanation of
your beliefs with &amp;#8220;Well, I would &lt;em&gt;not&lt;/em&gt; consider myself a communist.&amp;#8221;
And, while I am quite confidant in the validity of my beliefs, there are days
when I really wish that I didn&amp;#8217;t have them. So, without further ado, here
are the top 10 reasons I wish I wasn&amp;#8217;t a&amp;nbsp;socialist.&lt;/p&gt;
&lt;h3&gt;1. The exhaustion of trying to stick to the moral&amp;nbsp;high-ground.&lt;/h3&gt;
&lt;p&gt;No one would ever be a socialist in the West if they didn&amp;#8217;t believe that
there was a moral force behind it. Not only does socialism mean that you end
up fighting a thankless, apparently losing battle, but also that you&amp;#8217;re trying
to live by a set of principles that can seem impossible under our current
system. For example, how am I supposed to find clothes that I know weren&amp;#8217;t made
in sweatshops? How do you live an environmentally-friendly lifestyle in cities
designed around the car? How do you fight patriarchy when even your friends
sometimes say derogatory things about&amp;nbsp;women?&lt;/p&gt;
&lt;p&gt;On the more abstract level, it&amp;#8217;s exhausting trying to explain all of this to
friends. And what do you do about that slight feeling of disapproval when they
don&amp;#8217;t live up to your moral standards? Judging people is not only unpleasant,
but also quite tiresome as&amp;nbsp;well.&lt;/p&gt;
&lt;h3&gt;2. I am perpetually&amp;nbsp;angry.&lt;/h3&gt;
&lt;p&gt;Sticking to your moral principles also tends to make you distinctly unhappy
about the state of the world around you.
Seeing as socialism has been suffering almost nothing but defeats for the
past 30 years, just about anything that happens in politics will be bad news
for me. I swear, government policy seems almost specifically tailored to piss
me off, whether it&amp;#8217;s cuts in services, cuts in taxes, support for foreign
interventions, failure to tackle climate change, rolling back of labour rights,
privatization, or what. The wonderfully pessimistic left-wing British
comedian Jeremy Hardy sums it up&amp;nbsp;well:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All socialists have bad backs because we slouch&amp;#8212;except when we&amp;#8217;re watching
the news when we sit on the edge of our seats, shout, and wave our arms.
Generally we sit hunched, arms crossed in a judgemental way, the whole of
our bodies pulled into a&amp;nbsp;frown.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;3. I get to listen to people&amp;#8217;s ignorant statements about&amp;nbsp;socialism.&lt;/h3&gt;
&lt;p&gt;Because of the horrors inflicted in Eastern Europe in the name of socialism,
various people will insist that socialism is an inherently bloody and evil
philosophy or that when I advocate something like redistributive taxes (let
alone start talking about the long list of industries that I&amp;#8217;d like to
see nationalized) I am advocating
gulags.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; No less irritating are people who say that socialism inevitably
leads to a situation like the one in Greece. Don&amp;#8217;t these people realize that
Greece is an example of a welfare state (albeit a highly dysfunctional one),
not a socialist economy in which the means of production are held in&amp;nbsp;common?&lt;/p&gt;
&lt;h3&gt;4. Having to hold back when discussing&amp;nbsp;politics.&lt;/h3&gt;
&lt;p&gt;Well, as those who know me well can attest, I&amp;#8217;m not actually very good at this.
But there are many situations in which I do try because, if I were to say what
I actually thought, people would think that I was crazy. When I do fully speak
my mind, at least to someone who is also political, I will often end up in
arguments. Which is never a fun thing and tends to leave me feeling perturbed
for a day or&amp;nbsp;two.&lt;/p&gt;
&lt;h3&gt;5. Looking  at the world in a fundamentally different way than&amp;nbsp;others.&lt;/h3&gt;
&lt;p&gt;One of the things which makes political discussions so difficult for me is that
the set of assumptions I go in with are different from those of just about
everyone else. Of course, the main one is that I don&amp;#8217;t assume that capitalism
is the only option out there. This means that the range of policies I consider
are not as constrained as for most people. For example, if someone argues
that we can&amp;#8217;t pursue some regulation because it would cause investment to dry
up, then I&amp;#8217;d suggest nationalizing the banks so that there is public control
over investment. If a policy has the risk of causing a business to leave the
country, then place the business under worker&amp;#8217;s&amp;nbsp;control.&lt;/p&gt;
&lt;p&gt;But there are also more subtle things at play here. Socialists often have a
different interpretation of history than the conventional one. While I think
that this is a more accurate interpretation and provides a much better
explanation of the world, it does make discussing history with other people
more difficult because there is less common ground between&amp;nbsp;us.&lt;/p&gt;
&lt;h3&gt;6. The difficulty introduced when trying to&amp;nbsp;date.&lt;/h3&gt;
&lt;p&gt;Of course, none of this makes meeting people any easier. It can make things
awkward enough among friends. But when you&amp;#8217;re trying to date it makes things
harder still. Politics, after all, does not make a great thing to discuss on
a date, especially when your politics are rather unusual. But there&amp;#8217;s also the
fact that if I&amp;#8217;m in a relationship I&amp;#8217;d like it to be with someone who broadly
shares the same values that I do. I don&amp;#8217;t think this is unreasonable, surely?
The problem is, most people are either unpolitical (in which case one of my
major interests is off the table to talk about) or have considerably more
moderate views than mine. Oh well, probably someday I&amp;#8217;ll meet a nice liberal
or social democrat who can put up with my radicalism. Because that seems
considerably more likely than my finding another socialist that I&amp;#8217;d get along
with well enough to want to date.&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; Which leads on to my next&amp;nbsp;point&amp;#8230;&lt;/p&gt;
&lt;h3&gt;7. Having to put up with other&amp;nbsp;socialists.&lt;/h3&gt;
&lt;p&gt;Well, there&amp;#8217;s a whole article&amp;#8217;s worth of stuff I could say about this one.
There&amp;#8217;s the fact that most socialists seem to end up taking irrational views
on things like nuclear energy, genetically modified foods, and any number
of other things. Similarly, there&amp;#8217;s the general lack of knowledge about
science and critical thinking, the consequent inability to come to informed
conclusions, and the stupidity that results when dealing with many contemporary
issues (although, in fairness, I think that most ideological groups are
guilty of this). There&amp;#8217;s the sectarianism which means that, in many countries,
you have nearly as many socialist parties as there are socialists. And finally
there is the bohemian weirdness and alternative lifestyle &lt;span class="caps"&gt;BS&lt;/span&gt; that seems so
pervasive. You know what? I don&amp;#8217;t particularly want to live in a commune! I
admit that I&amp;#8217;m sexually repressed and I don&amp;#8217;t have a problem with that!
I&amp;#8217;m happy being constrained to a monogamistic paradigm within relationships!
I don&amp;#8217;t think that marriage is inherently patriarchal and, yes, I would even
like to get married myself some day!
I don&amp;#8217;t feel the need to take mind-altering drugs, smoke pot, dye my hair a
funny colour, grow a beard, eschew going to the barber&amp;#8217;s shop, get piercings,
or have sex with anyone I find remotely attractive! I know that not all
socialists correspond to the straw-man that I&amp;#8217;ve constructed, but enough of
them do for me to find it&amp;nbsp;off-putting.&lt;/p&gt;
&lt;p&gt;I guess my feelings can be summed up quite well by something that
Orwell&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; wrote in &lt;em&gt;The Road to Wigan Pier&lt;/em&gt;: &amp;#8220;As with the
Christian religion, the worst advertisement for Socialism is its&amp;nbsp;adherents.&amp;#8221;&lt;/p&gt;
&lt;h3&gt;8. Feeling faintly embarrassed of my&amp;nbsp;beliefs.&lt;/h3&gt;
&lt;p&gt;Because there are so many socialists that display the (in my mind)
disreputable qualities listed above, I find myself feeling embarrassed to be
associated with them. How can socialism ever be taken seriously if these are
the sorts of people representing it? Once again, I think Orwell says it best
when he wrote&amp;nbsp;that&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In addition to this there is the horrible&amp;#8212;the really
disquieting&amp;#8212;prevalence of cranks wherever Socialists are gathered together.
One sometimes gets the impression that the mere words &amp;#8220;Socialism&amp;#8221; and
&amp;#8220;Communism&amp;#8221; draw towards them with magnetic force every fruit-juice drinker,
nudist, sandal-wearer, sex-maniac, Quaker, &amp;#8220;Nature Cure&amp;#8221; quack, pacifist,
and feminist in&amp;nbsp;England.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Although I want to make it absolutely clear that I think it is totally unfair
to lump feminists, pacifists, and even Quakers into the same group as the&amp;nbsp;rest.&lt;/p&gt;
&lt;h3&gt;9. Not being politically &amp;#8220;out&amp;#8221; to my&amp;nbsp;family.&lt;/h3&gt;
&lt;p&gt;Nowhere is this embarrassment more apparent than when it comes to my family.
I&amp;#8217;d never feel comfortable showing them the sort of people and writings
produced by many in the socialist movement. And this certainly isn&amp;#8217;t helped
by the fact that my family is a good deal more conservative than me.&lt;sup id="fnref:4"&gt;&lt;a class="footnote-ref" href="#fn:4" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;
My parents are essentially small-l liberals. On the one hand they support
regulation and things like universal health care, but on the other they
certainly wouldn&amp;#8217;t be in favour of the sorts of nationalizations that I call
for and they are vehemently anti-union. What&amp;#8217;s more, my dad is a business
owner. These are hardly people that I can talk to about the ills of capitalism.
So I&amp;#8217;m never entirely honest with them when it comes to politics and I end
up hiding this part of myself from&amp;nbsp;them.&lt;/p&gt;
&lt;h3&gt;10. Always being on the losing&amp;nbsp;side.&lt;/h3&gt;
&lt;p&gt;As I&amp;#8217;ve stated above, the last thirty years have seen little but defeat for
socialist ideas. One only needs to look at the recent Ontario election to see
how far to the right things have shifted: the Conservatives were advocating
massive tax cuts and the laying-off of 100 thousand public-sector workers, 
yet they were taken seriously! Meanwhile, the &lt;span class="caps"&gt;NDP&lt;/span&gt; was essentially campaigning on
anti-tax policies! How does the Left even begin to fight when even our more
moderate ideas, like tax-and-spend policies, seem so alien to the electorate?
How do we keep going when
we are shunned by the &lt;span class="caps"&gt;NDP&lt;/span&gt;, ignored by the Liberals, and taunted by the
Conservatives? How do you keep fighting when every left-wing government
seems to end up giving in, at least partially, to capitalism? How do you
retain hope as things seem to get inexorably worse?&lt;sup id="fnref:5"&gt;&lt;a class="footnote-ref" href="#fn:5" rel="footnote"&gt;5&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;I don&amp;#8217;t have the answers to all of that. But I still feel that humanity &lt;em&gt;must&lt;/em&gt;
be capable of something better than what we have right now. If no one fights
for that then it definitely won&amp;#8217;t happen. If we do fight, then at least we
stand a&amp;nbsp;chance.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;For my rebuttal to this, see my earlier post, &lt;a href="https://politicalphysicist.github.io/on-socialists-and-scotsmen.html"&gt;On Socialists and Scotsmen&lt;/a&gt;. &amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Not to say it&amp;#8217;s impossible. I can think of one socialist with whom I get along well. It&amp;#8217;s a pity that she&amp;#8217;s female.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;Who was a socialist, just one firmly opposed to Stalinism.&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:4"&gt;
&lt;p&gt;Not that that&amp;#8217;s hard.&amp;#160;&lt;a class="footnote-backref" href="#fnref:4" rev="footnote" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:5"&gt;
&lt;p&gt;I realize that this is quite a different tone than I ended on a few weeks back in &lt;a href="https://politicalphysicist.github.io/on-europe-the-left-and-the-future.html"&gt;On Europe, the Left, and the Future&lt;/a&gt;. Basically, I was just in a better mood that day.&amp;#160;&lt;a class="footnote-backref" href="#fnref:5" rev="footnote" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Personal"></category><category term="Politics"></category><category term="Socialism"></category></entry><entry><title>On Europe, the Left, and theÂ Future</title><link href="https://politicalphysicist.github.io/on-europe-the-left-and-the-future.html" rel="alternate"></link><published>2014-05-23T23:00:00+01:00</published><updated>2014-05-23T23:00:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2014-05-23:on-europe-the-left-and-the-future.html</id><summary type="html">&lt;p&gt;For those of you who weren&amp;#8217;t aware (and, frankly, I suspect that will be all of
you), there are currently elections going on for the European Parliament. This
is, in principle, the legislative body of the European Union, although in
practice it is debatable how much power it actually holds. For this reason,
European elections don&amp;#8217;t usually attract too much attention, even in Europe,
and tend to have turnouts similar to those in municipal&amp;nbsp;elections.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Alex Tsipras campaigning for the Party of the European Left." src="https://politicalphysicist.github.io/images/euroLeft.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;However, as an international observer, what &lt;em&gt;is&lt;/em&gt; quite interesting about
the European Parliament (&lt;span class="caps"&gt;EP&lt;/span&gt;) is the shear diversity of parties represented in
it. Compared to the recent Nova Scotian election, where there was so much
homogeneity that you would be
hard-pressed to tell which party anyone belonged to, the &lt;span class="caps"&gt;EP&lt;/span&gt; elections overwhelm
you with choice. But, before I go into what the various choices are, I&amp;#8217;ll just
provide a bit of background on how the &lt;span class="caps"&gt;EP&lt;/span&gt;&amp;nbsp;works.&lt;/p&gt;
&lt;p&gt;Every country is given a certain number of seats in the &lt;span class="caps"&gt;EP&lt;/span&gt;, distributed
according to population.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; Exactly how Members of the European Parliament
(MEPs) are elected is left up to the individual countries, the only
requirement being that some form of
&lt;a href="http://en.wikipedia.org/wiki/Proportional_representation"&gt;proportional representation&lt;/a&gt;
is used. In each country, the various national parties will put forward
candidates, some of whom will be elected. Most of the national parties will
also hold an affiliation to a European party. Elected MEPs sit in groups with
their national party, which in turn sits in a group with similar parties from
other countries, roughly along the lines of the various European parties.
Because these groups consist of a collection of national parties, they won&amp;#8217;t
necessarily have a single, coherent position&amp;#8212;a national party will often vote
differently from its group. Additionally, the Europarties play little roll
outside of the &lt;span class="caps"&gt;EP&lt;/span&gt;; national parties campaign individually on their own set
of policies. Of
course, this all seems unnecessarily complicated and confusing, but there you
are. As best as I can tell, the reason for this complexity is that the &lt;span class="caps"&gt;EU&lt;/span&gt;
never really arose out of a plan but was more stitched together bit by&amp;nbsp;bit.&lt;/p&gt;
&lt;p&gt;The groups within the &lt;span class="caps"&gt;EP&lt;/span&gt; are (with the main Europarty composing them given
in parentheses, if more than&amp;nbsp;one):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;European People&amp;#8217;s Party&lt;/strong&gt;: Pro-&lt;span class="caps"&gt;EU&lt;/span&gt; (support tighter integration),
conservative. Angela Merkel&amp;#8217;s Christian Democrats are notable&amp;nbsp;members.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Progressive Alliance of Socialists and Democrats&lt;/strong&gt;: Pro-Europe, social
democracy (centre-left). While consisting of the Party of European Socialists,
in reality
they are not that different from the European People&amp;#8217;s Party when it comes to&amp;nbsp;economics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Alliance of Liberals and Democrats for Europe Group&lt;/strong&gt;: Pro-&lt;span class="caps"&gt;EU&lt;/span&gt;, centrist,
socially liberal, free-market&amp;nbsp;economics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Greens&amp;#8212;European Free Alliance&lt;/strong&gt; (European Green Party): Green politics,
and representatives of nations without states (ex: Scotland, Wales, Catalonia).
Economically progressive in principle, but been known to give in to&amp;nbsp;conservatism.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;European Conservatives and Reformists&lt;/strong&gt; (Movement for European Reform):
Conservative, anti-&lt;span class="caps"&gt;EU&lt;/span&gt;. The British Conservatives are part of this party, but not
many other&amp;nbsp;members.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;European United Left&amp;#8212;Nordic Green Left&lt;/strong&gt; (Party of the European Left):
Socialists and communists. Supportive of European integration but don&amp;#8217;t like
the current setup of the &lt;span class="caps"&gt;EU&lt;/span&gt;. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Europe of Freedom and Democracy&lt;/strong&gt; (Movement for a Europe of Liberties and
Democracy): Anti-&lt;span class="caps"&gt;EU&lt;/span&gt;, highly conservative, right-wing populist. Tend to be very
anti-immigrant and, in particular, anti-Muslim. Similarities to the Tea&amp;nbsp;Party.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Independents&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This list is given in descending order of the size of the &lt;span class="caps"&gt;EP&lt;/span&gt; groups. What is
interesting about this election, in particular, is that the more radical parties
are expected to do well; the European Left and Europe of Freedom
and Democracy are both hoping to make gains.
The latter has proven especially good at
tapping into discontent and anti-politics sentiment, often presenting themselves
as a real alternative to the now indistinguishable main-stream parties. I
suppose this is, strictly speaking, true as the main-stream parties tend to be
pro-&lt;span class="caps"&gt;EU&lt;/span&gt; and in agreement over centre-right economics. However, it is disingenuous
in the extreme for them to portray themselves as representing ordinary people;
for example, one of the most notable constituent national parties, the United
Kingdom Independence Party (&lt;span class="caps"&gt;UKIP&lt;/span&gt;), is led by wealthy financier and
arch-&lt;a href="http://en.wikipedia.org/wiki/Nigel_Farage"&gt;Thatcherite&lt;/a&gt;
&lt;a href="http://en.wikipedia.org/wiki/Nigel_Farage"&gt;Nigel Farage&lt;/a&gt;. Yet, since he drinks,
smokes, and is more plain-speaking than leaders of the larger parties, he
somehow comes off as a man of the people. This has, at times, bizarre results.
For example, a
&lt;a href="http://yougov.co.uk/news/2013/11/04/nationalise-energy-and-rail-companies-say-public/"&gt;poll showed&lt;/a&gt;
that an overwhelming majority of &lt;span class="caps"&gt;UKIP&lt;/span&gt; voters support
renationalization of rail and energy companies. The only party whose voters
supported these policies in higher numbers was Labour (unsurprising, given its
socialist origins). Yet &lt;span class="caps"&gt;UKIP&lt;/span&gt; has a radical &amp;#8220;small government&amp;#8221; policy, more
extreme even than the Conservatives&amp;#8217;.&lt;sup id="fnref:1.5"&gt;&lt;a class="footnote-ref" href="#fn:1.5" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; All in all, it seems
that it is social policy that &lt;span class="caps"&gt;UKIP&lt;/span&gt; and  Europe of Freedom and Democracy attract
people with. Sad to say, many working class people with progressive economics
are distinctly&amp;nbsp;xenophobic.&lt;/p&gt;
&lt;p&gt;Far more encouraging is the growth of the European United Left&amp;#8212;Nordic Green
Left (&lt;span class="caps"&gt;EUL&lt;/span&gt;/&lt;span class="caps"&gt;NGL&lt;/span&gt;). The national parties in this group are, to a greater or lesser
degree,
socialists. They are all vehemently opposed to &lt;a href="http://en.wikipedia.org/wiki/Neoliberalism"&gt;neoliberalism&lt;/a&gt;,&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; and most are (at least officially) opposed to
capitalism itself. Policies vary from stronger regulation and increased public
spending, to (re)nationalisation of banks and energy companies
(which seems to be
the standard position of group members), to outright revolutionary (although not
necessarily insurrectionary&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;) socialism. Additionally, they call for making
the structures of the &lt;span class="caps"&gt;EU&lt;/span&gt; much more democratic. As you might have gathered, the
&lt;span class="caps"&gt;EU&lt;/span&gt; is a rather ungainly institution. There are three governing bodies, only one
of which (the &lt;span class="caps"&gt;EP&lt;/span&gt;) is directly elected. &lt;span class="caps"&gt;EUL&lt;/span&gt;/&lt;span class="caps"&gt;NGL&lt;/span&gt; supports giving more power to the
&lt;span class="caps"&gt;EP&lt;/span&gt; in order to help remedy this. In addition, the European Central Bank (&lt;span class="caps"&gt;ECB&lt;/span&gt;, in
charge of the Euro&amp;#8217;s monetary policy) is not under any sort of democratic
control. This, in particular, is something that &lt;span class="caps"&gt;EUL&lt;/span&gt;/&lt;span class="caps"&gt;NGL&lt;/span&gt; wishes to change, with
the &lt;span class="caps"&gt;EP&lt;/span&gt; appointing the Banks governors and setting its mandate (as is done with
most central banks, including the Bank of Canada). They have good reason for
this, as the &lt;span class="caps"&gt;ECB&lt;/span&gt;&amp;#8217;s current policies have exacerbated the crises in Italy,
Greece, &lt;em&gt;et al.&lt;/em&gt; (&amp;#8220;the periphery&amp;#8221;). It is resolving these crises that
makes up the centrepiece of
&lt;span class="caps"&gt;EUL&lt;/span&gt;/&lt;span class="caps"&gt;NGL&lt;/span&gt; policies. The intention is to implement an industrial and redistributive
policy which will eliminate the imbalances between &amp;#8220;the centre&amp;#8221; (Germany,
France, etc.) and the periphery. While these proposals are really social
democratic, rather than anti-capitalist, they would nonetheless be of great
help and would likely make it easier for national governments to implement more radical&amp;nbsp;policy.&lt;/p&gt;
&lt;p&gt;However, there is some debate over how committed to European integration the
Left should be. Some feel that, because neoliberalism has more or less been
written into the very structure of the &lt;span class="caps"&gt;EU&lt;/span&gt;, the Left should be Eurosceptical.
However, as described above, the general position is that the Left should
reform the &lt;span class="caps"&gt;EU&lt;/span&gt;. There appear to be two main reasons to pursue this policy. One
is an objection to nationalism, which caused so much carnage in the first half
of the 20&lt;sup&gt;th&lt;/sup&gt; century. It was to prevent something like this from ever
happening again that European integration was originally begun. The second
reason is that it is felt you would need to be coming to power on a continental
scale if you seriously want to confront, let alone do away with, capitalism.
Otherwise any country attempting the transition to socialism would end up
isolated as capitalist nations began committing economic warfare (as happened
to Chile in the late&amp;nbsp;&amp;#8216;60s).&lt;/p&gt;
&lt;p&gt;Both of the above arguments are strong. However, the issues arises of what will
happen if a Left government comes to power in one country much sooner than the
others. This is not just idle speculation, as there is a very good chance that
&lt;span class="caps"&gt;EUL&lt;/span&gt;/&lt;span class="caps"&gt;NGL&lt;/span&gt; member &lt;a href="http://en.wikipedia.org/wiki/Syriza"&gt;&lt;span class="caps"&gt;SYRIZA&lt;/span&gt;&lt;/a&gt; will come to
power in Greece in their next election.&lt;sup id="fnref:4"&gt;&lt;a class="footnote-ref" href="#fn:4" rel="footnote"&gt;5&lt;/a&gt;&lt;/sup&gt; &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; has campaigned around ending
the austerity in Greece, which is causing massive damage to their economy and
creating a humanitarian crisis. However, doing so would involve renegotiating
bailout terms with the &lt;span class="caps"&gt;EU&lt;/span&gt;. But, &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; is also determined to stay in the &lt;span class="caps"&gt;EU&lt;/span&gt;
and to keep Greece on the Euro. It is unclear that the &lt;span class="caps"&gt;EU&lt;/span&gt; would allow them to
do both of these things. Undoubtedly, it would be difficult for Greece to leave
the Euro and it would also be extremely unpopular for them to pull out of the
&lt;span class="caps"&gt;EU&lt;/span&gt;. From my knowledge, it appears that &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; will only go as far as the &lt;span class="caps"&gt;EU&lt;/span&gt;
lets them. Hopefully, this will be far enough to resolve the Greek crisis
(kicking out Greece would likely be damaging to Europe as well), but that might
not be the case. For what it&amp;#8217;s worth, my personal view is that Greece
shouldn&amp;#8217;t pull out on its own but if, in the course of implementing &lt;span class="caps"&gt;SYRIZA&lt;/span&gt;&amp;#8217;s
policies, they get kicked out then so be&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Another interesting case study (if only because all of the debates here are in
English) is the formation of the new &lt;a href="http://leftunity.org/"&gt;Left Unity&lt;/a&gt; party
in the &lt;span class="caps"&gt;UK&lt;/span&gt;. This party is actually fairly radical compared to some of its
Continental counterparts, calling for a much greater degree of nationalization
(although I suppose that Britain has a history of more extensive public
ownership than most countries, so perhaps that isn&amp;#8217;t surprising). The issue here
is that &lt;span class="caps"&gt;EU&lt;/span&gt; regulations would make it vary difficult for Left Unity to implement
many of its policies if elected. However, the reasons for staying in the &lt;span class="caps"&gt;EU&lt;/span&gt;
that I mentioned above are just as true for Britain as anywhere else and, as
a result, Left Unity has much the same set of policies regarding the &lt;span class="caps"&gt;EU&lt;/span&gt;. In this
case, I think the answer is much more clean-cut. The radical left in
Britain is lagging far behind the rest of Europe,&lt;sup id="fnref:5"&gt;&lt;a class="footnote-ref" href="#fn:5" rel="footnote"&gt;6&lt;/a&gt;&lt;/sup&gt; so it is unlikely that
the &lt;span class="caps"&gt;UK&lt;/span&gt; would have a Left government before the &lt;span class="caps"&gt;EU&lt;/span&gt; as a whole. Therefore, they
might as well advocate staying in the &lt;span class="caps"&gt;EU&lt;/span&gt; and take the same position as the rest of the
European&amp;nbsp;Left.&lt;/p&gt;
&lt;p&gt;Yes, I think that, with the possible exception of countries like Greece, the
Left should be trying the achieve socialism at the European level. Various
think-tanks, such the &lt;a href="http://www.rosalux.de/english/foundation.html"&gt;Rosa-Luxemburg Siftung&lt;/a&gt; (associated with the German party &lt;a href="http://en.die-linke.de/die-linke/welcome/"&gt;Die Linke&lt;/a&gt;) and &lt;a href="http://transform-network.net/home.html"&gt;transform!&lt;/a&gt;
(loosely associated with the &lt;a href="http://www.european-left.org/"&gt;Party of the European Left&lt;/a&gt;) have called for the ultimate establishment of the United Socialist
States of Europe. This, I think, is an admirable goal. However, I am not
convinced that this goal can be achieved with the current European leftist
institutions. &lt;span class="caps"&gt;UEL&lt;/span&gt;/&lt;span class="caps"&gt;NGL&lt;/span&gt; and the Party of the European Left are both much too
loose as associations. To the extent that they coordinate trans-European
campaigns
at all, they tend to be centred around policies making up the least radical
common denominator of their members. For the most part, as with all of the
Europarties, active campaigning is left to the individual national members.
However, as is generally acknowledged, building socialism requires a Europe-wide
movement. That means a truly Europe-wide&amp;nbsp;party.&lt;/p&gt;
&lt;p&gt;Ultimately, I feel, to be successful, the members of the Party of the European
Left will have to give up their individual identities. They&amp;#8217;ll have to become
national chapters of a continent-wide party. And, do you know what? I&amp;#8217;m actually
somewhat hopeful. For all the mess that the world is in and all the ways that
mess is likely to get worse, I can&amp;#8217;t help but feel that we&amp;#8217;ll pull through it.
It won&amp;#8217;t be easy, but the worthwhile things seldom are. To the extent that I
have faith in anything, I have faith that humanity is capable of being better
than it is today. I think Europe can do it&amp;#8212;it can overcome the more
unpleasant parts of human nature and build a society based on cooperation and
solidarity. And if Europe can do it, then so can others. Maybe one day, before
I die, I&amp;#8217;ll wake up in a socialist &lt;a href="http://www.socialisthistory.ca/Docs/CCF/ReginaManifesto.htm"&gt;Cooperative Commonwealth of Canada&lt;/a&gt;.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;However, much like the distribution of MPs between provinces in Canada, smaller countries are favoured, possessing more seats per capita than larger countries.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:1.5"&gt;
&lt;p&gt;For example, &lt;span class="caps"&gt;UKIP&lt;/span&gt; wants to replace the public health-care system with vouchers for private hospitals.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1.5" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Policies of privatization, deregulation, budget cuts, decreased taxes (especially in the upper tax brackets), free trade, etc.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;Many left-wing thinkers nowadays argue that revolution doesn&amp;#8217;t necessarily mean insurrection&amp;#8212;it might simply refer to a period of rapid, fundamental change in society.&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" rev="footnote" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:4"&gt;
&lt;p&gt;While the Right tends to become hysterical at this prospect, on the Left it is currently very fashionable to criticize &lt;span class="caps"&gt;SYRIZA&lt;/span&gt; for moving to the right. Personally, I&amp;#8217;m not convinced that they&amp;#8217;ve actually moved anywhere and think that any perception that they have is simply revealing what was always present in their ideology. For a good discussion of these issues, I recommend this lecture: &lt;a href="http://socialistproject.ca/leftstreamed/ls215.php"&gt;Syriza and the European Elections&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:4" rev="footnote" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:5"&gt;
&lt;p&gt;The reasons for this are complicated, but they seem to include the fact that Britain lacks proportional representation and that the British Left is so notoriously fractious. It&amp;#8217;s pretty bad when the Wikipedia&amp;#8217;s &lt;a href="http://en.wikipedia.org/wiki/List_of_British_political_parties#Minor_far-left_parties"&gt;list of British political parties&lt;/a&gt; needs a whole section just for the Far-Left. &amp;#160;&lt;a class="footnote-backref" href="#fnref:5" rev="footnote" title="Jump back to footnote 6 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="Europe"></category><category term="Socialism"></category><category term="Party of the European Left"></category><category term="Elections"></category><category term="SYRIZA"></category><category term="Left Unity"></category></entry><entry><title>Gnuplotting, LaTeXing, and Other Made UpÂ Verbs</title><link href="https://politicalphysicist.github.io/gnuplotting-latexing-and-other-made-up-verbs.html" rel="alternate"></link><published>2014-04-15T11:30:00+01:00</published><updated>2014-04-15T11:30:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2014-04-15:gnuplotting-latexing-and-other-made-up-verbs.html</id><summary type="html">&lt;p&gt;Anyone who knows me in person and has seen me do any amount of work in
physics knows that my preferred graphing software is Gnuplot.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; 
This is a piece
of command-line plotting software capable of producing nearly every sort of graph
imaginable. In fact, it&amp;#8217;s results have appeared on this blog before, and can 
be found in my &lt;a href="https://politicalphysicist.github.io/on-the-abuse-of-exponentiation-in-colloquial-communication.html"&gt;perfectly reasonable and not at all neurotic rant about exponential growth.&lt;/a&gt; 
It is capable of plotting data and
functions in any number of ways. Most importantly, in my mind, Gnuplot scripts can
be written which make it easy to produce many similar plots (batch&amp;nbsp;processing).&lt;/p&gt;
&lt;p&gt;The only place where I&amp;#8217;ve every really had a problem with Gnuplot is when it 
comes to including special characters and math in axis labels. Most frustrating of
all, if you are an astronomer, is the near impossibility of getting Gnuplot to 
produce the little symbol used for the sun (&lt;span class="math"&gt;\(\odot\)&lt;/span&gt;). All of this forces 
scientists to go to great length in order to make the labels on their plots look
vaguely decent. This is opposed to some other graphing programs, such as 
&lt;a href="http://home.gna.org/veusz/"&gt;Veusz&lt;/a&gt;, which are capable of using parts of the 
well-known &lt;span class="math"&gt;\(\LaTeX\)&lt;/span&gt; markup language to produce this sort of output. Thus,
a label such as &lt;span class="math"&gt;\(4\pi r^{2}~\[R_{\odot}\]\)&lt;/span&gt; can be produced with syntax as simple
as &lt;code&gt;4\pi r^{2}~[M_{\odot}]&lt;/code&gt;. While one of the formats that Gnuplot can output
is LaTeX, the quality of the resulting plot is terrible. Just look at the
figure below (a plot of some data and curves fit to that data from a recent
lab&amp;nbsp;report).&lt;/p&gt;
&lt;p&gt;&lt;img alt="LaTeX Gnuplot terminal in all of its ugly glory." src="https://politicalphysicist.github.io/images/gnuplotLatexBad.png" /&gt;&lt;/p&gt;
&lt;p&gt;However, there is another choice of output: the cairolatex terminal. This 
terminal, which is related to the pdfcairo terminal, actually produces two files.
One of these is a &lt;span class="caps"&gt;PDF&lt;/span&gt; or &lt;span class="caps"&gt;EPS&lt;/span&gt; file with the axes, data, and functions of the plot.
The other is a LaTeX
file which contains the information necessary to place labels on said plot.
The actual plot in this case is of far better quality, while labels are still
in LaTeX and can thus contain math, special characters, etc. Producing the
same plot as above using this terminal, we get a much better&amp;nbsp;result.&lt;/p&gt;
&lt;p&gt;&lt;img alt="cairolatex Gnuplot terminal." src="https://politicalphysicist.github.io/images/gnuplotLatex.png" /&gt;&lt;/p&gt;
&lt;p&gt;The main disadvantage of this approach is that the LaTeX file must be compiled
before you can see the actual result. However, with the right settings and
a call to a LaTeX compiler at the end of your script, this problem is easily
surmountable. In order to make this easy, I&amp;#8217;ve written myself a 
&lt;a href="https://politicalphysicist.github.io/attachments/Plot.gp"&gt;little template&lt;/a&gt;
Gnuplot script, with these features built in. Simply change the name of the output
file (without including any extension) on line nine and add the various setting
and plot commands that you&amp;nbsp;need.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Interestingly (or not), despite it&amp;#8217;s name, Gnuplot has no affiliation with the &lt;a href="http://www.gnu.org/"&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt;&lt;/a&gt; project whatsoever.  It is actually released under a more restrictive license than the &lt;span class="caps"&gt;GNU&lt;/span&gt; &lt;a href="http://www.gnu.org/licenses/gpl.html"&gt;&lt;span class="caps"&gt;GPL&lt;/span&gt;&lt;/a&gt;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="Gnuplot"></category><category term="LaTeX"></category><category term="Templates"></category><category term="Plotting"></category><category term="Software"></category></entry><entry><title>A Bit ofÂ News</title><link href="https://politicalphysicist.github.io/a-bit-of-news.html" rel="alternate"></link><published>2014-01-02T14:30:00+00:00</published><updated>2014-01-02T14:30:00+00:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2014-01-02:a-bit-of-news.html</id><summary type="html">&lt;p&gt;As you may have noticed, there have been several blog articles released at the same time,
today. If you looked carefully, you may have noticed that these have actually been written
an various days over the past couple of weeks, but have only now become available online.
I feel an explaination for this erratic behaviour is&amp;nbsp;needed.&lt;/p&gt;
&lt;p&gt;The day before I went home for Christmas, the &lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt; 
on which I host this blog decided
that it wanted to be difficult. For whatever reason, it refused to start and I couldn&amp;#8217;t figure
out how to fix it before it was time to leave. However, Christmas break also gave me a chance
to actually write some thoughtful blog entries, which I haven&amp;#8217;t had time to do for awhile. So
I wrote away, unable to post them. Upon getting back to Halifax, the Raspberry Pi decided
that it was willing to work again, for some reason known only to itself. And thus I have been
able to post my blog entries. I apologize for the glut of writing after so long without&amp;nbsp;any.&lt;/p&gt;
&lt;p&gt;Also, while I&amp;#8217;m writing this, I might as well draw your attention to a new link at the top
of this page entitled &lt;a href="https://politicalphysicist.github.io/pages/software.html"&gt;Software&lt;/a&gt;. This takes you to a page
containing useful pieces of software which I have modified or built for myself, which you
are welcome to download. Please note, however, that some of these are only set up to work
on&amp;nbsp;Linux.&lt;/p&gt;</summary><category term="Personal"></category><category term="Thoughts"></category><category term="Blogging"></category><category term="Software"></category></entry><entry><title>On Socialists andÂ Scotsmen</title><link href="https://politicalphysicist.github.io/on-socialists-and-scotsmen.html" rel="alternate"></link><published>2013-12-28T01:30:00+00:00</published><updated>2013-12-28T01:30:00+00:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2013-12-28:on-socialists-and-scotsmen.html</id><summary type="html">&lt;p&gt;Us socialists are often accused of preaching a failed ideology; one which has
been shown to inevitably result in totalitarianism and impoverishment. To this
most socialists will respond in one of two ways. Some (mostly those from the 
&lt;a href="http://en.wikipedia.org/wiki/Comintern"&gt;Third International&lt;/a&gt;, 
but also a few  radical elements of the 
&lt;a href="http://en.wikipedia.org/wiki/Socialist_International"&gt;Second International&lt;/a&gt;) 
act as apologists for the old Eastern European regimes (and possibly those in
Asia as well, although the 
&lt;a href="http://en.wikipedia.org/wiki/Sino-Soviet_split"&gt;Sino-Soviet&lt;/a&gt; split complicates
matters there). Others, such as myself, respond by saying that we don&amp;#8217;t see how
socialism can have failed when the world has yet to see a socialist society. This
tends to be the view of Trotskyist (such as those in one the various iterations
of the 
&lt;a href="http://en.wikipedia.org/wiki/Fourth_International_(disambiguation)"&gt;Fourth International&lt;/a&gt;), 
libertarian socialists, and the more ideologically self-consistent democratic 
socialists. An example of such an argument is provided in the video&amp;nbsp;below:&lt;/p&gt;
&lt;iframe width="420" height="315"  style="margin-left: auto; margin-right: auto" src="//www.youtube.com/embed/K4Tq4VE8eHQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;The inevitable objection that is given, not only by the right but also by the
centre-left, is that this is an example of the &amp;#8220;No True Scotsman Fallacy.&amp;#8221;
&lt;a href="http://en.wikipedia.org/wiki/No_true_Scotsman"&gt;Wikipedia describes this&lt;/a&gt; like&amp;nbsp;so:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;No true Scotsman is an informal fallacy, an ad hoc attempt to retain an 
unreasoned assertion. When faced with a counterexample to a universal claim 
(&amp;#8220;no Scotsman would do such a thing&amp;#8221;), rather than denying the counterexample 
or rejecting the original universal claim, this fallacy modifies the subject of 
the assertion to exclude the specific case or others like it by rhetoric, 
without reference to any specific objective rule (&amp;#8220;no true Scotsman would do 
such a&amp;nbsp;thing&amp;#8221;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Thus, supposedly, it is logically invalid to explain away any unpleasantness
by dismissing the regime responsible as not really socialist. Doing so is to
dismiss counterarguments without actually addressing it. However, here I feel
that there is a misunderstanding of my point. These people misunderstand my 
argument to be &amp;#8220;socialist societies will
inevitably be democratic ones.&amp;#8221; However, for me, such a statement would be a
tautology: what I mean when I speak of socialism is &amp;#8220;collective ownership of and
&lt;em&gt;democratic control&lt;/em&gt; over the economy.&amp;#8221; For me 
(&lt;a href="http://socialistparty-usa.net/principles.html"&gt;and others&lt;/a&gt;), democracy is part 
of the definition of socialism. Any regime that claims to be socialistic but is a 
dictatorship (I&amp;#8217;m looking at you, Cuba) is lying, at least by my definition
of socialism. True, such a regime might claim to be socialism, but that doesn&amp;#8217;t
make it so; just because East Germany was called the German Democratic Republic
didn&amp;#8217;t make it a democracy, after&amp;nbsp;all. &lt;/p&gt;
&lt;p&gt;Now, some will claim that socialism will never be implemented democratically
because people won&amp;#8217;t want it. Thus, socialism will inevitably have to be
imposed using violence and oppression. The first part of this argument is a
perfectly valid position to take, although not one that I think is true 
(actually, there is some historical evidence to the contrary, so anyone making
this argument will have to be very careful not to end up using  the &amp;#8220;No True 
Scotsman Fallacy&amp;#8221; themselves). However, in my view, the second part of this
argument is meaninglessness. If it is being imposed by a dictatorship then
it can not be socialism. Effectively what is being said, then, is that 
socialism is impossible. This is also a perfectly valid position, but I
don&amp;#8217;t think that there is clear evidence one way or the other with regards
to this&amp;nbsp;question.&lt;/p&gt;
&lt;p&gt;To be sure, horrible things have been done &lt;em&gt;in the name of&lt;/em&gt;
socialism, and even quite recently the likes of Hugo Chavez have done some rather
slimy things in the name of socialism. This potential is something which socialists
must constantly be vigilant of. We must accept the ugly parts of our movement&amp;#8217;s
history (and, for that matter, its present). Failure to do so is not only
dishonest, but dangerous. However, these dangers do not discredit socialism 
itself, but rather some (and, thankfully, an ever decreasing number) of the
social&lt;em&gt;ists&lt;/em&gt;. What&amp;#8217;s more, I honestly believe that any risk of totalitarianism
posed by campaigning for democratic socialism is far smaller than the risks
that humanity face under&amp;nbsp;capitalism.&lt;/p&gt;
&lt;p&gt;As for claims that socialism results in poverty: we have no data, seeing
as there have been no socialist economies (at least, not that have lasted 
for any significant amount of time before being crushed by external forces).
I don&amp;#8217;t think that this will necessarily be the case, but that&amp;#8217;s only a guess.
There&amp;#8217;s no doubt that there were serious problems with the Warsaw Pact
economies. We have to seriously consider whether centralized planning can
ever be made to work (personally, I think that it would be undesirable even
if it could be done). Certainly, the planning techniques used by the Soviet Union
have been discredited. But I hope, and honestly believe, that in a technological, 
democratic society some form of 
&lt;a href="http://en.wikipedia.org/wiki/Decentralized_planning_(economics)"&gt;decentralized economic planning&lt;/a&gt; 
will be possible. Even if not, there are ideas such as cooperative ownership
in a &lt;a href="http://en.wikipedia.org/wiki/Market_socialism"&gt;market socialist&lt;/a&gt; economy,
which seem to me to be eminently feasible, if&amp;nbsp;unambitious.&lt;/p&gt;
&lt;p&gt;So, no, I am not committing the &amp;#8220;No True Scotsman Fallacy&amp;#8221; when I say that the
so-called communist countries were not, in fact, socialist. It is not a 
contradiction for me to
be a socialist and yet to oppose Soviet-style communism. It just so happens that
there are multiple definitions of socialism and the definition which applies to
me (and many others) is directly opposed to that used by the Soviet Union and
its&amp;nbsp;supporters.&lt;/p&gt;</summary><category term="Socialism"></category><category term="No True Scotsmen Fallacy"></category><category term="Noam Chomsky"></category><category term="Democracy"></category></entry><entry><title>Denouncing the Dumb Diatribe on the Discontinuation of Door-to-DoorÂ Delivery</title><link href="https://politicalphysicist.github.io/denouncing-the-dumb-diatribe-on-the-discontinuation-of-door-to-door-delivery.html" rel="alternate"></link><published>2013-12-23T12:00:00+00:00</published><updated>2013-12-23T12:00:00+00:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2013-12-23:denouncing-the-dumb-diatribe-on-the-discontinuation-of-door-to-door-delivery.html</id><summary type="html">&lt;p&gt;As you may know, Canada Post &lt;a href="http://www.cbc.ca/news/canada/ottawa/canada-post-to-phase-out-urban-home-mail-delivery-1.2459618"&gt;recently announced&lt;/a&gt;
that they will be making some changes. Two in particular are of note: a price 
increase on stamps and the phasing out of door-to-door delivery in urban 
areas. The latter measure will allow the elimination of about 8000 jobs. 
However, thanks to the strength of the postal workers&amp;#8217; union, no one will 
actually be fired; rather, the workforce reductions will be achieved by&amp;nbsp;attrition.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Community mailboxes, of the sort I've grown up with." src="https://politicalphysicist.github.io/images/mailboxes.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Predictably, the left has had a conniption over all of this. A typical example
can be &lt;a href="http://rabble.ca/blogs/bloggers/views-expressed/2013/12/canada-post-not-on-life-support-it-being-murdered"&gt;found here&lt;/a&gt;. 
In particular, they have denounced the elimination of door-to-door delivery. 
Given my politics, you may be expecting a similar reaction here. But there 
you would be 
wrong. Many parts of Canada already use the community mailboxes which will 
become the norm over the next few years. It so happens that I grew up in one 
such area. It was a daily routine to either walk and get the mail or to swing 
by the mailbox when we were driving somewhere. In the case of the latter, the 
community mailbox arrangement took at most an extra two minutes out of our 
day. In the case of the former, it forced us to get a bit of fresh air and 
exercise. Contrary to what many claim, the scheme is not particularly 
inconvenient* and certainly is not going to cause the destruction of Canada&amp;nbsp;Post.&lt;/p&gt;
&lt;p&gt;Actually, if anything the opposite is true. Sometimes people will talk about 
ending Canada Post&amp;#8217;s monopoly and introducing competition into mail 
delivery. I
tend to be suspicious of such proposals, but if the proper regulations
were in place then I find it hard to actually justify the government monopoly 
on door-to-door daily mail delivery. Community mail boxes, however, make this
much more difficult in my opinion. Do we really want to allow every upstart
mail-delivery company to have the keys to everyone&amp;#8217;s mailboxes? I think that
would be rather hard to justify (especially given that the mailboxes are
government property) and could thus potentially reinforce Canada
Post&amp;#8217;s monopoly status. It obviously would be no protection against 
privatization, but in the current political climate I don&amp;#8217;t know what can&amp;nbsp;be.&lt;/p&gt;
&lt;p&gt;To me, the far more concerning element of the reforms is the increase in the
price of postage. Again, I doubt that this will spell the end of a public post
office, but it is nonetheless a significant increase. Prices will be going up
by 22 cents when buying stamps in packs and by 37 cents when buying
individually (although most people protesting the changes are only 
bothering to
mention the higher of these two figures). Given that Canada Post&amp;#8217;s delivery
times are, let&amp;#8217;s face it, less than impressive, cheapness is one of the few 
things it has going for it. It perplexes me that the prices increases seem to
be of secondary concern to those on the&amp;nbsp;left.&lt;/p&gt;
&lt;p&gt;Mind you, this whole thing perplexes me to some extent. As I mentioned 
earlier, community mailboxes are not exactly new; large parts of Canada have
been using them for years. If they are such a terrible idea, why the hell are
we only hearing it now? Are the people who intend to protest the post office
changes going to push for the elimination of &lt;em&gt;all&lt;/em&gt; community mailboxes and the
restoration of universal door-to-door delivery? Somehow I doubt it. And which
of the other cost-saving proposals would they endorse? Reducing delivery to
three days a week seems like a much worse option to me. As does closing post
offices, which are a fantastically valuable piece of 
infrastructure which have 
the potential to perform many useful functions. I don&amp;#8217;t much like the idea
of wage reductions or restraint and, in any case, that would be difficult
given the strength of the postal union (although knowing Harper he might just
legislate it through). Prices increases certainly aren&amp;#8217;t ideal, 
as I&amp;#8217;ve already
said. Community mailboxes seem like a pretty reasonable solution, given&amp;nbsp;that.&lt;/p&gt;
&lt;p&gt;Is it ideal? Not really. There&amp;#8217;s no denying that door-to-door delivery 
is more 
convenient. And, even if the job reductions are done by attrition, I&amp;#8217;m not 
thrilled with a reduction in the size of the public sector. It&amp;#8217;s yet another
reduction in the role played in the economy by Crown corporations, further
removing from people&amp;#8217;s consciousness the idea of public enterprise performing
a useful function. (Particularly disturbing is that the government has
appointed a &lt;span class="caps"&gt;CEO&lt;/span&gt; of Canada Post who came from a company that operates
privatized post offices.) What&amp;#8217;s more, 
there are alternatives to the reduction in
service, other sources of revenue which Canada Post could pursue. Post offices
could take over some of the functions of Service Canada, for example. It would
be far more convenient for people, considering there are many more 
post offices than Service Canada&amp;nbsp;bureaus.&lt;/p&gt;
&lt;p&gt;But far more interesting is the potential for
Canada Post to offer banking services, as described in 
&lt;a href="http://www.thestar.com/news/canada/2013/12/20/postal_savings_bank_could_save_mail_delivery_walkom.html"&gt;this Toronto Star article&lt;/a&gt;. 
This isn&amp;#8217;t nearly as strange an idea as it seems, as postal banks are
common in Europe and other parts of the world. 
In fact, Britain&amp;#8217;s old Gyro Bank&amp;#8212;the name of their postal bank&amp;#8212;
was (prior to its privatization in the &amp;#8216;80s) possibly the single most 
successful example of public enterprise, introducing many innovations and 
scaring the private banking sector into shaping up its act.
A similar scheme in
Canada would be an excellent idea even on its own merit. It could likely
offer Canadians superior levels of service (certainly many more branches) than
existing banks currently provide and could be used to invest in 
socially useful projects.
What&amp;#8217;s more, it would almost certainly provide Canada Post with 
enough revenue 
to make the current service reductions unnecessary. Perhaps it would be enough
to pay for universal door-to-door delivery (although I honestly have no idea 
about&amp;nbsp;that).&lt;/p&gt;
&lt;p&gt;So there&amp;#8217;s no doubt that there are alternatives to the service reductions at
Canada Post. Ones that would promote socialist ideals such as 
public ownership. But I honestly don&amp;#8217;t see these service reductions as 
leading to the destruction or privatization of Canada Post. They will, at 
worst, be a minor inconvenience for Canadians. Let&amp;#8217;s try to keep things in&amp;nbsp;perspective.&lt;/p&gt;
&lt;p&gt;*I should note here that the changes will more troublesome for seniors. 
Perhaps there could be a compromise made where you get door-to-door delivery
if you are over a certain age? But in any case, most seniors who live in 
their own houses are fairly&amp;nbsp;spry.&lt;/p&gt;</summary><category term="Canada Post"></category><category term="Crown Corporations"></category><category term="Door-to-Door Mail"></category></entry><entry><title>What I Did Over ChristmasÂ Break</title><link href="https://politicalphysicist.github.io/what-i-did-over-christmas-break.html" rel="alternate"></link><published>2013-12-21T02:00:00+00:00</published><updated>2013-12-21T02:00:00+00:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2013-12-21:what-i-did-over-christmas-break.html</id><summary type="html">&lt;p&gt;&lt;em&gt;If you are impatient and don&amp;#8217;t want to read my no doubt fascinating
account of the inspiration for and development process of the 
software I&amp;#8217;ve designed, you can skip down to &lt;a href="#software"&gt;here&lt;/a&gt; to read what
it does and how to install&amp;nbsp;it.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Conetroller icon" src="https://politicalphysicist.github.io/images/conetroller-icon.svg" /&gt;&lt;/p&gt;
&lt;p&gt;One of the many great things about Christmas time is the lack of homework.
It means that I finally have the chance to work on some of the little
personal projects that I&amp;#8217;ve been wanting to do. One such project, of course,
is writing some blog posts. The other major project is the subject of this&amp;nbsp;post.&lt;/p&gt;
&lt;p&gt;Thanks to the wonders of the Internet I now watch almost all movies and &lt;span class="caps"&gt;TV&lt;/span&gt;
shows on my computer. (And no, I am not downloading them illegally.) Well,
I say on my computer: actually &lt;em&gt;via&lt;/em&gt; my computer would be more accurate, as
I use an &lt;span class="caps"&gt;HDMI&lt;/span&gt; cable to play them on my television set. The problem with this arrangement is that it prevents me from using my computer for anything
else while the video is playing&amp;nbsp;because:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The two monitor display features on my computer leave something to be&amp;nbsp;desired.&lt;/li&gt;
&lt;li&gt;My computer has to stay on my desk, connected to the &lt;span class="caps"&gt;HDMI&lt;/span&gt; cable, which
is a terribly angle to actually see the &lt;span class="caps"&gt;TV&lt;/span&gt;&amp;nbsp;from.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However, it so happens that I have a spare &lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt; 
(a cheap mini-computer, one of which hosts this blog) and a spare &lt;span class="caps"&gt;HDMI&lt;/span&gt;
cable. It struck me that surely there was some way I could set up the 
Raspberry Pi to play my videos for me. After some reading I discovered
that the &lt;a href="http://www.videolan.org/vlc/index.html"&gt;&lt;span class="caps"&gt;VLC&lt;/span&gt; Media Player&lt;/a&gt; can
be controlled via a Telnet interface. For those of you who are not as
tech-savvy, Telnet is an old piece of software that can be used to 
remotely log onto computers in the command line. It long ago fell out of
favour due to security issues and has been replaced by software called 
&lt;span class="caps"&gt;SSH&lt;/span&gt;. However, as
I will only be accessing the Pi over my local network, security isn&amp;#8217;t much
of an issue and Telnet will be&amp;nbsp;fine.&lt;/p&gt;
&lt;p&gt;Now, I could simply log into &lt;span class="caps"&gt;VLC&lt;/span&gt; over Telnet and control it via the 
command line. This actually wouldn&amp;#8217;t be so bad, but I felt like there were
nicer, tidier alternatives. So instead I set to work writing a program
in &lt;a href="http://www.python.org/"&gt;Python&lt;/a&gt; which could provide a graphical user
interface (&lt;span class="caps"&gt;GUI&lt;/span&gt;) for the Telnet controls. This was actually quite a new
experience for me, as almost all of my previous programming experience
has been in writing little scripts to process data and which have, at
most, a command line interface (although more often than not I just 
program my specifications directly into the code itself&amp;#8212;so-called 
&amp;#8220;hard-coding&amp;#8221;). What little experience I have with GUIs has all been
for Windows, using a framework not available on Linux. So I had to 
learn how to work with a set of software libraries called &lt;span class="caps"&gt;GTK&lt;/span&gt;+ 3. 
&lt;a href="http://www.gtk.org/"&gt;&lt;span class="caps"&gt;GTK&lt;/span&gt;+&lt;/a&gt; is
one of the two major frameworks used to design GUIs on Linux, the other
being &lt;a href="http://qt-project.org/"&gt;&lt;span class="caps"&gt;QT&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One thing that was nice is that there is a piece of software out there
called &lt;a href="https://glade.gnome.org/"&gt;Glade&lt;/a&gt; which allows you to design &lt;span class="caps"&gt;GTK&lt;/span&gt;
interfaces visually and
then import them into your code (rather than have to create the whole
interface using code only). It&amp;#8217;s a bit rough around the edges, but 
certainly better than having to create the interface&amp;nbsp;manually.&lt;/p&gt;
&lt;p&gt;&lt;a name="software"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Conetroller interface" src="https://politicalphysicist.github.io/images/ConetrollerInterface.png" /&gt;&lt;/p&gt;
&lt;p&gt;And so, I now have a working piece of software that will allow you to
control a remote instance of &lt;span class="caps"&gt;VLC&lt;/span&gt;. So far I have only been able to test
it on an instance running on my own computer, but I see no reason why it
would work any differently if &lt;span class="caps"&gt;VLC&lt;/span&gt; is on a different machine. And thus,
I present to you: Conetroller&amp;nbsp;v0.2.*&lt;/p&gt;
&lt;p&gt;I am posting the code &lt;a href="https://politicalphysicist.github.io/attachments/conetroller-0-2.tar.gz"&gt;for download here&lt;/a&gt;
, if anyone is interested. 
Currently it is only able to run on Linux (there&amp;#8217;s a good chance it
would work on Mac &lt;span class="caps"&gt;OSX&lt;/span&gt; too), although it shouldn&amp;#8217;t be too difficult to 
port it to Windows, if you want to. It can be installed by executing
the following in a&amp;nbsp;terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;wget redshadesofgreen.raspctl.com/attachments/conetroller-0-2.tar.gz&lt;/span&gt;
&lt;span class="go"&gt;tar -zxvf conetroller-0-2.tar.gz&lt;/span&gt;
&lt;span class="go"&gt;cd v0.2/&lt;/span&gt;
&lt;span class="go"&gt;sudo ./install.sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This installation technique is known to work in Linux Mint Debian 
Edition, and has not been tested anywhere else. However, I didn&amp;#8217;t do anything too exotic
in terms of directory layout, so it should work with most Linux distributions,
and certainly most Debian-based distros (eg: Ubuntu). Make sure to take
a look at the &lt;span class="caps"&gt;README&lt;/span&gt; file. No other documentation is
provided, but the interface is pretty simple and you should be able to
figure it out. If you have any question or problems, post them in the 
comments section&amp;nbsp;below.&lt;/p&gt;
&lt;p&gt;Current features&amp;nbsp;include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adding items to the playlist (using a &lt;span class="caps"&gt;URL&lt;/span&gt; or&amp;nbsp;filepath)&lt;/li&gt;
&lt;li&gt;Clearing the playlist of&amp;nbsp;items&lt;/li&gt;
&lt;li&gt;Play, pause, stop, skip forwards, and skip backwards&amp;nbsp;buttons&lt;/li&gt;
&lt;li&gt;Displaying items currently on&amp;nbsp;playlist&lt;/li&gt;
&lt;li&gt;Ability to scroll through&amp;nbsp;video&lt;/li&gt;
&lt;li&gt;Recalling the most recent &lt;span class="caps"&gt;VLC&lt;/span&gt; instance logged into at the beginning of 
each&amp;nbsp;session&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bugs, missing features, and other&amp;nbsp;short-comings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No indication is given as to which playlist item is currently being 
played (it is unclear if this can be added while using the Telnet&amp;nbsp;interface)&lt;/li&gt;
&lt;li&gt;No ability to select an item from the playlist (likely will be added
in future&amp;nbsp;versions)&lt;/li&gt;
&lt;li&gt;No ability to remember passwords (it would be insecure to store these
unencrypted in a plain text file, as was done with other login 
information). Future versions may include integration with Gnome Keyring
to overcome&amp;nbsp;this.&lt;/li&gt;
&lt;li&gt;No comments included in the source code&amp;#8212;I&amp;#8217;ll fix this sooner or later,
although I think it should be fairly easy to follow even without&amp;nbsp;them&lt;/li&gt;
&lt;li&gt;Possible overuse of global variables in the code, rather than passing
them to the relevant functions&amp;#8212;this may be fixed in future, although
I blame some of the peculiarities of Glade for&amp;nbsp;this&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flaws aside, I am confident that Conetroller will prove useful to me,
and hope it can be useful to others as&amp;nbsp;well.&lt;/p&gt;
&lt;p&gt;*For those that are unaware, the logo for &lt;span class="caps"&gt;VLC&lt;/span&gt; is a traffic cone. Since my
program controls &lt;span class="caps"&gt;VLC&lt;/span&gt;, Conetroller seemed like the only reasonable name for&amp;nbsp;it.&lt;/p&gt;</summary><category term="Programming"></category><category term="VLC"></category><category term="Python"></category><category term="GTK+"></category><category term="Conetroller"></category></entry><entry><title>InsomniaÂ Sucks</title><link href="https://politicalphysicist.github.io/insomnia-sucks.html" rel="alternate"></link><published>2013-11-14T02:00:00+00:00</published><updated>2013-11-14T02:00:00+00:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2013-11-14:insomnia-sucks.html</id><summary type="html">&lt;p&gt;Well, it&amp;#8217;s been awhile since I&amp;#8217;ve written one of these. It&amp;#8217;s not that I haven&amp;#8217;t had
things to write about: the stress of school, post office privatization, derailments 
and scandal at &lt;span class="caps"&gt;CN&lt;/span&gt;, my ambivalence towards Remembrance Day,
my dismay at discovering that some of the political figures I liked (emphasis on the
past tense) were rather
chummy with certain dictators, an exposition on why I hold the political views I do
when it seems more and more as though I don&amp;#8217;t actually like anyone else who shares 
them&amp;#8230; But, alas, I&amp;#8217;ve been busy with assignments, classes, labs, making sure that
I am fed, and preventing my apartment from becoming a complete shambles. After all
that, all I really want to do is turn my brain off for awhile&amp;#8212;not write a few
thousand words of&amp;nbsp;polemic. &lt;/p&gt;
&lt;p&gt;Nonetheless, I&amp;#8217;m writing something now, at last. Nothing from the topics 
listed above.
The reasons are, respectively: no one else is interested in me grumbling, 
I&amp;#8217;ll write about that if and when the government tries it here, 
it turns out that the story didn&amp;#8217;t have as
interesting ramifications as I expected, it will come around again next year, I 
can&amp;#8217;t be bothered to write something requiring that many brain cells at the moment, 
and I&amp;#8217;m probably being too hard on my comrades.
The only reason that I&amp;#8217;m writing right now, really, is because I can&amp;#8217;t sleep. It&amp;#8217;s
becoming something of a problem for&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;For a number of years now (it first started when I was still in elementary school, I
think) I&amp;#8217;ve had some problems getting to sleep at night. But occasionally I go 
through spells when it is especially bad. This time it started three weeks ago,
during the week when I had four midterms. Presumably it was the stress that started
it. But it&amp;#8217;s more or less continued since then. So now I find myself in this
situation: I lie awake at night, totally incapable of getting to sleep. Then, in 
the morning, I sleep through my alarm(s), wake up at 10 o&amp;#8217;clock (which presumably
doesn&amp;#8217;t make it any easier to get to sleep at a reasonable hour the next night), 
have to rush
to class and skip the gym (and possibly breakfast). Then, just to add insult to 
injury, there&amp;#8217;s a good chance
that I&amp;#8217;ll find myself nearly falling asleep during class and I&amp;#8217;ll definitely be 
falling asleep when I try to do assigned readings. All in all, my situation feels
a lot like&amp;nbsp;this:&lt;/p&gt;
&lt;div align="center"&gt;&lt;iframe width="560" height="315" src="//www.youtube.com/embed/OrYGSlEmt_I" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;p&gt;(John Finnemore, the guy who wrote that little song, is an incredibly funny guy
whose radio sitcom &lt;a href="http://www.youtube.com/watch?v=-ptq9jqwAoY"&gt;Cabin Pressure&lt;/a&gt; 
I would most definitely&amp;nbsp;recommend.)&lt;/p&gt;
&lt;p&gt;So, I sit up late at night, writing inanely about my inability to sleep. Will this be of any interest to you, dear reader? God knows. Probably not, actually, but 
insomnia or not I&amp;#8217;m not feeling quite alert or clever enough at this time in the 
evening to write about anything more intellectual. In any case, good&amp;nbsp;night.&lt;/p&gt;</summary><category term="Personal"></category><category term="Insomnia"></category><category term="John Finnemore"></category></entry><entry><title>On the Abuse of Exponentiation in ColloquialÂ Communication</title><link href="https://politicalphysicist.github.io/on-the-abuse-of-exponentiation-in-colloquial-communication.html" rel="alternate"></link><published>2013-09-29T02:00:00+01:00</published><updated>2013-09-29T02:00:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2013-09-29:on-the-abuse-of-exponentiation-in-colloquial-communication.html</id><summary type="html">&lt;p&gt;Or, to put it another way, &amp;#8220;Why I Hate it When People Say Things &amp;#8216;Grow Exponentially.&amp;#8217;&amp;#8221;
But hey, why say something simply when you can say it in polysyllables? In any case, 
something which I have been finding increasingly irksome is when people talk about
something &amp;#8220;growing exponentially,&amp;#8221; when all that they really mean is that it is
growing &lt;em&gt;really&lt;/em&gt; quickly. I guess I shouldn&amp;#8217;t really blame them for this, seeing
as it&amp;#8217;s more the lousy math education standards which are to blame. But still, I do 
wish that they could get this in their heads: &lt;strong&gt;just because it&amp;#8217;s growing quickly
doesn&amp;#8217;t mean that it&amp;#8217;s growing&amp;nbsp;exponentially!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Plot of exponential growth as compared to other forms of growth" src="https://politicalphysicist.github.io/images/exponential.png" /&gt;Let 
me back up a bit. For those of you with a bit of mathematical or scientific
background this will be review, but I&amp;#8217;ll include it in case of the unlikely even
that there is anyone here without a second year university calculus class under 
their belt. And, given how nerdy/awesome my friends are, that &lt;em&gt;is&lt;/em&gt; rather unlikely. 
Exponential
growth refers to something that, over some fixed interval, will increase in size by
some constant factor. For example, if the water in my sink is getting higher 
exponentially, that means it starts off at, say, 1cm deep. After a minute it is 
2cm deep. After another minute it is 4cm deep. After another minute it is 8cm deep.
Pretty soon my whole apartment will be full of water, the landlord will be 
asking some difficult questions, and I&amp;#8217;ll be wishing that I&amp;#8217;d chosen a drier example
with which to make my&amp;nbsp;point.&lt;/p&gt;
&lt;p&gt;A related concept is exponential decay. This is essentially the same thing, except
here the quantity &lt;em&gt;decreases&lt;/em&gt; by some constant factor. For example,
say I have a chocolate bar with eight segments and in the first minute I eat half 
of it (four pieces). Wanting to savour
it, over the next minute I eat half of the remaining chocolate, or two pieces. 
Wanting to stretch out my chocolate still longer, the next minute I eat only 1 piece.
The next minute I eat only half a piece. This process continues and I never actually
finish the chocolate bar. Of course, this example is totally unrealistic:
in reality I would have eaten the whole chocolate bar within the first&amp;nbsp;minute.&lt;/p&gt;
&lt;p&gt;The thing is, the never-quite-vanishing chocolate bar exhibits exponential behaviour,
while most things that people &lt;em&gt;call&lt;/em&gt; exponential do not. The thing about exponential 
growth is that
it tends to explode; it will eventually start growing so quickly that it just can&amp;#8217;t
continue. Take population growth, for example. Populations are often thought of as growing
exponentially. But this can not last forever. Eventually there won&amp;#8217;t be enough food and 
the population will level&amp;nbsp;off.&lt;/p&gt;
&lt;p&gt;Whenever I see something referred to as &amp;#8220;increasing exponentially,&amp;#8221; my immediate reaction
is to ask for a plot of the data or the chi-squared value for an exponential fit. For 
reasons that I explained above, it is almost certainly &lt;em&gt;not&lt;/em&gt; growing exponentially. It
might be growing quickly, but that is not at all the same thing. So please, spare us
neurotic math-geeks a bit of unnecessary squirming and describe the trend&amp;nbsp;properly.&lt;/p&gt;</summary><category term="Personal"></category><category term="Mathematics"></category><category term="Pet Peeve"></category></entry><entry><title>Back for Another Year of Physics andÂ Phun</title><link href="https://politicalphysicist.github.io/back-for-another-year-of-physics-and-phun.html" rel="alternate"></link><published>2013-09-03T18:00:00+01:00</published><updated>2013-09-03T18:00:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2013-09-03:back-for-another-year-of-physics-and-phun.html</id><summary type="html">&lt;p&gt;Well, it&amp;#8217;s that time of year again. The air is turning cold (or, in today&amp;#8217;s
case, rainy), the last pay-cheque from my summer job went into my back account,
I&amp;#8217;ve made sure I&amp;#8217;m stocked up on all of the supplies I&amp;#8217;ll need, and another
semester is about to start. I&amp;#8217;ll be entering the third and penultimate year of
my astrophysics degree (my god, it&amp;#8217;s scary how quickly the time passes). I guess
I&amp;#8217;m supposed to be dreading this time of year, but I&amp;#8217;m really&amp;nbsp;not.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve had a 4+ month break and now I&amp;#8217;m sufficiently recharged to be ready to
start school again. Quite honestly, classes will be a nice change of pace, after
spending four months of writing data analysis scripts for one of my profs. Not
that there is anything wrong with doing that for a summer job&amp;#8212;it was
a nice change from classes at the start. But, as they say, variety is the spice
of life. So learning some actual physics again, rather than just crunching
numbers, sounds good to&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;The other reason I&amp;#8217;m not sad that school is starting again is because my social 
life actually improves during the
semester. All of my friends in Halifax are classmates and only a few of them
were around campus over the summer. And none of them were other people from my
year. So outside of office hours (when we shouldn&amp;#8217;t really be talking much
anyway) I had virtually no social life. Now, though, there will be plenty of
people in the physics major&amp;#8217;s work-room (well, we get &lt;em&gt;some&lt;/em&gt; work done there,
anyway) to talk to and plenty of time spent together doing homework. Honestly,
hours spent collaborating on homework sounds altogether more enjoyable than
hours spent in isolation killing&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;So, all things considered, I&amp;#8217;m kind of glad that school is starting again. Just not quite as glad as I will be when it&amp;#8217;s over come&amp;nbsp;May.&lt;/p&gt;</summary><category term="University"></category><category term="Summer"></category><category term="Physics"></category><category term="Astrophysics"></category></entry><entry><title>Science for Socialists:Â Introduction</title><link href="https://politicalphysicist.github.io/science-for-socialists-introduction.html" rel="alternate"></link><published>2013-08-16T20:00:00+01:00</published><updated>2013-08-16T20:00:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2013-08-16:science-for-socialists-introduction.html</id><summary type="html">&lt;p&gt;As you may know, my background is in the physical sciences. Well, I&amp;#8217;m 
doing my undergrad in astrophysics, at any rate. As you may also 
know, my politics essentially correspond to socialism. And by socialism,
I mean the &amp;#8220;common ownership of the means of production&amp;#8221; type, not 
just the &amp;#8220;let&amp;#8217;s maybe actually try funding our healthcare system 
properly&amp;#8221; type. So 
something I find quite upsetting is when I see these two interests coming
into conflict. To be clear, I don&amp;#8217;t think that there is anything that 
science is saying which would imply that socialism is impossible or
undesirable. Rather, the problem lies with the socialists: while much
better than the lunatic fringe of conservatives who actively oppose
science and rationalism, many socialists are nonetheless rather selective
in their use of these&amp;nbsp;tools.&lt;/p&gt;
&lt;p&gt;While those on the Right will get things totally wrong with regards to
evolution and climate change (among other, smaller, things), those on the
Left have been known to say downright crazy things about nuclear power
and genetically modified organisms (among other, similar, things). The
good news is that, I hope, often when leftists get science wrong it is
more to do with ignorance/laziness than outright hostility. This means
that socialists can be set right. Or so I dare to dream. In reality, even
if any socialists read this, I imagine most of them will laugh me off as
an oddity. Nonetheless, I feel this task is important and I am probably
one of the relatively few people who actually has &lt;em&gt;any&lt;/em&gt; sort of 
qualification to actually &lt;em&gt;do&lt;/em&gt; it, in that I can speak as someone with a
decent scientific background, plenty of experience in critical thinking,
and a political orientation that allows me to relate to those who I&amp;nbsp;criticize.&lt;/p&gt;
&lt;p&gt;So, over the next while (I&amp;#8217;m not sure how long it will be&amp;#8212;it depends on
how good I am at keeping up with this blog I suppose) I will be writing
blog posts about various topics which should be of some interest to
socialists, or anyone who follows politics and current events for that
matter. The first few things on my list will&amp;nbsp;be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nuclear Power: perhaps not the best choice to meet our energy needs, 
but not the doomsday technology so many people think it&amp;nbsp;is.&lt;/li&gt;
&lt;li&gt;Genetically Modified Food: it has problems, but safety isn&amp;#8217;t one of&amp;nbsp;them.&lt;/li&gt;
&lt;li&gt;Alternative Medicine: I really don&amp;#8217;t know how to sum this one up 
without being downright&amp;nbsp;condescending.&lt;/li&gt;
&lt;li&gt;Climate Change: quite catastrophic enough without you making it sound&amp;nbsp;worse.&lt;/li&gt;
&lt;li&gt;Conspiracy Theories: a case of critical thinking rather than science
&lt;em&gt;per se&lt;/em&gt;, but the process would be good for leftists to&amp;nbsp;learn.&lt;/li&gt;
&lt;li&gt;Fracking: aren&amp;#8217;t the extra greenhouse gas emissions enough reason not 
to do&amp;nbsp;it?&lt;/li&gt;
&lt;li&gt;Organic Food: no matter how good it makes you feel to buy it, evidence
of its benefits is&amp;nbsp;scarce.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a leftist and reading this list, you may have a problem with
one or more of my inclusions. Well, too bad. I suggest you wait until I
write the corresponding article and &lt;em&gt;then&lt;/em&gt; judge. Or do some research
of your own in the meantime. If, however, you were offended by an 
omission, please note it in a comment below and remember that this list 
was not meant to be exhaustive. If I agree with what you&amp;#8217;re saying then
I might just write an article on it at some&amp;nbsp;point.&lt;/p&gt;
&lt;p&gt;I hope that this series of articles will prove helpful, interesting and 
educational for you. Even if you aren&amp;#8217;t expecting much, do try to 
approach them with an open mind; just not so open that your brain falls&amp;nbsp;out!&lt;/p&gt;</summary><category term="Science for Socialists"></category><category term="Nuclear Power"></category><category term="GMOs"></category><category term="Alternative Medicine"></category><category term="Climate Change"></category><category term="Fracking"></category></entry><entry><title>New Computer, New LinuxÂ Distribution</title><link href="https://politicalphysicist.github.io/new-computer-new-linux-distribution.html" rel="alternate"></link><published>2013-07-30T15:00:00+01:00</published><updated>2013-07-30T15:00:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2013-07-30:new-computer-new-linux-distribution.html</id><summary type="html">&lt;p&gt;Well, my old laptop was dying. At least I think it was. In any case,
I wasn&amp;#8217;t waiting around until the semester started to find out&amp;#8212;better
to get a new computer now when I had time to get it configured properly.
And so, a week and a half ago I found myself with a brand new &lt;span class="caps"&gt;ASUS&lt;/span&gt; laptop.
It&amp;#8217;s not actually an ultrabook but it is still pretty thin. It has a &lt;span class="caps"&gt;24GB&lt;/span&gt;
solid-state drive (more than enough to hold my operating system), a &lt;span class="caps"&gt;750GB&lt;/span&gt;
mechanical hard drive, an Intel i5 processor, an optical disc drive,
and a 14&amp;#34; screen. Overall I&amp;#8217;m quite happy with my&amp;nbsp;choice.&lt;/p&gt;
&lt;p&gt;The laptop came with Windows 8 installed. I was not having that. The 
choice now became what version of Linux to use. The obvious choice 
would have been &lt;a href="http://www.linuxmint.com/"&gt;Linux Mint&lt;/a&gt;, which I have 
used ever since moving to Linux. This distribution has the advantage of
being ready to use immediately after installation. I&amp;#8217;m also very 
impressed by their &lt;a href="cinnamon.linuxmint.com"&gt;Cinnamon Desktop Environment&lt;/a&gt;.
However, the trade-off in a distribution being easy to use is that it
also somewhat inefficient when it comes to hardware usage. 
Additionally, in order to upgrade Linux Mint you must totally re-install
the operating system. To put it lightly, this is a&amp;nbsp;frig.&lt;/p&gt;
&lt;p&gt;Another Linux distribution which I&amp;#8217;d heard interesting things about is
called &lt;a href="https://www.archlinux.org/"&gt;Arch Linux&lt;/a&gt;. In a sense, Arch is the
polar opposite of Linux Mint. Once you&amp;#8217;ve installed it, you have a 
command-line interface with a basic software set installed. And that&amp;#8217;s
it. Everything else, including device drivers and a graphical interface,
you must install yourself. However, this ensures that there will be 
absolutely no bloat on your computer. Arch Linux also has the advantage
that you never have to install a new version of the operating system: all
of the components can be upgraded in exactly the same way that you&amp;#8217;d upgrade
any other software. (For those who are familiar with Linux, this means 
that you just keep the &lt;span class="caps"&gt;OS&lt;/span&gt; up-to-date by applying the upgrade command
with the&amp;nbsp;package-manager.) &lt;/p&gt;
&lt;p&gt;For some reason I decided that I wanted to give Arch a try. A big part
of the appeal is not having to re-install the &lt;span class="caps"&gt;OS&lt;/span&gt; for upgrades. I was also
enticed by the amount of control I&amp;#8217;d be able to have over my system. And
I guess at the end of the day I wanted the challenge&amp;#8212;I enjoy tinkering
with my computer, and I&amp;#8217;d reached the limits of what I could do with Mint.
In other words, I chose it out of&amp;nbsp;masochism. &lt;/p&gt;
&lt;p&gt;The installation process is considerably more complicated than that for
Linux Mint. However, in principle it isn&amp;#8217;t too difficult, thanks to the
wonderful documentation provided. Unfortunately, my computer has one of
those awful new &lt;span class="caps"&gt;UEFI&lt;/span&gt; motherboards. This, combined with some feature
called &amp;#8220;secure boot&amp;#8221; meant that even getting my computer to detect the
installation disc was a struggle. Then, once I finally got Arch installed,
the &lt;span class="caps"&gt;UEFI&lt;/span&gt; boot-loader was convinced that there was no operating system
present. To be fair, I tried installing Linux Mint and encountered the
same problem. Several attempts later, I finally found a work-around that
got the boot-loader to see the operating&amp;nbsp;systems.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bow to me, for I am root" src="https://politicalphysicist.github.io/images/iamroot.jpg" /&gt; At this point I 
was past the worst. The next step was to create a new
account for myself. Initially when you install Linux (well, in more
traditional setups like Arch, anyway) there will only be one user, called
&amp;#8220;root.&amp;#8221; Root is capable of doing anything on the computer&amp;#8212;it can delete
or edit any file. This is actually quite dangerous (giving rise to the
expressions &amp;#8220;He who plays with root kills [file-]tree&amp;#8221;) as you can
potentially delete something vital for the operation of your computer.
Thus it is best to create a separate account for every-day work
on the computer and only to use root when necessary (such as when installing
new software). Speaking of installing software, that was the next step.
First were the drivers for things like sound, video,
and my laptop&amp;#8217;s trackpad. Next came a graphical user interface (&lt;span class="caps"&gt;GUI&lt;/span&gt;).
Linux uses the X Window System for this. However, all that X gives is the
ability for the computer to render graphical windows&amp;#8212;you can&amp;#8217;t do very
much with them by default, and you certainly won&amp;#8217;t have a desktop with icons.
For that I needed to install a Desktop&amp;nbsp;Environment.&lt;/p&gt;
&lt;p&gt;My first choice for a desktop environment was Cinnamon. It has a fairly
traditional layout (which I like&amp;#8212;I don&amp;#8217;t know why so many projects are
trying to force totally new interfaces on people) but modern looking
visual features. Unfortunately, Cinnamon&amp;#8217;s behaviour with Arch was
distinctly underwhelming. There were numerous problems, but probably
the most frustrating was that I couldn&amp;#8217;t get any of the applets (such as
the one which shows the weather) to work. Additionally, I realized how
tricky it can be to configure some of the visual elements of Cinnamon. On
Linux Mint this isn&amp;#8217;t really a problem because most of the work is done 
for you in advance, but I couldn&amp;#8217;t seem to get it looking quite the way I wanted on
Arch. So I gave up on&amp;nbsp;Cinnamon.&lt;/p&gt;
&lt;p&gt;My second choice was &lt;a href="http://mate-desktop.org/"&gt;&lt;span class="caps"&gt;MATE&lt;/span&gt;&lt;/a&gt;.
&lt;span class="caps"&gt;MATE&lt;/span&gt; is a fork of an older desktop environment (now discontinued) called
&lt;span class="caps"&gt;GNOME&lt;/span&gt; 2. &lt;span class="caps"&gt;MATE&lt;/span&gt; was created when &lt;span class="caps"&gt;GNOME&lt;/span&gt; 2 was replaced by the horrendous 
&lt;span class="caps"&gt;GNOME&lt;/span&gt; 3. &lt;span class="caps"&gt;MATE&lt;/span&gt; doesn&amp;#8217;t (by default) have quite the same level of prettiness
as Cinnamon, but on the other hand it is far easier to configure. So I
installed &lt;span class="caps"&gt;MATE&lt;/span&gt; and almost immediately realized that I could get rid of 
Cinnamon: all of &lt;span class="caps"&gt;MATE&lt;/span&gt;&amp;#8217;s features worked immediately. So goodbye Cinnamon.
After installing a few more themes, &lt;span class="caps"&gt;MATE&lt;/span&gt; looked almost as good as 
Cinnamon,&amp;nbsp;too!&lt;/p&gt;
&lt;p&gt;Finally I needed to install my preferred applications. It was the usual
sort of list: &lt;a href="http://www.libreoffice.org/"&gt;LibreOffice&lt;/a&gt;, 
&lt;a href="http://www.gnu.org/software/emacs/"&gt;emacs&lt;/a&gt;, &lt;a href="http://banshee.fm/"&gt;Banshee&lt;/a&gt;, 
&lt;a href="http://www.geany.org/"&gt;Geany&lt;/a&gt;, and &lt;a href="http://www.xm1math.net/texmaker/"&gt;Texmaker&lt;/a&gt;.
Perhaps my favourite feature of Arch Linux is the Arch User Repository.
This is a collection of source-code for software which would not be
popular enough (or is still too experimental) to warrant being maintained
in the official software repositories. However, Arch users can prepare
the source code themselves so that it can easily be compiled into a package
and then installed using the normal package manager. This means that there
are some obscure, but great, pieces of software which can be installed
with ease, such as a client for my &lt;a href="http://www.seafile.com/en/home/"&gt;Seafile&lt;/a&gt;
Cloud Server (an open source replacement for Dropbox) and 
&lt;a href="http://docs.getpelican.com/en/3.2/"&gt;Pelican&lt;/a&gt;, which I use to produce 
this&amp;nbsp;blog. &lt;/p&gt;
&lt;p&gt;&lt;img style="float:none;display:block;margin-left:auto;margin-right:auto" alt="A screenshot of my desktop." src="http://redshadesofgreen.raspctl.com/static/images/ArchScreenshot.png" /&gt;&lt;/p&gt;
&lt;p&gt;And this brings me more-or-less to where I am now. While there are still
a few things I have left to do, at this point I have a fully functional
computer running Arch&amp;nbsp;Linux.&lt;/p&gt;</summary><category term="Linux"></category><category term="Arch Linux"></category><category term="Laptop"></category><category term="MATE Desktop"></category></entry><entry><title>Why Social Democracy Was Great and Why It Isnât theÂ Answer</title><link href="https://politicalphysicist.github.io/why-social-democracy-was-great-and-why-it-isnt-the-answer.html" rel="alternate"></link><published>2013-07-13T23:40:00+01:00</published><updated>2013-07-13T23:40:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2013-07-13:why-social-democracy-was-great-and-why-it-isnt-the-answer.html</id><summary type="html">&lt;p&gt;Yesterday I happened to read two very interesting articles, which at first 
glance would appear to be entirely unrelated. One was in &lt;a href="http://www.newscientist.com/article/mg21929254.600-the-wonder-year-why-1978-was-the-best-year-ever.html#.UeCPGt9hLCc"&gt;&lt;em&gt;New Scientist&lt;/em&gt;&lt;/a&gt;
magazine and explained that, although &lt;span class="caps"&gt;GDP&lt;/span&gt; has risen fairly steadily in the west for the past several decades, the Genuine Progress Indicator (&lt;span class="caps"&gt;GPI&lt;/span&gt;) has slowly 
been declining since 1978. The &lt;span class="caps"&gt;GPI&lt;/span&gt; essentially tries to
adjust the value of &lt;span class="caps"&gt;GDP&lt;/span&gt; to account for social and environmental problems (such 
as inequality and pollution). The other article was an opinion
piece in &lt;a href="http://www.guardian.co.uk/commentisfree/2013/jun/25/europe-leaders-not-turning-austerity"&gt;&lt;em&gt;The Guardian&lt;/em&gt;&lt;/a&gt; by two Canadian academics and activists
that I am rather fond of: Leo Panitch and Sam Gindin. Here they explained why 
we can&amp;#8217;t expect any attempt at a second New Deal in Europe as a way of 
combating the economic crisis: in short, without a
threat of something more radical (ie: all-out socialism), the ruling classes see
no need to engage in progressive economic&amp;nbsp;policies.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Graphs show that GDP has been consistently rising since 1950, while GPI has 
been in decline since the late 1970s." src="https://politicalphysicist.github.io/images/gpiPlots.jpg" /&gt;
This set of graphs, taken from &lt;em&gt;New Scientist&lt;/em&gt;&amp;#8216;s website, shows that global &lt;span class="caps"&gt;GDP&lt;/span&gt;
and &lt;span class="caps"&gt;GPI&lt;/span&gt; rose fairly steadily from 1950 to the late 1970s. 
This corresponds with the period in which Keynesianism ruled. This usually
took the form of social democracy: public ownership of key industries, strong 
trade unions, lots of regulation, a large welfare state, etc. As Panitch and
Gindin explain, the reason that this could be implemented was because there
were powerful working-class forces at work which could have led to the outright
abolition of capitalism. Faced with the prospect of losing everything, the upper
classes were willing to sacrifice a little wealth and power in order to pacify
the lower classes. This also was reflected in American foreign policy: the &lt;span class="caps"&gt;US&lt;/span&gt;
established the Marshall Plan in Europe to ensure that capitalism survived 
there, thus helping to ensure its survival in the &lt;span class="caps"&gt;USA&lt;/span&gt; as&amp;nbsp;well.&lt;/p&gt;
&lt;p&gt;As you can see from the above plot, these policies were quite successful at 
ensuring increased quality of life for all. However, the welfare state was 
always dependent on the success in the private sector for revenue (with a few
exceptions, nationalised industries were not used as major revenue sources). 
Thus social democracy has always been dependent on continued capital 
accumulation. And this was its fundamental weakness. When the global slump
came in the 1970s (in Britain it was so severe that you see a large decrease
in &lt;span class="caps"&gt;GPI&lt;/span&gt; around 1975) it began to put the welfare state in jeopardy. In some 
countries there were attempts to break away from the dependence on private
capital accumulation (the Meidner Plan in Sweden and Mitterrand&amp;#8217;s 
nationalisation of banks in France) but the working class was not strong enough
to bring these attempts to a successful conclusion. In all countries it 
eventually proved necessary
to start scaling back the welfare state and, to one degree or another, abandon
Keynesian policies in favour of Monetarist ones. This new economic orthodoxy is
usually referred to as&amp;nbsp;neoliberalism.&lt;/p&gt;
&lt;p&gt;In Britain this took the form of Margaret Thatcher. In the &lt;span class="caps"&gt;US&lt;/span&gt; it was Ronald
Reagan. In Canada it was Brian Mulroney. All of them implemented policies which
were harmful to the average citizen. Trade unions were weakened and could no
longer act as a force against income inequality. Industries previously devoted
to the public good were privatised and used to enrich a select few. Cuts to 
social spending hurt the poor by making once universal services available only
to those that could pay. Deregulation made it easier for companies to pollute
the environment and the emphasis on private profit meant that environmental
costs were ignored. The reasons for declining &lt;span class="caps"&gt;GPI&lt;/span&gt; are clear. What is less clear
is what to do about&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Panitch and Gindin show that today we lack the popular forces which made 
social democracy viable in the post-war period. There are no significant 
examples of non-capitalist states and few radical trade unions. In the minds of
most people there is no alternative to capitalism. Anti-capitalist parties are 
small and marginal (with a few exceptions, such as in Greece and, to a lesser 
extent, Spain and Portugal). The business class need not
fear the imposition of socialism; they know that the working class is currently
too disorganized to be a serious threat and thus see no need to pursue a policy
of&amp;nbsp;appeasement. &lt;/p&gt;
&lt;p&gt;Now, this situation will very likely change in the coming years and 
decades, but there are a few questions we should address as we work to create 
new working-class institutions. One is what these movements should demand. 
Many progressive economists talk about things like reregulating the banks and 
implementing a Tobin tax. However, as
explained above, we are unlikely to be able to impose these reformist measures
without the threat of something far more radical. And, knowing what happened the
last time the left settled for reforming capitalism rather than abolishing it, 
we should not be content merely to use socialism as a threat. This time we must
&lt;em&gt;implement&lt;/em&gt; it.
Social democracy died in the 1980s and there is no point in trying to bring back
the dead. Rosa Luxemburg&amp;#8217;s sentiments are more true now than ever: 
&amp;#8220;Bourgeois society stands at the crossroads, either transition to Socialism or regression into&amp;nbsp;Barbarism.&amp;#8221;&lt;/p&gt;</summary><category term="GDP"></category><category term="Social Democracy"></category><category term="Leo Panitch"></category><category term="Sam Gindin"></category><category term="British Politics"></category><category term="Neoliberalism"></category><category term="Socialism"></category></entry><entry><title>Take aÂ Listen</title><link href="https://politicalphysicist.github.io/take-a-listen.html" rel="alternate"></link><published>2013-07-10T13:40:00+01:00</published><updated>2013-07-10T13:40:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2013-07-10:take-a-listen.html</id><summary type="html">&lt;p&gt;I was delighted to discover, several months ago now, that &lt;span class="caps"&gt;BBC&lt;/span&gt; had produced radio
adaptations of some of the books by my favourite author, &lt;a href="http://en.wikipedia.org/wiki/Terry_Pratchett"&gt;Terry Pratchett&lt;/a&gt;. Below is the first part of their
adaptation of &lt;em&gt;Guards! Guards!&lt;/em&gt; Take a&amp;nbsp;listen!&lt;/p&gt;
&lt;iframe width="420" height="315" align="middle" src="//www.youtube.com/embed/kKhirak0QEw" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="Terry Pratchett"></category><category term="BBC"></category><category term="Radio Play"></category><category term="Guards! Guards!"></category></entry><entry><title>Was There NoÂ Alternative?</title><link href="https://politicalphysicist.github.io/was-there-no-alternative.html" rel="alternate"></link><published>2013-07-09T10:30:00+01:00</published><updated>2013-07-09T10:30:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2013-07-09:was-there-no-alternative.html</id><summary type="html">&lt;p&gt;I made the mistake today of voicing my distinctly anti-Thatcher views. For those
of you who don&amp;#8217;t know, Margaret Thatcher was Prime Minister in the &lt;span class="caps"&gt;UK&lt;/span&gt; during
the &amp;#8216;80s and oversaw the implementation of neoliberalism. She succeeded in 
crushing the trade unions, scaling back the welfare state, deregulating the
financial sector, deindustrialising Britain, and privatising a substantial
portion of public assets (including utilities, airlines, buses, coal mines,
steel manufacturing, and aerospace, among other things). These policies saw a 
massive increase in income inequality and unemployment and are often referred
to as &amp;#8220;class warfare from above.&amp;#8221; Anyway, I received a 
(fairly typical) response that Thatcher saved Britain for anarchy and bankruptcy
and that while her policies were unpleasant at the time, they were 
necessary. There are even plenty of people
on the centre-left who say things like this. It irritates me to no end, but I 
figured that it was best to avoid getting dragged into a political debate in 
public. Of course, this being me, it continued to bother me through the day, so
I&amp;#8217;ve written some of my thoughts on the matter&amp;nbsp;here.&lt;/p&gt;
&lt;p&gt;Now, to be fair, Britain&amp;#8217;s economy was a mess before she came in. It was also a 
mess for quite awhile after she came in. In fact, initially she made things 
worse. When the recovery did come it was on the back of the finance &amp;#8220;industry,&amp;#8221;
and we all know how that turned out&amp;#8230; However, there is no denying that the
British economy was in need of major restructuring. Maggie famously justified
her policies by saying that &amp;#8220;There is no alternative.&amp;#8221; This is often referred to
as &lt;span class="caps"&gt;TINA&lt;/span&gt; and this is what the Thatcher-apologists have unwittingly bought into. 
And, in a sense, they aren&amp;#8217;t wrong. There was no alternative&amp;#8212;if we insisted on
maintaining&amp;nbsp;capitalism. &lt;/p&gt;
&lt;p&gt;However, at about the same time that the Thatcherites came to
power we also saw the rise of the Bennites. They were a left-wing movement 
within the Labour Party, centred around the &lt;span class="caps"&gt;MP&lt;/span&gt; Tony Benn. They advocated 
nationalising the financial institutions
and much of large industry. These new public enterprises were to be administered
by the workers. They felt that these measures, combined with a degree of
industrial planning (which would, if I recall, have seen a substantial retooling
of factories) and import substitution would help to restart Britain&amp;#8217;s
economy. Actually, the Labour Party was elected in the 1970s on a watered-down
version of this platform. However, they did not have the guts to pursue it and
instead implemented an early, watered-down version of Thatcherism. This prompted
a massive strike-wave, referred to as The Winter of Discontent (the 
anarchy to which Thatcher apologists refer). The irony is that the Labour 
Party brought it upon themselves. There were alternatives proposed. At least one
was even put forward the Cabinet by Tony Benn, but was viewed as too&amp;nbsp;radical.&lt;/p&gt;
&lt;p&gt;So, you can not justify what Margaret Thatcher did by saying that it was what 
was necessary in order to get Britain back on track. There were other options
available which were never tried. What was true, however, was that the post-War
class-compromise (the Keynesian mixed-economy) had outlive its usefulness. As 
the &amp;#8216;80s dawned, class struggle was destined to begin anew. 
The likes of Tony Benn tried, 
and very nearly succeeded, at leading the working class to victory. 
However, Mrs. Thatcher was more successful with her ruling-class offensive.
When you apologise for Thatcher, this class warfare from above is what you are 
justifying. I suspect, or at least hope, that
fewer people would be willing to defend her if they thought of it that&amp;nbsp;way.&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;PS&lt;/span&gt;: I have a certain fondness for all of the protests songs written about
Margaret Thatcher. Here are a few of my&amp;nbsp;favourites:&lt;/p&gt;
&lt;iframe width="420" height="315" src="//www.youtube.com/embed/9t4-zDem1Sk" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width="420" height="315" src="//www.youtube.com/embed/IlkXQm7tSCY" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width="420" height="315" src="//www.youtube.com/embed/B1NyWbhCxZE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width="420" height="315" src="//www.youtube.com/embed/OeuLTEXazJs" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="Margaret Thatcher"></category><category term="British Politics"></category><category term="UK"></category><category term="TINA"></category><category term="Tony Benn"></category><category term="Socialism"></category></entry><entry><title>HelloÂ Facebookers!</title><link href="https://politicalphysicist.github.io/hello-facebookers.html" rel="alternate"></link><published>2013-07-05T22:00:00+01:00</published><updated>2013-07-05T22:00:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2013-07-05:hello-facebookers.html</id><summary type="html">&lt;p&gt;Well, I&amp;#8217;ve decided to announce this blog on Facebook. Having written two serious
posts, one of which was quite work-intensive, I figured that there wasn&amp;#8217;t much
point in continuing if no one was going to read it. So it&amp;#8217;s time to tell the&amp;nbsp;world!&lt;/p&gt;
&lt;p&gt;I admit that I&amp;#8217;m still a little bit hesitant. This blog will contain some 
rather personal information. I&amp;#8217;ve already made my sexual
orientation quite clear on Facebook, but people wouldn&amp;#8217;t find out unless they
actually went looking. However, now that I&amp;#8217;ve posted a link to this blog I
will essentially have come out to the world. Not that I really mind&amp;#8212;I&amp;#8217;m not
at all ashamed of who I am. It&amp;#8217;s just a bit of a big step. What&amp;#8217;s more, this
will essentially be me officially &amp;#8220;coming out&amp;#8221; as a socialist. Ironically, if
anything I find that scarier. Certainly I&amp;#8217;m not quite ready to tell my
parents &lt;em&gt;that&lt;/em&gt; yet. They were fine with my being gay, but their love and support
might only go so far&amp;#8230; I jest.&amp;nbsp;Mostly.&lt;/p&gt;
&lt;p&gt;When I&amp;#8217;ve written my previous articles it felt very much like they were going in
a diary&amp;#8212;they were only to help organize my thoughts and no one else would ever 
read them. Now, for better or for worse, that is about to change. Or perhaps it 
won&amp;#8217;t; I guess it all depends on how interesting people find me. I hope that
everyone out there &lt;em&gt;will&lt;/em&gt; find me interesting enough to at least read some of 
what I have to say. Thank you very much for taking the time to read this far! 
Happy&amp;nbsp;Friday!&lt;/p&gt;</summary><category term="Facebook"></category><category term="Blogging"></category></entry><entry><title>Markov Chains and GayÂ Dating</title><link href="https://politicalphysicist.github.io/markov-chains-and-gay-dating.html" rel="alternate"></link><published>2013-07-02T13:30:00+01:00</published><updated>2013-07-02T13:30:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2013-07-02:markov-chains-and-gay-dating.html</id><summary type="html">&lt;p&gt;So, in case you didn&amp;#8217;t realize, dating when you&amp;#8217;re gay is &lt;em&gt;hard&lt;/em&gt;. Not to say 
it&amp;#8217;s easy for straight people, but at least you know that, when you talk to
someone, the odds are that they at least have a compatible sexuality. Not to mention that&lt;br /&gt;
when you&amp;#8217;re gay and want something serious you have to deal with the fact that
a lot of guys out there just want casual sex. This, it seems, is especially true
online and in gay bars. Some days it feels like I must be the only
gay guy in the city who actually wants a committed, monogamous&amp;nbsp;relationship.&lt;/p&gt;
&lt;p&gt;At some point, however it was pointed out to me that part of the reason it can
feel that way is because those who want serious (read, monogamous) 
relationships will tend to find each
other and drop out of the dating pool&amp;#8212;at least temporarily. Or, given my 
science background, I prefer to think back to my high school chemistry classes
and say that they precipitate out of the solution. (Actually, given the effect 
that this has on the reaction&amp;#8217;s rate and equilibrium, this might be a surprisingly
apt analogy.) Thus it will
seems as though there are artificially few gay men seeking what I want. Of 
course, being someone who likes things to be quantitative, I wasn&amp;#8217;t entirely 
satisfied with such a qualitative explanation. I found myself wondering how
dramatic was this affect and just how much it could bias what I&amp;nbsp;see.&lt;/p&gt;
&lt;p&gt;Luckily, I remembered some concepts from my linear algebra classes that I thought
would be useful in evaluating these questions. Taking out my old textbook, I
quickly found that what I wanted are called Markov Chains. To quote the
&lt;a href="https://en.wikipedia.org/wiki/Markov_chain"&gt;Wikipedia article&lt;/a&gt;, a Markov Chain&amp;nbsp;is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#8230; a mathematical system that undergoes transitions from one state to 
another, between a finite or countable number of possible states. It is a 
random process usually characterized as memoryless: the next state depends 
only on the current state and not on the sequence of events that preceded&amp;nbsp;it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For the purposes of this post, we will assume that there are only threes
states for gay&amp;nbsp;males:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Interested in hookups&amp;nbsp;(A)&lt;/li&gt;
&lt;li&gt;Interested in a serious relationship&amp;nbsp;(B)&lt;/li&gt;
&lt;li&gt;In a serious relationship&amp;nbsp;(C)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is obviously a gross oversimplification. In the future I may well add more
categories. There are various other problems which will become apparent as we
work through this simple analysis; I will point them out as we get to&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;Now, Markov Chains can be represented by graphics such as the one below:
&lt;img alt="There are three circles, representing the three groups, with paths connecting them. On each path is a probability of someone following that path between time steps." src="https://politicalphysicist.github.io/images/markovDating.png" /&gt;&lt;/p&gt;
&lt;p&gt;The label &lt;span class="math"&gt;\(P_{XY}\)&lt;/span&gt; next to each of the arrows is the probability that a member
of group X will move to group Y over some time-period&amp;#8212;say, one month. These 
probabilities can be represented by the following&amp;nbsp;matrix: 
&lt;/p&gt;
&lt;div class="math"&gt;$$P = \begin{bmatrix} 
P_{AA} &amp;amp; P_{BA} &amp;amp; P_{CA} \\\\\\\\
P_{AB} &amp;amp; P_{BB} &amp;amp; P_{CB} \\\\\\\\
P_{AC} &amp;amp; P_{BC} &amp;amp; P_{CC} 
\end{bmatrix} .$$&lt;/div&gt;
&lt;p&gt;If you have some population of gay men then you can represent the number of men
in each group as a&amp;nbsp;vector 
&lt;/p&gt;
&lt;div class="math"&gt;$$\vec{N_0} = \left( \begin{array}{c} A_0 \\\\\\\\ B_0 \\\\\\\\ C_0 \end{array} \right).$$&lt;/div&gt;
&lt;p&gt;
The number of people in each group after one month would then be given&amp;nbsp;by
&lt;/p&gt;
&lt;div class="math"&gt;$$\vec{N_1} = P \vec{N_0}.$$&lt;/div&gt;
&lt;p&gt; More&amp;nbsp;generally, &lt;/p&gt;
&lt;div class="math"&gt;$$\vec{N_{n+1}} = P \vec{N_n}$$&lt;/div&gt;
&lt;p&gt; 
implying&amp;nbsp;that &lt;/p&gt;
&lt;div class="math"&gt;$$\vec{N_k} = P^{k} \vec{N_0}.$$&lt;/div&gt;
&lt;p&gt; One of the properties of the 
matrix representations of Markov Chains is&amp;nbsp;that &lt;/p&gt;
&lt;div class="math"&gt;$$\lim_{k \to \infty} P^{k}$$&lt;/div&gt;
&lt;p&gt; 
converges to some matrix &lt;span class="math"&gt;\(L\)&lt;/span&gt; which represents the system&amp;#8217;s equilibrium state. The
columns of the matrix will all be the same vector, &lt;span class="math"&gt;\(\vec{x}\)&lt;/span&gt;, known as the
steady-state probability vector. This represents the fraction of people
in each group once the system has reached its steady-state. It follows that
the system will eventually reach this configuration no matter what the
starting&amp;nbsp;conditions.&lt;/p&gt;
&lt;p&gt;So now we&amp;#8217;ve set up a simple model of the gay dating scene. But, before I 
continue, I need to highlight a weakness of this model; it doesn&amp;#8217;t (explicitly) 
account for age-groups. It can not  account for people&amp;#8217;s attitudes changing as t
hey mature or for the entrance of new, younger
people into the dating pool. This has an impact on what values we choose when
filling our matrix. For example, my suspicion is that many guys who are 
initially into hookups will, after having had their fun and with some increased
maturity, become tired of 
them and want a more serious relationship. However, in the real world, this
may be offset by new people entering the dating pool. None of this can be directly
modelled here, which is a weakness of these simple
Markov Chains. If I decide to continue this sort of analysis in future, it
would suggest that I should abandon them in favour of a more complex model. 
For the purposes of &lt;em&gt;this&lt;/em&gt; article, let&amp;#8217;s just assume that the
people in the dating pool don&amp;#8217;t mature or alter their attitudes. This is
almost certainly wrong, but it would require a far more complicated model, in
which the various probabilities depended not only on someone&amp;#8217;s current 
relationship status but also on their relationship history, to overcome this&amp;nbsp;limitation.&lt;/p&gt;
&lt;p&gt;Given these simplifications, let&amp;#8217;s see what assumptions we can reasonably make 
about the value of our &lt;span class="math"&gt;\(P\)&lt;/span&gt;&amp;nbsp;matrix:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Someone who seeks hookups will not start looking for a relationship. 
(&lt;span class="math"&gt;\(P_{AB} = 0\)&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;Occasionally a hookup will turn into a relationship. (&lt;span class="math"&gt;\(P_{AC} &amp;gt; 0\)&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;Someone who wants a relationship will not change to wanting hookups. 
(&lt;span class="math"&gt;\(P_{BA} = 0\)&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;Relationship generally last more than one iteration of the model. 
(&lt;span class="math"&gt;\(P_{CC} &amp;gt; 0\)&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;When a someone gets out of a relationship they will seek another relationship
and not hookups. (&lt;span class="math"&gt;\(P_{CA} = 0\)&lt;/span&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The last assumption is the one which strikes me as the most inaccurate, as 
someone who entered a relationship via a hookup would probably go back to 
hookups and someone who gets out of a long-term relationship might want to 
partake in hookups for a little while before looking for a new relationship.
However, to properly account for these things would require me to know the
history of the system, which would mean I could no longer use a simple Markov&amp;nbsp;Chain. &lt;/p&gt;
&lt;p&gt;We can now start filling in the&amp;nbsp;matrix:
&lt;/p&gt;
&lt;div class="math"&gt;$$P = \begin{bmatrix} 
1 - P_{AC} &amp;amp; 0 &amp;amp; 0 \\\\\\\\
0 &amp;amp; 1 - P_{BC} &amp;amp; 1 - P_{CC} \\\\\\\\
P_{AC} &amp;amp; P_{BC} &amp;amp; P_{CC} 
\end{bmatrix} .$$&lt;/div&gt;
&lt;p&gt;Let&amp;#8217;s say that each iteration of the model corresponds to one month. 
Furthermore, let&amp;#8217;s assume that someone seeking hookups has an ~1% chance of 
ending up in a relationship over the course of a year, or a 0.1% chance of ending
up in a relationship each month. We&amp;#8217;ll assume that the probability of a 
relationship lasting one year is ~50%, ie: there is a 94% chance they will last
each month. These are numbers which I essentially made up, but they seem
reasonable to me. Unfortunately, I have no idea what the odds are of someone 
entering a relationship each month. I&amp;#8217;ll just guess and say 5% (which 
corresponds to an ~45% probability of entering a relationship over the course
of a year).&amp;nbsp;Thus: 
&lt;/p&gt;
&lt;div class="math"&gt;$$P = \begin{bmatrix} 
.999 &amp;amp; 0 &amp;amp; 0 \\\\\\\\
0 &amp;amp; .95 &amp;amp; .06 \\\\\\\\
.001 &amp;amp; .05 &amp;amp; .94 
\end{bmatrix} .$$&lt;/div&gt;
&lt;p&gt;Using the &lt;a href="http://www.gnu.org/software/octave/"&gt;&lt;span class="caps"&gt;GNU&lt;/span&gt; Octave&lt;/a&gt; software (an open
source clone of &lt;span class="caps"&gt;MATLAB&lt;/span&gt;), I computed  &lt;span class="math"&gt;\(P^{k}\)&lt;/span&gt; using larger and larger values
of &lt;span class="math"&gt;\(k\)&lt;/span&gt; until the results converged on some matrix &lt;span class="math"&gt;\(L\)&lt;/span&gt;, as described above. This
didn&amp;#8217;t happen until &lt;span class="math"&gt;\(k \approx 13000\)&lt;/span&gt;. That is to say, it took this system
1083 years to reach equilibrium. I think it is safe to say that my assumption
of people in the model not maturing as I iterate the model
is pretty invalid! For those that are curious, the steady-state probability
vector&amp;nbsp;is 
&lt;/p&gt;
&lt;div class="math"&gt;$$\vec{x} = \left( \begin{array}{c}0 \\\\\\\\
0.55 \\\\\\\\
0.45\end{array} \right).$$&lt;/div&gt;
&lt;p&gt;A more meaningful thing to do would be to look at how the number of people in
each group changes over time. In my current city there are probably around 
30,000 post-secondary students during the school year. Assuming that half of
them are male and that 5% of males are gay, that works out to 750 young gay
men. We&amp;#8217;ll assume that initially none of them are in a relationship, that half
of them are interested in hookups, and that half of them want a relationship.
The number of people in each relationship is shown in the graph below over a
period of four&amp;nbsp;years.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Group A appears to decrease more or less linearly in size, Group B decreases rapidly at first and then levels off, and Group C increases quickly at first before levelling off." src="https://politicalphysicist.github.io/images/markovRes.png" /&gt; At the end of the four year period, there are 357 people looking for hookups, 
213 peoples looking for a relationship, and 180 people in a relationship. Even
though half of the population (and increasing) is long-term-relationship 
oriented, these people make up only 37% of the dating pool. I&amp;#8217;d be very 
interested to know how closely this corresponds to reality. Of course, 
evaluating reality
is made more complicated by things like open relationships and people who are
seeking a relationship but will partake in hookups in the&amp;nbsp;meantime. &lt;/p&gt;
&lt;p&gt;Finally, according to this model, it turns out that those seeking a relationship
will, four years in, be in a minority within the dating pool so long as initially
more than 37% of people are interested in hookups. So this
tends to indicate what I suspected&amp;#8212;even though it might feel like you&amp;#8217;re alone in
seeking a long-term gay relationship, there is a good chance that the majority
of gay guys actually share your views. Now the only problem is finding&amp;nbsp;them!&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="Dating"></category><category term="Markov Chains"></category><category term="Mathematics"></category><category term="Mathematical Models"></category></entry><entry><title>The Mathematics ofÂ Protest</title><link href="https://politicalphysicist.github.io/the-mathematics-of-protest.html" rel="alternate"></link><published>2013-06-30T18:16:00+01:00</published><updated>2013-06-30T18:16:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2013-06-30:the-mathematics-of-protest.html</id><summary type="html">&lt;p&gt;I always enjoy reading about how math can be applied to predicting societal
actions. I&amp;#8217;m not quite sure why. Perhaps it just makes me think of Isaac 
Asimov&amp;#8217;s &lt;a href="http://en.wikipedia.org/wiki/Psychohistory_(fictional)"&gt;psychohistory&lt;/a&gt;. In any case, I read a very interesting &lt;a href="http://www.newscientist.com/article/mg21829234.300-brazil-uprising-points-to-rise-of-leaderless-networks.html?cmpid=RSS|NSNS|2012-GLOBAL|online-news#.UdCUB6BhLCe"&gt;article&lt;/a&gt; 
in &lt;em&gt;New Scientist&lt;/em&gt; magazine the other day
which gave a mathematical and statistical examination of protest, in particular
the recent protests in Brazil. It discussed how this sort of unrest spreads
in much the same way as diseases and forest fires. Once something starts off
the unrest (in the Brazilian case, an increase in bus fairs), 
unrelated long-time grievances can come to the fore and cause 
surprising amounts of civil disobedience that can persist even after the
original issue is dealt with. Frankly, I&amp;#8217;m surprised that you&amp;#8217;d
need a mathematical model to know that; to anyone who&amp;#8217;s studied history
it should be common&amp;nbsp;sense. &lt;/p&gt;
&lt;p&gt;Another interesting statement that was made is that
it is the &amp;#8220;newly prosperous,&amp;#8221; afraid of losing their new found success, who tend to be protesting. It reminds me of what
one of my high school history teachers used to say about revolutions: you 
don&amp;#8217;t get revolutions when people have &lt;em&gt;no&lt;/em&gt; hope but when you &lt;em&gt;give&lt;/em&gt; them hope and
then try to take it away. Rabble-raisers everywhere take&amp;nbsp;note.&lt;/p&gt;
&lt;p&gt;Other factors which were noted to facilitate the spread of protest include high food prices, high
numbers of unemployed young people, and access to  social media. The latter-most 
is said to &amp;#8220;boost a protest&amp;#8217;s transmission rate through susceptible societies.&amp;#8221;
I wonder if, perhaps, part of the reason why youth are more likely to spread
civil unrest is because they are more adept at using social media? It is also
speculated that recent protests relate to a societal trend away from hierarchy 
and towards more horizontalist means of&amp;nbsp;organization.&lt;/p&gt;
&lt;p&gt;One thing which irked me about the article was that it had a somewhat
condescending tone towards protesters. Notice how it compared the spread of
protests to the spread of diseases. While perhaps mathematically accurate, that is not a pleasant comparison, is it? Of course,
as a socialist with a somewhat revolutionary bend, I suppose I hold an
unusually positive view on&amp;nbsp;protest. &lt;/p&gt;
&lt;p&gt;Something which worries me a little bit is
whether this sort of knowledge could be used to suppress protest and dissent. 
I can certainly imagine governments &lt;em&gt;wanting&lt;/em&gt; to do that.
For those of us wanting to change the world, it would be a very large 
impediment if the ruling classes used mathematics and sociology to try to
enforce the status quo. Of course, a different approach would be for them to 
attempt to understand the root cause of unrest and to fix it. Would this be a
good thing? It would certainly improve the lives of people in the short term. 
But would it be demobilizing? Would we not just end up with a
friendlier, reformed version of the world we live in today, with all of the old 
class structures still intact? In effect, would it simply lead to a redoing of
Keynesian social democracy? I&amp;#8217;ll leave that debate aside for now. In any case,
I suspect that it is irrelevant: the response of the ruling class to Occupy Wall
Street seems to show a complete disinterest in appeasement. And, in any case,
Keynesian policies failed once and would almost certainly fail if tried&amp;nbsp;again.&lt;/p&gt;
&lt;p&gt;So now we must ask ourselves, how is this information useful to activists and 
to the people who organize these protests? Can it inform our strategies and
tactics? Can we use it to our advantage? Is 
it ethical to do so? After all, you&amp;#8217;d essentially be manipulating people. I
suppose my view is that this sort of research will allow activists to anticipate
if a protests will become widespread. This will allow us radicals to be prepared
somewhat in advance. For those who work on theoretical analysis, research such
as this may lend a mathematical or even an empirical basis for what at present 
feels at times like nothing more that intuition and vague guess. That is when
I&amp;#8217;ll be convinced that we have truly &amp;#8220;&lt;a href="http://en.wikipedia.org/wiki/Scientific_socialism"&gt;Scientific Socialism&lt;/a&gt;.&amp;#8221;&lt;/p&gt;</summary><category term="Mathematics"></category><category term="Protest"></category><category term="Activism"></category><category term="Brazil"></category></entry><entry><title>HelloÂ World!</title><link href="https://politicalphysicist.github.io/hello-world.html" rel="alternate"></link><published>2013-06-29T23:50:00+01:00</published><updated>2013-06-29T23:50:00+01:00</updated><author><name>C. MacMackin</name></author><id>tag:politicalphysicist.github.io,2013-06-29:hello-world.html</id><summary type="html">&lt;p&gt;Well, I&amp;#8217;ve decided to start a blog. Having set up a 
&lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt; as a webserver, I thought I&amp;#8217;d try
setting up a blog on it. We&amp;#8217;ll see how good I am at keeping it up to&amp;nbsp;date.&lt;/p&gt;
&lt;p&gt;Originally I intended to write primarily about politics (the name of the 
blog describing where I fall politically). However, I&amp;#8217;ve been going through
a bit of a slump lately, when it comes to politics. Eventually my passion
will come back, hopefully. But because of this, I&amp;#8217;ll be talking about many
things. Among&amp;nbsp;them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Science&lt;/li&gt;
&lt;li&gt;Astronomy/Physics&lt;/li&gt;
&lt;li&gt;Socialism&lt;/li&gt;
&lt;li&gt;Politics&lt;/li&gt;
&lt;li&gt;Environmentalism&lt;/li&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;Computer&amp;nbsp;Programming&lt;/li&gt;
&lt;li&gt;Being&amp;nbsp;Gay&lt;/li&gt;
&lt;li&gt;Asperger&amp;#8217;s&amp;nbsp;Syndrome&lt;/li&gt;
&lt;li&gt;Musical&amp;nbsp;Theatre&lt;/li&gt;
&lt;li&gt;My&amp;nbsp;Life&lt;/li&gt;
&lt;li&gt;My&amp;nbsp;Thoughts&lt;/li&gt;
&lt;li&gt;My Grumbling (which may be related to any or all of the&amp;nbsp;above)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope that my writings will interest, challenge, amuse, educate, 
entertain, stimulate, and/or otherwise engage you. Enjoy&amp;nbsp;reading!&lt;/p&gt;</summary><category term="Personal"></category><category term="Thoughts"></category><category term="Blogging"></category></entry></feed>